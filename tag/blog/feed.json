{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"blog\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/45934af9/",
            "url": "https://smile1231.github.io/posts/45934af9/",
            "title": "使用vscode书写hexo博客粘贴图片解决方案",
            "date_published": "2021-11-17T06:22:03.000Z",
            "content_html": "<p>以前都是在 <code>Vscode</code>  中写一些 <code>MarkDown</code>  文档，然后上传到 <code>GitHub</code>  上做好目录供阅读使用:</p>\n<img data-src=\"/posts/45934af9/2021-11-17-14-35-44.png\" class=\"\">\n<p>如今搭建好了 <code>Blog</code> , 图片粘贴也是必不可少的，翻阅大量网站资料，目前本人是采用的如下方式:</p>\n<span id=\"more\"></span>\n<ul>\n<li>\n<p>修改 <code>hexo</code>  配置文件:  <code>post_asset_folder: true</code> , 开启之后，生成新的 <code>post</code>  时，会在 <code>source/_posts/</code>  下创建一个同名文件夹</p>\n <img data-src=\"/posts/45934af9/2021-11-17-14-41-29.png\" class=\"\">\n</li>\n<li>\n<p>下载插件: <code>paste image</code>  <img data-src=\"/posts/45934af9/2021-11-17-14-47-25.png\" class=\"\"><br>\n这个插件用来在 md 文档中粘贴图片，默认会在文档的同级目录下新建一个图片文件，并在 <code>md</code>  中插入一行相对路径的图片代码。迎合上述 <code>hexo</code>  的新图片插入方式，可以在 <code>vscode</code>  的 <code>user-settings</code>  里新增两条配置:</p>\n<img data-src=\"/posts/45934af9/2021-11-17-14-49-06.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-49-20.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-49-44.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-50-14.png\" class=\"\">\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;pasteImage.path&quot;</span>: <span class=\"string\">&quot;$&#123;currentFileNameWithoutExt&#125;/&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;pasteImage.insertPattern&quot;</span>: <span class=\"string\">&quot;&#123;% asset_img $&#123;imageFileName&#125; %&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这样以来，粘贴的图片就会保存到 md 文档的同名文件夹下，文档中将插入 <code>hexo asset</code>  语法的代码。然后再复制或者剪切之后的图片，使用快捷键.( <code>windows</code>  是 <code>ctrl+Alt+V</code> , <code>Mac</code>  是 <code>Command+option+V</code> ), 但是 <code>hexo clean -&gt; hexo g -&gt; hexo s</code>  之后图片就可以正常显示了</p>\n<img data-src=\"/posts/45934af9/2021-11-17-15-16-19.png\" class=\"\">\n</li>\n<li>\n<p>(以下的步骤需要修改到 <code>markdown</code>  源码，慎重考虑), 由于重新新建一个文件夹的特殊性，所以需要略微修改</p>\n<ul>\n<li>下载预览插件:  <code>Markdown Preview Enhanced</code><img data-src=\"/posts/45934af9/2021-11-17-15-01-16.png\" class=\"\">\n</li>\n<li>现在就要利用这个功能来解决一个问题： <code>vscode</code>  内无法预览代码的图片。 <code>ctrl+shift+P</code>  输入 <code>Markdown Preview Enhanced: Extend Parser</code>  调出插件的 <code>parse.js</code>  文件，修改其中的 <code>onWillParseMarkdown</code>  方法：</li>\n</ul>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\"> <span class=\"attr\">onWillParseMarkdown</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">markdown</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">//markdown参数打印出来是整个文件的内容</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> a = markdown.split(<span class=\"string\">&quot;\\n&quot;</span>);<span class=\"comment\">//通过下面第一张图片内容通过换行符进行切割</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> b = a[<span class=\"number\">1</span>].substring(<span class=\"number\">6</span>); <span class=\"comment\">//获取到title行字符,然后再去除空格即可获得图片的路径</span></span><br><span class=\"line\">     markdown = markdown.replace(</span><br><span class=\"line\">       <span class=\"comment\">//以下为代码，注释是因为markdown语法会渲染出错，但是是正确代码</span></span><br><span class=\"line\">     <span class=\"comment\">//  /\\&#123;%\\s*asset_img\\s*(.*)\\s*%\\&#125;/g,</span></span><br><span class=\"line\">      <span class=\"comment\">// (whole, content) =&gt; (&#x27;{% asset_img &#x27;+content+&#x27;)&#x27;  %}</span></span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">return</span> resolve(markdown)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <img data-src=\"/posts/45934af9/2021-11-17-18-00-53.png\" class=\"\">\n<p>尝试过后，图片的预览功能就能实现啦.</p>\n <img data-src=\"/posts/45934af9/2021-11-17-18-03-07.png\" class=\"\">\n</li>\n</ul>\n<p>参考链接 (图片重写预览功能有错误，本文已经修正):<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5iZWkudG9wL3ZzY29kZSVFNyVCQyU5NiVFNSU4NiU5OW1kLw==\">https://linbei.top/vscode 编写 md/</span></p>\n",
            "tags": [
                "blog",
                "hexo",
                "next"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/575a6046/",
            "url": "https://smile1231.github.io/posts/575a6046/",
            "title": "Hexo-Next主题如何文章置顶",
            "date_published": "2021-11-17T03:06:14.000Z",
            "content_html": "<h1 id=\"文章置顶\"><a class=\"markdownIt-Anchor\" href=\"#文章置顶\">#</a> 文章置顶</h1>\n<p><code>Hexo</code>  本身并没有内置文章置顶功能，因此需要自行安装。不过  <code>Hexo</code>  本身有一个对文章排序的组件，也就是在站点配置文件内的  <code>index_generator</code>  选项，置顶功能其实就是每次排序的时候，把其中的置顶文章排在最前，本质上是一个排序组件， <code>Hexo</code>  默认的是  <code>hexo-generator-index</code> ，所以先卸载再重新安装一个可以置顶的排序组件：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先卸载</span><br><span class=\"line\">npm uninstall --save hexo-generator-index</span><br><span class=\"line\"></span><br><span class=\"line\"># 再安装</span><br><span class=\"line\">npm install --save hexo-generator-index-pin-top</span><br></pre></td></tr></table></figure>\n<p>从插件名字上就能看得出来支持置顶了。该插件的  <code>GitHub</code>  地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldGNhbi9oZXhvLWdlbmVyYXRvci1pbmRleC1waW4tdG9w\">hexo-generator-index-pin-top</span>。插件安装完之后，只需要在文章头部信息栏内设置  <code>top</code>  属性即可：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 写在最前面</span><br><span class=\"line\">hide: false</span><br><span class=\"line\"><span class=\"section\">top: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<p>这样这篇文章就具有置顶效果了。不过，仅仅只是这么做，文章虽然确实置顶了，但是从文章列表上来看，和普通的文章没什么不同。如果不特意去对比文章发布时间，可能会以为只是最新的文章而已。例如一些说明、通知之类的，为了能有个比较突出的标志，可以在  <code>next/layout/_macro/post.swig</code>  文件中找到以下位置并添加代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-thumb-tack&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: #EB6D39&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">#FFFF00</span>\t&gt;</span>置顶<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/575a6046/2021-11-17-13-47-07.png\" class=\"\">\n<p>效果如下:</p>\n<img data-src=\"/posts/575a6046/2021-11-17-13-54-56.png\" class=\"\">\n<h2 id=\"关于在hexo中的小图标\"><a class=\"markdownIt-Anchor\" href=\"#关于在hexo中的小图标\">#</a> 关于在 <code>Hexo</code>  中的小图标</h2>\n<p>使用 <code>Hexo</code>  搭建的 <code>Blog</code>  中，都是从专门的图标库中获取:</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZD1nYWxsZXJ5\">国外地址</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5kYXNoZ2FtZS5jb20v\">国内地址</span></li>\n</ul>\n<p>例如在主题的配置文件 <code>_config.yml</code>  中</p>\n<img data-src=\"/posts/575a6046/2021-11-17-14-01-18.png\" class=\"\">\n<p>都是使用的图标库中的图标</p>\n",
            "tags": [
                "blog",
                "hexo",
                "next"
            ]
        }
    ]
}