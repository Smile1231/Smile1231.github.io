{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"ci/cd\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/d05062ae/",
            "url": "https://smile1231.github.io/posts/d05062ae/",
            "title": "Java 操作Jenkins",
            "date_published": "2022-08-10T16:47:15.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamVua2lucy5pby9kb2MvYm9vay91c2luZy9yZW1vdGUtYWNjZXNzLWFwaS8=\">Jenkins-WIKI</span></p>\n<p>参考文章: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5teWRscS5jbHViL2FydGljbGUvMjMv\">利用 Java 操作 Jenkins API 实现对 Jenkins 的控制详解</span></p>\n",
            "tags": [
                "Java",
                "Jenkins",
                "CI/CD"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/171f1b7f/",
            "url": "https://smile1231.github.io/posts/171f1b7f/",
            "title": "Jenkins/CICD",
            "date_published": "2022-08-08T14:40:05.000Z",
            "content_html": "<p><a href=\"https://smile1231.github.io/posts/11faeb76/\"><code>Docker</code>中安装<code>Jenkins</code></a></p>\n<p><a href=\"https://www.cnblogs.com/yungyu16/p/12928802.html#%E6%93%8D%E4%BD%9C%E4%BB%BB%E5%8A%A1\"><code>Java</code>操作<code>Jenkins</code>参考</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pY29kZS5iZXN0L2kvODI4MDAwNDYwNDU0MDk=\">参考文章</span></p>\n<p>完成<code>jenkins</code>在docker中的启动安装对应的插件之后</p>\n<p>由于我是使用的<code>docker</code>启动的<code>Jenkins</code>,所以需要在容器中装相应的环境：<code>jdk</code>,<code>maven</code>,<code>git</code>等等</p>\n<p>进入容器内部:<code>docker exec -u root -it myJenkins10242 bash</code></p>\n<h2 id=\"安装vim\"><a href=\"#安装vim\" class=\"headerlink\" title=\"安装vim\"></a>安装<code>vim</code></h2><blockquote>\n<p>在这之前需要对<code>apt</code>进行一下升级 </p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br></pre></td></tr></table></figure>\n\n<p>安装指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install vim</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/171f1b7f/2022-08-10-23-41-19.png\" class=\"\">\n\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装<code>jdk</code></h2><p>这里只讲解手动安装</p>\n<p>查看架构，下载arm64版本的jdk，这里下载jdk11，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamRrMTEtYXJjaGl2ZS1kb3dubG9hZHMuaHRtbCNsaWNlbnNlLWxpZ2h0Ym94\">jdk 11 aarch64_bin.tar.gz</span></p>\n<img data-src=\"/posts/171f1b7f/2022-08-10-22-18-27.png\" class=\"\">\n\n<p>我这边将包放在了<code>docker</code>的挂载目录上</p>\n<img data-src=\"/posts/171f1b7f/2022-08-10-23-52-53.png\" class=\"\">\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar -zxvf jdk-11.0.15_linux-aarch64_bin.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># 配置环境变量</span></span><br><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>在最后加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/var/jenkins_home/install_package/jdk-11.0.15/</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<p>最后：<code>source /etc/profile</code> 即可</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-02-07.png\" class=\"\">\n<h2 id=\"安装maven\"><a href=\"#安装maven\" class=\"headerlink\" title=\"安装maven\"></a>安装<code>maven</code></h2><p>安装<code>maven</code>的方法也类似，下载版本为<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNoaXZlLmFwYWNoZS5vcmcvZGlzdC9tYXZlbi9tYXZlbi0zLzMuNS40L2JpbmFyaWVzL2FwYWNoZS1tYXZlbi0zLjUuNC1iaW4udGFyLmd6\">maven-3.5.4</span></p>\n<p>依然放在了挂在目录中的<code>install_package</code>中</p>\n<p>解压：<code>tar -zxvf apache-maven-3.5.4-bin.tar.gz</code></p>\n<p>配置环境变量: <code>vim /etc/profile</code><br>加上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> MAVEN_HOME=/var/jenkins_home/install_package/apache-maven-3.5.4</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$MAVEN_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n<p>最后：<code>source /etc/profile</code> 即可</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-06-59.png\" class=\"\">\n\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a><code>Git</code></h2><p>容器中自带了<code>git</code>，所以无需安装，但是需要查看路径: <code>which git</code>，路径为：<code>/usr/bin/git</code></p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-10-10.png\" class=\"\">\n\n<h2 id=\"配置Jenkins\"><a href=\"#配置Jenkins\" class=\"headerlink\" title=\"配置Jenkins\"></a>配置<code>Jenkins</code></h2><p>打开<code>Global Tool Configuration</code>:</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-12-49.png\" class=\"\">\n\n<p>这边是配置<code>maven</code>中的<code>settings</code>文件地址，我地址为：<code>/var/jenkins_home/install_package/apache-maven-3.5.4/conf/settings.xml</code></p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-15-24.png\" class=\"\">\n\n\n<p>分别配置上<code>jdk</code>,<code>git</code>,<code>maven</code>的本地目录,然后<code>Apply</code>和<code>Save</code>：</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-17-12.png\" class=\"\">\n\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-17-47.png\" class=\"\">\n\n<h2 id=\"安装plugin\"><a href=\"#安装plugin\" class=\"headerlink\" title=\"安装plugin\"></a>安装<code>plugin</code></h2><p>我们会发现新建一个<code>Item</code>是没有<code>Maven</code>项目的，需要安装一下对应的插件:<code>Maven Integration</code></p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-20-56.png\" class=\"\">\n\n<p>等待安装完成即可</p>\n<h2 id=\"Maven项目部署测试\"><a href=\"#Maven项目部署测试\" class=\"headerlink\" title=\"Maven项目部署测试\"></a><code>Maven</code>项目部署测试</h2><h3 id=\"新建一个Maven，名字自取\"><a href=\"#新建一个Maven，名字自取\" class=\"headerlink\" title=\"新建一个Maven，名字自取\"></a>新建一个<code>Maven</code>，名字自取</h3><img data-src=\"/posts/171f1b7f/2022-08-11-00-22-22.png\" class=\"\">\n\n<h3 id=\"项目描述：\"><a href=\"#项目描述：\" class=\"headerlink\" title=\"项目描述：\"></a>项目描述：</h3><img data-src=\"/posts/171f1b7f/2022-08-11-00-26-00.png\" class=\"\">\n\n<h3 id=\"配置github\"><a href=\"#配置github\" class=\"headerlink\" title=\"配置github\"></a>配置<code>github</code></h3><img data-src=\"/posts/171f1b7f/2022-08-11-00-29-23.png\" class=\"\">\n\n<blockquote>\n<p>关于<code>GitHub</code>凭证配置</p>\n</blockquote>\n<p>配置地址： <code>https://github.com/settings/tokens</code></p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-30-37.png\" class=\"\">\n\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-31-02.png\" class=\"\">\n\n<p>将生成的<code>token</code>记载到本地</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-31-43.png\" class=\"\">\n\n<blockquote>\n<p><code>Jenkins</code>添加凭据</p>\n</blockquote>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-33-43.png\" class=\"\">\n\n<h3 id=\"github访问超时时间\"><a href=\"#github访问超时时间\" class=\"headerlink\" title=\"github访问超时时间\"></a><code>github</code>访问超时时间</h3><p>检出超时时间：</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-34-52.png\" class=\"\">\n\n<p><code>clone</code>超时时间：</p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-36-01.png\" class=\"\">\n\n<h3 id=\"Build阶段\"><a href=\"#Build阶段\" class=\"headerlink\" title=\"Build阶段\"></a><code>Build</code>阶段</h3><p><code>clean package -Dmaven.test.skip=true -Prd -U</code></p>\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-39-04.png\" class=\"\">\n\n<h3 id=\"配置构建项目后执行的Shell脚本\"><a href=\"#配置构建项目后执行的Shell脚本\" class=\"headerlink\" title=\"配置构建项目后执行的Shell脚本\"></a>配置构建项目后执行的<code>Shell</code>脚本</h3><img data-src=\"/posts/171f1b7f/2022-08-11-00-42-20.png\" class=\"\">\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#输入Maven打包后的项目名称</span></span><br><span class=\"line\">app=xxx-0.0.1-SNAPSHOT</span><br><span class=\"line\"><span class=\"comment\">#项目移动的目的地址</span></span><br><span class=\"line\">path=/usr/xxx</span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is app : <span class=\"variable\">$app</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#若项目已启动，杀死旧进程</span></span><br><span class=\"line\">api_pid=`ps -ef | grep <span class=\"string\">&quot;<span class=\"variable\">$app</span>.jar&quot;</span> | grep -v grep | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> api_pid = <span class=\"variable\">$api_pid</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$api_pid</span>&quot;</span> != <span class=\"string\">&quot;&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"built_in\">kill</span> api</span><br><span class=\"line\">        <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$api_pid</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> sleep 3s</span><br><span class=\"line\">        sleep 1</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> sleep 2s</span><br><span class=\"line\">        sleep 1</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> sleep 1s</span><br><span class=\"line\">        sleep 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#将jar包从jenkins工作空间中移动到指定路径下</span></span><br><span class=\"line\">mv /root/.jenkins/workspace/项目名/target/<span class=\"variable\">$app</span>.jar <span class=\"variable\">$path</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$path</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#防止进程被杀死</span></span><br><span class=\"line\">BUILD_ID=dontKillMe</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#后台进程形式启动项目，日志文件为out.log</span></span><br><span class=\"line\">nohup java -jar <span class=\"variable\">$app</span>.jar &gt;&gt; out.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$app</span> start success</span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br></pre></td></tr></table></figure>\n<h2 id=\"Jenkins运行\"><a href=\"#Jenkins运行\" class=\"headerlink\" title=\"Jenkins运行\"></a><code>Jenkins</code>运行</h2><img data-src=\"/posts/171f1b7f/2022-08-11-00-43-49.png\" class=\"\">\n\n<img data-src=\"/posts/171f1b7f/2022-08-11-00-45-15.png\" class=\"\">\n",
            "tags": [
                "Jenkins",
                "CI/CD"
            ]
        }
    ]
}