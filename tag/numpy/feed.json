{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"numpy\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/1b930e38/",
            "url": "https://smile1231.github.io/posts/1b930e38/",
            "title": "Machine Learning essays",
            "date_published": "2022-07-17T13:44:54.000Z",
            "content_html": "<p>最近在看 <code>数据挖掘</code> 以及 <code>ML</code>  的课程</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmh3bC5jb29sL3B5dGhvbi8lRTYlOTUlQjAlRTYlOEQlQUUlRTYlOEMlOTYlRTYlOEUlOTgv\">数据挖掘资料</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnVtcHkub3JnLmNuL3JlZmVyZW5jZS8=\">numpy reference</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2lraXQtbGVhcm4ub3JnL3N0YWJsZS9tb2R1bGVzL2NsYXNzZXMuaHRtbA==\">Sklearn Reference</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3dlYmdyYXBodml6LmNvbS8=\">WebGraph</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FnZ2xlLmNvbS9kYXRhc2V0cy8=\">Kaggle</span></p>\n<h2 id=\"python中的head方法\"><a class=\"markdownIt-Anchor\" href=\"#python中的head方法\">#</a>  <code>python</code>  中的 <code>head</code>  方法</h2>\n<p><code>head()</code>  根据位置返回对象的前 <code>n</code>  行。 如果你的对象中包含正确的数据类型，则对于快速测试很有用。 此方法用于返回数据帧或序列的前 <code>n</code>  行 (默认值为 <code>5</code> )。  <code>n：</code> 它是指返回行数的整数值。</p>\n<h2 id=\"pandas交叉表\"><a class=\"markdownIt-Anchor\" href=\"#pandas交叉表\">#</a>  <code>pandas</code>  交叉表</h2>\n<p>交叉表是由列和行组成的双向表。 它也被称为数据透视表或多维表。 其最大的优势是能够构造、汇总及显示大量数据。 交叉表还可用于确定行变量与列变量之间是否存在关系。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnRpYmNvLmNvbS9wdWIvc3BvdGZpcmVfd2ViX3BsYXllci82LjAuMC1ub3ZlbWJlci0yMDEzL3poLUNOL1dlYkhlbHAvR1VJRC0xRjY3QjJGMy0wNTZCLTQzMjQtQjJDQy0xNEQ3M0QzNzg2OTMuaHRtbA==\">参考链接</span></p>\n<h2 id=\"网格搜索gridsearchcv\"><a class=\"markdownIt-Anchor\" href=\"#网格搜索gridsearchcv\">#</a> 网格搜索（ <code>GridSearchCV</code> ）</h2>\n<p><code>GridSearch和CV</code> ，即网格搜索和交叉验证</p>\n<p>网格搜索算法是一种通过遍历给定的参数组合来优化模型表现的方法</p>\n<p>为何使用：超参数选择不恰当，就会出现欠拟合或者过拟合的问题</p>\n<p>内容： 网格搜索，搜索的是参数，即在指定的参数范围内，按步长依次调整参数，利用调整的参数训练学习器，从所有的参数中找到在验证集上精度最高的参数，这其实是一个训练和比较的过程。</p>\n<p><code>Grid Search</code> ：一种调参手段；穷举搜索：在所有候选的参数选择中，通过循环遍历，尝试每一种可能性，表现最好的参数就是最终的结果</p>\n<p>用法：网格搜索适用于三四个（或者更少）的超参数（当超参数的数量增长时，网格搜索的计算复杂度会呈现指数增长，这时候则使用随机搜索），用户列出一个较小的超参数值域，这些超参数至于的笛卡尔积（排列组合）为一组组超参数。网格搜索算法使用每组超参数训练模型并挑选验证集误差最小的超参数组合</p>\n<p>缺点：遍历所有组合，比较耗时</p>\n<h2 id=\"打印表头\"><a class=\"markdownIt-Anchor\" href=\"#打印表头\">#</a> 打印表头</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">titanic = pd.read_csv(<span class=\"string\">&quot;./titanic/train.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(titanic.columns)</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/1b930e38/2022-07-29-13-01-44.png\" class=\"\">\n<h2 id=\"pandas的inplace参数\"><a class=\"markdownIt-Anchor\" href=\"#pandas的inplace参数\">#</a>  <code>pandas</code>  的 <code>inplace</code>  参数</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 关于`python`中的随机种子——`random_state`</span><br><span class=\"line\"></span><br><span class=\"line\">`random_state`是一个随机种子，是在任意带有随机性的类或函数里作为参数来控制随机模式。当`random_state`取某一个值时，也就确定了一种规则。</span><br><span class=\"line\"></span><br><span class=\"line\">`random_state`可以用于很多函数，一般用于以下三个地方：1、训练集测试集的划分 2、构建决策树 3、构建随机森林</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## 查看数据类型</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"># type(a)   DataFrame数据类型</span><br><span class=\"line\"></span><br><span class=\"line\">df.dtypes  #查看各列数据类型</span><br><span class=\"line\">df[A].dtypes  #查看A列数据类型</span><br><span class=\"line\"></span><br><span class=\"line\">df[A].astypes(int)#将A列数据类型转换为int</span><br></pre></td></tr></table></figure>",
            "tags": [
                "Machine Learning",
                "numpy",
                "pandas",
                "sklearn"
            ]
        }
    ]
}