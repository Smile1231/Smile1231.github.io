{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"数据结构\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/159c6098/",
            "url": "https://smile1231.github.io/posts/159c6098/",
            "title": "阻塞队列",
            "date_published": "2022-03-13T08:31:51.000Z",
            "content_html": "<h2 id=\"阻塞队列接口结构和实现类\"><a class=\"markdownIt-Anchor\" href=\"#阻塞队列接口结构和实现类\">#</a> 阻塞队列接口结构和实现类</h2>\n<p><strong>阻塞队列</strong>，顾名思义，首先它是一个队列，而一个阻塞队列在数据结构中所起的作用大致如下图所示：</p>\n<img data-src=\"/posts/159c6098/2022-03-13-16-33-09.png\" class=\"\">\n<span id=\"more\"></span>\n<p>线程 1 往阻塞队列中添加元素，而线程 2 从阻塞队列中移除元素。</p>\n<p>当阻塞队列是空时，从队列中获取元素的操作将会被阻塞。</p>\n<p>当阻塞队列是满时，往队列里添加元素的操作将会被阻塞。</p>\n<p>试图从空的阻塞队列中获取元素的线程将会被阻塞，直到其他的线程往空的队列插入新的元素。</p>\n<p>同样试图往已满的阻塞队列中添加新元素的线程同样也会被阻塞，直到其他的线程从列中移除一个或者多个元素或者完全清空队列后使队列重新变得空闲起来并后续新增</p>\n<p><strong>为什么用？有什么好处？</strong></p>\n<p>在多线程领域：所谓阻塞，在某些情况下余挂起线程（即阻塞），一旦条件满足，被挂起的线程又会自动被唤醒</p>\n<p>为什么需要 <code>BlockingQueue</code> <br>\n 好处是我们不需要关心什么时候需要阻塞线程，什么时候需要唤醒线程，因为这一切 <code>BlockingQueue</code>  都给你一手包办了</p>\n<p>在 <code>Concurrent</code>  包发布以前，在多线程环境下，我们每个程序员都必须去自己控制这些细节，尤其还要兼顾效率和线程安全，而这会给我们的程序带来不小的复杂度。</p>\n<p>架构介绍</p>\n<img data-src=\"/posts/159c6098/2022-03-13-16-39-46.png\" class=\"\">\n<p>种类分析：</p>\n<ul>\n<li><code>ArrayBlockingQueue</code> ：由数组结构组成的有界阻塞队列。</li>\n<li><code>LinkedBlockingQueue</code> ：由链表结构组成的有界（但大小默认值为 <code>Integer.MAX_VALUE</code> ）阻塞队列。</li>\n<li><code>PriorityBlockingQueue</code> ：支持优先级排序的无界阻塞队列。</li>\n<li><code>DelayQueue</code> ：使用优先级队列实现妁延迟无界阻塞队列。</li>\n<li><code>SynchronousQueue</code> ：不存储元素的阻塞队列。</li>\n<li><code>LinkedTransferQueue</code> ：由链表结构绒成的无界阻塞队列。</li>\n<li><code>LinkedBlockingDeque</code> ：由链表结构组成的双向阻塞队列。</li>\n</ul>\n<p><strong> <code>BlockingQueue</code>  的核心方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>方法类型</th>\n<th>抛出异常</th>\n<th>特殊值</th>\n<th>阻塞</th>\n<th>超时</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>插入</td>\n<td>add(e)</td>\n<td>offer(e)</td>\n<td>put(e)</td>\n<td>offer(e,time,unit)</td>\n</tr>\n<tr>\n<td>移除</td>\n<td>remove()</td>\n<td>poll()</td>\n<td>take()</td>\n<td>poll(time,unit)</td>\n</tr>\n<tr>\n<td>检查</td>\n<td>element()</td>\n<td>peek()</td>\n<td>不可用</td>\n<td>不可用</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>性质</td>\n<td>说明</td>\n</tr>\n<tr>\n<td>----</td>\n<td>—</td>\n</tr>\n<tr>\n<td>抛出异常</td>\n<td>当阻塞队列满时：在往队列中 add 插入元素会抛出 IIIegalStateException：Queue full    当阻塞队列空时：再往队列中 remove 移除元素，会抛出 NoSuchException</td>\n</tr>\n<tr>\n<td>特殊性</td>\n<td>插入方法，成功 true，失败 false  移除方法：成功返回出队列元素，队列没有就返回空</td>\n</tr>\n<tr>\n<td>一直阻塞</td>\n<td>当阻塞队列满时，生产者继续往队列里 put 元素，队列会一直阻塞生产线程直到 put 数据 or 响应中断退出。  当阻塞队列空时，消费者线程试图从队列里 take 元素，队列会一直阻塞消费者线程直到队列可用。</td>\n</tr>\n<tr>\n<td>超时退出</td>\n<td>当阻塞队列满时，队里会阻塞生产者线程一定时间，超过限时后生产者线程会退出</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"线程通信之生产者消费者传统\"><a class=\"markdownIt-Anchor\" href=\"#线程通信之生产者消费者传统\">#</a> 线程通信之生产者消费者传统</h2>\n<p>阻塞队列用在哪里？</p>\n<ul>\n<li>生产者消费者模式\n<ul>\n<li>传统版（ <code>synchronized, wait, notify</code> ）</li>\n<li>阻塞队列版（ <code>lock, await, signal</code> ）</li>\n</ul>\n</li>\n<li>线程池</li>\n<li>消息中间件</li>\n</ul>\n<p>实现一个简单的生产者消费者模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShareData</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Lock lock = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition = lock.newCondition();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">increment</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 同步代码块，加锁</span></span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">                condition.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            number++;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 通知 唤醒</span></span><br><span class=\"line\">            condition.signalAll();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">decrement</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 同步代码块，加锁</span></span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 等待不能消费</span></span><br><span class=\"line\">                condition.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            number--;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 通知 唤醒</span></span><br><span class=\"line\">            condition.signalAll();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意， <code>increment()</code>  和 <code>decrement()</code>  内的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">    condition.await();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不能用 (javaw 文档中指出)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">    condition.await();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"synchronized和lock有什么区别\"><a class=\"markdownIt-Anchor\" href=\"#synchronized和lock有什么区别\">#</a>  <code>Synchronized</code>  和 <code>Lock</code>  有什么区别</h2>\n<ol>\n<li><code>synchronized</code>  属于 <code>JVM</code>  层面，属于 <code>java</code>  的关键字\n<ul>\n<li><code>monitorenter</code> （底层是通过 <code>monitor</code>  对象来完成，其实 <code>wait/notify</code>  等方法也依赖于 <code>monitor</code>  对象 只能在同步块或者方法中才能调用  <code>wait/ notify</code>  等方法）</li>\n<li><code>Lock</code>  是具体类（ <code>java.util.concurrent.locks.Lock</code> ）是 <code>api</code>  层面的锁</li>\n</ul>\n</li>\n<li>使用方法：\n<ul>\n<li><code>synchronized：</code> 不需要用户去手动释放锁，当 <code>synchronized</code>  代码执行后，系统会自动让线程释放对锁的占用。</li>\n<li><code>ReentrantLock：</code> 则需要用户去手动释放锁，若没有主动释放锁，就有可能出现死锁的现象，需要 <code>lock()</code>  和  <code>unlock()</code>  配置 <code>try catch</code>  语句来完成</li>\n</ul>\n</li>\n<li>等待是否中断\n<ul>\n<li><code>synchronized：</code> 不可中断，除非抛出异常或者正常运行完成。</li>\n<li><code>ReentrantLock：</code> 可中断，可以设置超时方法\n<ul>\n<li>设置超时方法， <code>trylock(long timeout, TimeUnit unit)</code></li>\n<li><code>lockInterrupible()</code>  放代码块中，调用 <code>interrupt()</code>  方法可以中断</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>加锁是否公平\n<ul>\n<li><code>synchronized</code> ：非公平锁</li>\n<li><code>ReentrantLock</code> ：默认非公平锁，构造函数可以传递 <code>boolean</code>  值， <code>true</code>  为公平锁， <code>false</code>  为非公平锁</li>\n</ul>\n</li>\n<li>锁绑定多个条件 <code>Condition</code>\n<ul>\n<li><code>synchronized</code> ：没有，要么随机，要么全部唤醒</li>\n<li><code>ReentrantLock</code> ：用来实现分组唤醒需要唤醒的线程，可以精确唤醒，而不是像 <code>synchronized</code>  那样，要么随机，要么全部唤醒</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"锁绑定多个条件condition\"><a class=\"markdownIt-Anchor\" href=\"#锁绑定多个条件condition\">#</a> 锁绑定多个条件 <code>Condition</code></h2>\n<p>实现场景</p>\n<p>多线程之间按顺序调用，实现  <code>A-&gt; B -&gt; C</code>  三个线程启动，要求如下：<br>\n <code>AA</code>  打印 <code>5</code>  次， <code>BB</code>  打印 <code>10</code>  次， <code>CC</code>  打印 <code>15</code>  次<br>\n紧接着<br>\n <code>AA</code>  打印 <code>5</code>  次， <code>BB</code>  打印 <code>10</code>  次， <code>CC</code>  打印 <code>15</code>  次<br>\n…<br>\n 来 <code>10</code>  轮</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.Condition;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.Lock;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShareResource</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// A 1   B 2   c 3</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个重入锁</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Lock lock = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这三个相当于备用钥匙</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition1 = lock.newCondition();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition2 = lock.newCondition();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition3 = lock.newCondition();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print5</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition1.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知B线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知2号去干活了</span></span><br><span class=\"line\">            condition2.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print10</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition2.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知C线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知2号去干活了</span></span><br><span class=\"line\">            condition3.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print15</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition3.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知C线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知1号去干活了</span></span><br><span class=\"line\">            condition1.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SynchronizedAndReentrantLockDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ShareResource shareResource = <span class=\"keyword\">new</span> ShareResource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                    shareResource.print5();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;A&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                shareResource.print10();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;B&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                shareResource.print15();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;C&quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">10</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">11</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">12</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">13</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">14</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">10</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">11</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">12</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">13</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程通信之生产者消费者阻塞队列版\"><a class=\"markdownIt-Anchor\" href=\"#线程通信之生产者消费者阻塞队列版\">#</a> 线程通信之生产者消费者阻塞队列版</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.BlockingQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 默认开启，进行生产消费</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里用到了volatile是为了保持数据的可见性，也就是当TLAG修改时，要马上通知其它线程进行修改</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> FLAG = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用原子包装类，而不用number++</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AtomicInteger atomicInteger = <span class=\"keyword\">new</span> AtomicInteger();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这里不能为了满足条件，而实例化一个具体的SynchronousBlockingQueue</span></span><br><span class=\"line\">    BlockingQueue&lt;String&gt; blockingQueue = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 而应该采用依赖注入里面的，构造注入方法传入</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(BlockingQueue&lt;String&gt; blockingQueue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.blockingQueue = blockingQueue;</span><br><span class=\"line\">        <span class=\"comment\">// 查询出传入的class是什么</span></span><br><span class=\"line\">        System.out.println(blockingQueue.getClass().getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">myProducer</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        String data = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> retValue;</span><br><span class=\"line\">        <span class=\"comment\">// 多线程环境的判断，一定要使用while进行，防止出现虚假唤醒</span></span><br><span class=\"line\">        <span class=\"comment\">// 当FLAG为true的时候，开始生产</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(FLAG) &#123;</span><br><span class=\"line\">            data = atomicInteger.incrementAndGet() + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 2秒存入1个data</span></span><br><span class=\"line\">            retValue = blockingQueue.offer(data, <span class=\"number\">2L</span>, TimeUnit.SECONDS);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(retValue) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 插入队列:&quot;</span> + data  + <span class=\"string\">&quot;成功&quot;</span> );</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 插入队列:&quot;</span> + data  + <span class=\"string\">&quot;失败&quot;</span> );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                TimeUnit.SECONDS.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 停止生产，表示FLAG=false，生产介绍&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">myConsumer</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        String retValue;</span><br><span class=\"line\">        <span class=\"comment\">// 多线程环境的判断，一定要使用while进行，防止出现虚假唤醒</span></span><br><span class=\"line\">        <span class=\"comment\">// 当FLAG为true的时候，开始生产</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(FLAG) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 2秒存入1个data</span></span><br><span class=\"line\">            retValue = blockingQueue.poll(<span class=\"number\">2L</span>, TimeUnit.SECONDS);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(retValue != <span class=\"keyword\">null</span> &amp;&amp; retValue != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费队列:&quot;</span> + retValue  + <span class=\"string\">&quot;成功&quot;</span> );</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                FLAG = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费失败，队列中已为空，退出&quot;</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 退出消费队列</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 停止生产的判断</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.FLAG = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProducerConsumerWithBlockingQueueDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 传入具体的实现类， ArrayBlockingQueue</span></span><br><span class=\"line\">        MyResource myResource = <span class=\"keyword\">new</span> MyResource(<span class=\"keyword\">new</span> ArrayBlockingQueue&lt;String&gt;(<span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 生产线程启动\\n\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                myResource.myProducer();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;producer&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费线程启动&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                myResource.myConsumer();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;consumer&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 5秒后，停止生产和消费</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n\\n5秒中后，生产和消费线程停止，线程结束&quot;</span>);</span><br><span class=\"line\">        myResource.stop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.util.concurrent.ArrayBlockingQueue</span><br><span class=\"line\">producer\t 生产线程启动</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">consumer\t 消费线程启动</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">1</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">1</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">2</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">2</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">3</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">3</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">4</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">4</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">5</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">5</span>成功</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5</span>秒中后，生产和消费线程停止，线程结束</span><br><span class=\"line\">producer\t 停止生产，表示FLAG=<span class=\"keyword\">false</span>，生产介绍</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">consumer\t 消费失败，队列中已为空，退出</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java 面试",
                "数据结构",
                "阻塞队列"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/9f9a6182/",
            "url": "https://smile1231.github.io/posts/9f9a6182/",
            "title": "面试之旅关于数据结构",
            "date_published": "2022-02-16T13:13:39.000Z",
            "content_html": "<h1 id=\"面试之旅关于数据结构\"><a class=\"markdownIt-Anchor\" href=\"#面试之旅关于数据结构\">#</a> 面试之旅关于数据结构</h1>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cDovL2RhdGEuYmlhbmNoZW5nLm5ldC9pbnRyby8=\">数据结构详细讲解</span></strong></p>\n<p>数据结构是计算机存储、组织数据的方式。数据结构是指相互之间存在一种或多种特定关系的数据元素的集合。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。数据结构往往同高效的检索算法和索引技术有关。</p>\n<h2 id=\"数据结构中的逻辑结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构中的逻辑结构\">#</a> 数据结构中的逻辑结构</h2>\n<blockquote>\n<p>集合结构</p>\n</blockquote>\n<p>集合结构的里面的元素关系是孤立的</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-37-01.png\" class=\"\">\n<blockquote>\n<p>线性结构</p>\n</blockquote>\n<p>线性结构里面的元素关系：一对一</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-37-13.png\" class=\"\">\n<blockquote>\n<p>树形结构</p>\n</blockquote>\n<p>树形结构里面的元素关系：一对多</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-37-28.png\" class=\"\">\n<blockquote>\n<p>图结构</p>\n</blockquote>\n<p>图结构里面的元素关系：多对多</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-37-47.png\" class=\"\">\n<h2 id=\"数据结构的物理结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构的物理结构\">#</a> 数据结构的物理结构</h2>\n<p>物理结构：是指数据的逻辑结构在计算机中的存储形式。存储结构有两种：</p>\n<blockquote>\n<p>顺序存储结构：</p>\n</blockquote>\n<p>顺序存储结构：是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-37-57.png\" class=\"\">\n<blockquote>\n<p>链式存储结构</p>\n</blockquote>\n<p>链式存储结构：是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-38-04.png\" class=\"\">\n<h2 id=\"常见的数据结构\"><a class=\"markdownIt-Anchor\" href=\"#常见的数据结构\">#</a> 常见的数据结构</h2>\n<ul>\n<li>\n<p>数组（ <code>Array</code> ）</p>\n</li>\n<li>\n<p>堆栈（ <code>Stack</code> ）</p>\n</li>\n<li>\n<p>队列（ <code>Queue</code> ）</p>\n</li>\n<li>\n<p>链表（ <code>Linked List</code> ）</p>\n</li>\n<li>\n<p>树（ <code>Tree</code> ）</p>\n</li>\n<li>\n<p>图（ <code>Graph</code> ）</p>\n</li>\n<li>\n<p>堆（ <code>Heap</code> ）</p>\n</li>\n<li>\n<p>散列表（ <code>Hash</code> ）</p>\n</li>\n</ul>\n<h2 id=\"链表\"><a class=\"markdownIt-Anchor\" href=\"#链表\">#</a> 链表</h2>\n<p>链表是一种数据结构，和数组同级。比如， <code>Java</code>  中我们使用的 <code>ArrayList</code> ，其实现原理是数组。而 <code>LinkedList</code>  的实现原理就是链表了。链表在进行循环遍历时效率不高，但是插入和删除时优势明显。下面对单向链表做一个介绍。</p>\n<p>单向链表是一种线性表，实际上是由节点（ <code>Node</code> ）组成的，一个链表拥有不定数量的节点。其数据在内存中存储是不连续的，它存储的数据分散在内存中，每个结点只能也只有它能知道下一个结点的存储位置。由 N 各节点（ <code>Node</code> ）组成单向链表，每一个 <code>Node</code>  记录本 <code>Node</code>  的数据及下一个 <code>Node</code> 。向外暴露的只有一个头节点（ <code>Head</code> ），我们对链表的所有操作，都是直接或者间接地通过其头节点来进行的。</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-38-15.png\" class=\"\">\n<p>上图中最左边的节点即为头结点（ <code>Head</code> ），但是添加节点的顺序是从右向左的，添加的新节点会被作为新节点。最先添加的节点对下一节点的引用可以为空。引用是引用下一个节点而非下一个节点的对象。因为有着不断的引用，所以头节点就可以操作所有节点了。</p>\n<p>下图描述了单向链表存储情况。存储是分散的，每一个节点只要记录下一节点，就把所有数据串了起来，形成了一个单向链表。</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-38-25.png\" class=\"\">\n<p>节点（ <code>Node</code> ）是由一个需要储存的对象及对下一个节点的引用组成的。也就是说，节点拥有两个成员：储存的对象、对下一个节点的引用。下面图是具体的说明：</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-38-31.png\" class=\"\">\n<blockquote>\n<p>单链表实现</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zjn.LinkAndQueue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义链表设计</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> zjn</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLink</span> </span>&#123;</span><br><span class=\"line\">    Node head = <span class=\"keyword\">null</span>; <span class=\"comment\">// 头节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 链表中的节点，data代表节点的值，next是指向下一个节点的引用</span></span><br><span class=\"line\"><span class=\"comment\">     * </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> zjn</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">        Node next = <span class=\"keyword\">null</span>;<span class=\"comment\">// 节点的引用，指向下一个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data;<span class=\"comment\">// 节点的对象，即内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(<span class=\"keyword\">int</span> data)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.data = data;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向链表中插入数据</span></span><br><span class=\"line\"><span class=\"comment\">     * </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> d</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addNode</span><span class=\"params\">(<span class=\"keyword\">int</span> d)</span> </span>&#123;</span><br><span class=\"line\">        Node newNode = <span class=\"keyword\">new</span> Node(d);<span class=\"comment\">// 实例化一个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            head = newNode;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Node tmp = head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (tmp.next != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            tmp = tmp.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tmp.next = newNode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index:删除第index个节点</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">deleteNode</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; <span class=\"number\">1</span> || index &gt; length()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            head = head.next;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">        Node preNode = head;</span><br><span class=\"line\">        Node curNode = preNode.next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (curNode != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == index) &#123;</span><br><span class=\"line\">                preNode.next = curNode.next;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            preNode = curNode;</span><br><span class=\"line\">            curNode = curNode.next;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回节点长度</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Node tmp = head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (tmp != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            length++;</span><br><span class=\"line\">            tmp = tmp.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在不知道头指针的情况下删除指定节点</span></span><br><span class=\"line\"><span class=\"comment\">     * </span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> n</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">deleteNode11</span><span class=\"params\">(Node n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n == <span class=\"keyword\">null</span> || n.next == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tmp = n.data;</span><br><span class=\"line\">        n.data = n.next.data;</span><br><span class=\"line\">        n.next.data = tmp;</span><br><span class=\"line\">        n.next = n.next.next;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;删除成功！&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printList</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Node tmp = head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (tmp != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            System.out.println(tmp.data);</span><br><span class=\"line\">            tmp = tmp.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyLink list = <span class=\"keyword\">new</span> MyLink();</span><br><span class=\"line\">        list.addNode(<span class=\"number\">5</span>);</span><br><span class=\"line\">        list.addNode(<span class=\"number\">3</span>);</span><br><span class=\"line\">        list.addNode(<span class=\"number\">1</span>);</span><br><span class=\"line\">        list.addNode(<span class=\"number\">2</span>);</span><br><span class=\"line\">        list.addNode(<span class=\"number\">55</span>);</span><br><span class=\"line\">        list.addNode(<span class=\"number\">36</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;linkLength:&quot;</span> + list.length());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;head.data:&quot;</span> + list.head.data);</span><br><span class=\"line\">        list.printList();</span><br><span class=\"line\">        list.deleteNode(<span class=\"number\">4</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;After deleteNode(4):&quot;</span>);</span><br><span class=\"line\">        list.printList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"树\"><a class=\"markdownIt-Anchor\" href=\"#树\">#</a> 树</h2>\n<p>非线性存储结构</p>\n<img data-src=\"/posts/9f9a6182/2022-02-16-21-38-44.png\" class=\"\">\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2RhdGEuYmlhbmNoZW5nLm5ldC92aWV3LzIzLmh0bWw=\">树的详细讲解</span></p>\n",
            "tags": [
                "Java面试",
                "数据结构"
            ]
        }
    ]
}