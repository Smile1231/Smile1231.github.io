{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"函数式接口\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/1da18d70/",
            "url": "https://smile1231.github.io/posts/1da18d70/",
            "title": "Java8内置四大函数式接口",
            "date_published": "2022-02-12T12:02:47.000Z",
            "content_html": "<h1 id=\"Java8内置函数式接口\"><a href=\"#Java8内置函数式接口\" class=\"headerlink\" title=\"Java8内置函数式接口\"></a><code>Java8</code>内置函数式接口</h1><h2 id=\"函数式接口有什么特点\"><a href=\"#函数式接口有什么特点\" class=\"headerlink\" title=\"函数式接口有什么特点?\"></a>函数式接口有什么特点?</h2><p>函数式接口只有一个方法，可以用注解<code>@FunctionalInterface</code>表示，当加上这个注解之后就给这个接口加上了条件，一旦接口中出现多个方法就会出现问题。</p>\n<h2 id=\"核心内置函数有哪些？\"><a href=\"#核心内置函数有哪些？\" class=\"headerlink\" title=\"核心内置函数有哪些？\"></a>核心内置函数有哪些？</h2><table>\n<thead>\n<tr>\n<th>函数式接口</th>\n<th>参数类型</th>\n<th>返回类型</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Consumer</td>\n<td>T</td>\n<td>void</td>\n<td>对类型T参数操作，无返回结果，包含方法 void accept(T t)</td>\n</tr>\n<tr>\n<td>Supplier</td>\n<td>无</td>\n<td>T</td>\n<td>返回T类型参数，方法时 T get()</td>\n</tr>\n<tr>\n<td>Function</td>\n<td>T</td>\n<td>R</td>\n<td>对类型T参数操作，返回R类型参数，包含方法 R apply（T t）</td>\n</tr>\n<tr>\n<td>Predicate</td>\n<td>T</td>\n<td>boolean</td>\n<td>断言型接口，对类型T进行条件筛选操作，返回boolean，包含方法 boolean test（T t）</td>\n</tr>\n</tbody></table>\n<h2 id=\"四大核心函数式接口\"><a href=\"#四大核心函数式接口\" class=\"headerlink\" title=\"四大核心函数式接口\"></a>四大核心函数式接口</h2><span id=\"more\"></span>\n\n<h3 id=\"1-Cousumer-lt-T-gt-消费型接口\"><a href=\"#1-Cousumer-lt-T-gt-消费型接口\" class=\"headerlink\" title=\"1. Cousumer&lt;T&gt; 消费型接口\"></a>1. <code>Cousumer&lt;T&gt; </code>消费型接口</h3><blockquote>\n<p><code>void accept(T t)</code>;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Consumer&lt;T&gt; 消费型接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">shooping</span><span class=\"params\">(<span class=\"keyword\">double</span> money, Consumer&lt;Double&gt; consumer)</span></span>&#123;</span><br><span class=\"line\">    consumer.accept(money);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    shooping(<span class=\"number\">100</span>, money -&gt; System.out.println(<span class=\"string\">&quot;消费金额￥:&quot;</span>+money));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Supplier-lt-T-gt-供给型接口\"><a href=\"#2-Supplier-lt-T-gt-供给型接口\" class=\"headerlink\" title=\"2. Supplier&lt;T&gt; 供给型接口\"></a>2. <code>Supplier&lt;T&gt;</code> 供给型接口</h3><blockquote>\n<p><code>T get()</code>;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Supplier&lt;T&gt; 供给型接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">random</span><span class=\"params\">(Supplier&lt;Integer&gt; supplier)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> supplier.get();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number = random(() -&gt; (<span class=\"keyword\">int</span>) (Math.random() * <span class=\"number\">100</span>));</span><br><span class=\"line\">    System.out.println(number);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-Function-lt-T-R-gt-函数式接口\"><a href=\"#3-Function-lt-T-R-gt-函数式接口\" class=\"headerlink\" title=\"3. Function&lt;T, R&gt; 函数式接口\"></a>3. <code>Function&lt;T, R&gt;</code> 函数式接口</h3><blockquote>\n<p><code>R apply(T t)</code>;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Function&lt;T, R&gt; 函数式接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">str</span><span class=\"params\">(String str, Function&lt;String, String&gt; function)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> function.apply(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    str(<span class=\"string\">&quot;Hello World!&quot;</span>, (str) -&gt; str.toUpperCase());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-Predicate-lt-T-gt-断言型接口\"><a href=\"#4-Predicate-lt-T-gt-断言型接口\" class=\"headerlink\" title=\"4. Predicate&lt;T&gt; 断言型接口\"></a>4. <code>Predicate&lt;T&gt;</code> 断言型接口</h3><blockquote>\n<p><code>booolean test(T t)</code>;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Predicate&lt;T&gt; 断言型接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;Integer&gt; <span class=\"title\">filter</span><span class=\"params\">(List&lt;Integer&gt; list, Predicate&lt;Integer&gt; predicate)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;Integer&gt; list1 = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Integer number : list) &#123;</span><br><span class=\"line\">        list1.add(number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test3</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    List&lt;Integer&gt; list = Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">    List&lt;Integer&gt; filterList = filter(list, item -&gt; item &gt; <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Integer number: filterList) &#123;</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n",
            "tags": [
                "Java",
                "函数式接口"
            ]
        }
    ]
}