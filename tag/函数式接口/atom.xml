<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://smile1231.github.io</id>
    <title>JIN MAO &#39;s Blog • Posts by &#34;函数式接口&#34; tag</title>
    <link href="https://smile1231.github.io" />
    <updated>2022-02-12T12:02:47.000Z</updated>
    <category term="生物信息" />
    <category term="基因编辑" />
    <category term="SAP" />
    <category term="前端" />
    <category term="Css" />
    <category term="Java" />
    <category term="Cache" />
    <category term="Cookie" />
    <category term="Session" />
    <category term="Java面试" />
    <category term="DDD" />
    <category term="领域驱动设计" />
    <category term="DisPlay属性" />
    <category term="Docker" />
    <category term="Corn" />
    <category term="blog" />
    <category term="hexo" />
    <category term="next" />
    <category term="IDEA" />
    <category term="FastJson" />
    <category term="SpringBoot" />
    <category term="JavaScript" />
    <category term="Html" />
    <category term="Jvm" />
    <category term="函数式接口" />
    <category term="Jenkins" />
    <category term="CI/CD" />
    <category term="java" />
    <category term="calender" />
    <category term="map" />
    <category term="Stream流" />
    <category term="Springboot" />
    <category term="Assert" />
    <category term="Python" />
    <category term="Jupyter" />
    <category term="Machine Learning" />
    <category term="LeetCode" />
    <category term="算法" />
    <category term="递归" />
    <category term="numpy" />
    <category term="pandas" />
    <category term="sklearn" />
    <category term="Mybatis" />
    <category term="Linux" />
    <category term="分页查询" />
    <category term="Nginx" />
    <category term="Spring" />
    <category term="模糊查询" />
    <category term="Spoken English" />
    <category term="SrpingBoot" />
    <category term="事务" />
    <category term="TypeScript" />
    <category term="WebPack" />
    <category term="master" />
    <category term="文件上传" />
    <category term="Groovy" />
    <category term="UML" />
    <category term="Ubuntu" />
    <category term="Mysql" />
    <category term="VsCode" />
    <category term="Shell" />
    <category term="VSCODE" />
    <category term="快捷键" />
    <category term="Vue" />
    <category term="Stream" />
    <category term="git" />
    <category term="日期" />
    <category term="线程池" />
    <category term="ubuntu" />
    <category term="虚拟机" />
    <category term="二分查找" />
    <category term="数据挖掘" />
    <category term="Hadoop" />
    <category term="操作系统" />
    <category term="EasyExcel" />
    <category term="node" />
    <category term="JVM" />
    <category term="Yaml" />
    <category term="junit" />
    <category term="Hexo" />
    <category term="数据库" />
    <category term="Mysql事务" />
    <category term="Git" />
    <category term="冒泡排序" />
    <category term="动态规划" />
    <category term="git,npm,node" />
    <category term="Google" />
    <category term="多线程" />
    <category term="堆排序" />
    <category term="幂等性" />
    <category term="流" />
    <category term="快速排序" />
    <category term="归并排序" />
    <category term="正则表达式" />
    <category term="直接插入排序" />
    <category term="vue" />
    <category term="选择排序" />
    <category term="Java 面试" />
    <category term="数据结构" />
    <category term="阻塞队列" />
    <category term="Spring事务" />
    <category term="JDK" />
    <category term="动态代理" />
    <category term="Date" />
    <category term="ArrayList" />
    <category term="接口" />
    <category term="SpringMvc" />
    <category term="排序" />
    <category term="执行计划" />
    <category term="HashMap" />
    <category term="Email" />
    <category term="设计模式" />
    <category term="cheatsheet" />
    <entry>
        <id>https://smile1231.github.io/posts/1da18d70/</id>
        <title>Java8内置四大函数式接口</title>
        <link rel="alternate" href="https://smile1231.github.io/posts/1da18d70/"/>
        <content type="html">&lt;h1 id=&#34;java8内置函数式接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java8内置函数式接口&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Java8&lt;/code&gt;  内置函数式接口&lt;/h1&gt;
&lt;h2 id=&#34;函数式接口有什么特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数式接口有什么特点&#34;&gt;#&lt;/a&gt; 函数式接口有什么特点？&lt;/h2&gt;
&lt;p&gt;函数式接口只有一个方法，可以用注解 &lt;code&gt;@FunctionalInterface&lt;/code&gt;  表示，当加上这个注解之后就给这个接口加上了条件，一旦接口中出现多个方法就会出现问题。&lt;/p&gt;
&lt;h2 id=&#34;核心内置函数有哪些&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#核心内置函数有哪些&#34;&gt;#&lt;/a&gt; 核心内置函数有哪些？&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数式接口&lt;/th&gt;
&lt;th&gt;参数类型&lt;/th&gt;
&lt;th&gt;返回类型&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Consumer&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;void&lt;/td&gt;
&lt;td&gt;对类型 T 参数操作，无返回结果，包含方法 void accept (T t)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Supplier&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;返回 T 类型参数，方法时 T get ()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Function&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;对类型 T 参数操作，返回 R 类型参数，包含方法 R apply（T t）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Predicate&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;断言型接口，对类型 T 进行条件筛选操作，返回 boolean，包含方法 boolean test（T t）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;四大核心函数式接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四大核心函数式接口&#34;&gt;#&lt;/a&gt; 四大核心函数式接口&lt;/h2&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;1-cousumert-消费型接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-cousumert-消费型接口&#34;&gt;#&lt;/a&gt; 1.  &lt;code&gt;Cousumer&amp;lt;T&amp;gt; &lt;/code&gt; 消费型接口&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;void accept(T t)&lt;/code&gt; ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Consumer&amp;lt;T&amp;gt; 消费型接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;shooping&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; money, Consumer&amp;lt;Double&amp;gt; consumer)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    consumer.accept(money);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    shooping(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, money -&amp;gt; System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;消费金额￥:&amp;quot;&lt;/span&gt;+money));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-suppliert-供给型接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-suppliert-供给型接口&#34;&gt;#&lt;/a&gt; 2.  &lt;code&gt;Supplier&amp;lt;T&amp;gt;&lt;/code&gt;  供给型接口&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;T get()&lt;/code&gt; ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Supplier&amp;lt;T&amp;gt; 供给型接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Integer &lt;span class=&#34;title&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Supplier&amp;lt;Integer&amp;gt; supplier)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; supplier.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number = random(() -&amp;gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) (Math.random() * &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(number);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-functiont-r-函数式接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-functiont-r-函数式接口&#34;&gt;#&lt;/a&gt; 3.  &lt;code&gt;Function&amp;lt;T, R&amp;gt;&lt;/code&gt;  函数式接口&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;R apply(T t)&lt;/code&gt; ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Function&amp;lt;T, R&amp;gt; 函数式接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String str, Function&amp;lt;String, String&amp;gt; function)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; function.apply(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    str(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;, (str) -&amp;gt; str.toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4-predicatet-断言型接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-predicatet-断言型接口&#34;&gt;#&lt;/a&gt; 4.  &lt;code&gt;Predicate&amp;lt;T&amp;gt;&lt;/code&gt;  断言型接口&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;booolean test(T t)&lt;/code&gt; ;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//Predicate&amp;lt;T&amp;gt; 断言型接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;Integer&amp;gt; &lt;span class=&#34;title&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(List&amp;lt;Integer&amp;gt; list, Predicate&amp;lt;Integer&amp;gt; predicate)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;Integer&amp;gt; list1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (Integer number : list) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list1.add(number);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; list1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;Integer&amp;gt; filterList = filter(list, item -&amp;gt; item &amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (Integer number: filterList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(number);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Java" />
        <category term="函数式接口" />
        <updated>2022-02-12T12:02:47.000Z</updated>
    </entry>
</feed>
