{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"easyexcel\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/13370746/",
            "url": "https://smile1231.github.io/posts/13370746/",
            "title": "使用EasyExcel读取excel文件为Java实体类",
            "date_published": "2021-12-15T08:02:49.000Z",
            "content_html": "<p><a href=\"https://www.yuque.com/easyexcel/doc/read\">附赠<code>EasyExcel</code>的官方文档</a></p>\n<p>最近用到了需要使用<code>Excel</code>的<code>InputStream</code>流转化为Java实体类,然后再进行一些业务上的操作,这边稍加学习了之后也做了一些整理:</p>\n<p>本次所用到的依赖:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">implementation <span class=\"string\">&#x27;org.projectlombok:lombok:1.18.20&#x27;</span></span><br><span class=\"line\">implementation <span class=\"keyword\">group</span>: <span class=\"string\">&#x27;cn.hutool&#x27;</span>, name: <span class=\"string\">&#x27;hutool-all&#x27;</span>, version: <span class=\"string\">&#x27;5.7.16&#x27;</span></span><br><span class=\"line\">implementation(<span class=\"string\">&#x27;com.alibaba:easyexcel:2.2.6&#x27;</span>)</span><br><span class=\"line\">implementation <span class=\"string\">&#x27;com.google.protobuf:protobuf-java:4.0.0-rc-2&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"首先需要建立一个和Excel相对应的实体类\"><a href=\"#首先需要建立一个和Excel相对应的实体类\" class=\"headerlink\" title=\"首先需要建立一个和Excel相对应的实体类\"></a>首先需要建立一个和<code>Excel</code>相对应的实体类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexOrNameData</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 强制读取第三个 这里不建议 index 和 name 同时用，要么一个对象只用index，要么一个对象只用name去匹配</span></span><br><span class=\"line\"><span class=\"comment\">     *  index 从0开始</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(index = 2)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Double doubleData;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用名字去匹配，这里需要注意，如果名字重复，会导致只有一个字段读取到数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(&quot;字符串标题&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(&quot;日期标题&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date date;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<h2 id=\"监听器\"><a href=\"#监听器\" class=\"headerlink\" title=\"监听器\"></a>监听器</h2><p>使用解析功能时需要使用到<code>easyExcel</code>提供给我们的一个监听器</p>\n<img data-src=\"/blog/posts/13370746/2021-12-15-18-51-15.png\" class=\"\">\n\n<p>所以我这边选择的是继承<code>AnalysisEventListener</code>类,是一个通用泛型类</p>\n<p><strong>有个很重要的点<code>ExcelListener</code> 不能被<code>spring</code>管理，要每次读取<code>excel</code>都要<code>new</code>,然后里面用到<code>spring</code>可以构造方法传进去</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelListener</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">AnalysisEventListener</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用来获取解析到的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;T&gt; dataList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">invoke</span><span class=\"params\">(T data, AnalysisContext context)</span> </span>&#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;解析到一条数据:&#123;&#125;&quot;</span>, JSON.toJSONString(data));</span><br><span class=\"line\">        dataList.add(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doAfterAllAnalysed</span><span class=\"params\">(AnalysisContext context)</span> </span>&#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;所有数据解析完成！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title\">getDataList</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"工具类泛化使用\"><a href=\"#工具类泛化使用\" class=\"headerlink\" title=\"工具类泛化使用\"></a>工具类泛化使用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtil</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取excel InputStream流 </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List&lt;T&gt; <span class=\"title\">readExcel</span><span class=\"params\">(InputStream excelInputStream, Class&lt;T&gt; clazz)</span></span>&#123;</span><br><span class=\"line\">        ExcelListener&lt;T&gt; excelListener = <span class=\"keyword\">new</span> ExcelListener&lt;&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//此处的read方法也支持`file`类型,这边使用的是inputStream流</span></span><br><span class=\"line\">        ExcelReader excelReader = EasyExcel.read(excelInputStream, clazz, excelListener).build();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ObjectUtil.isNull(excelReader))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ArrayList&lt;T&gt;();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;ReadSheet&gt; readSheetList = excelReader.excelExecutor().sheetList();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ReadSheet readSheet : readSheetList) &#123;</span><br><span class=\"line\">            excelReader.read(readSheet);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        excelReader.finish();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Convert.toList(clazz,excelListener.getDataList());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于第二个参数 <code>clazz</code>的原因,只要传入了相应的泛型类,就会返回相应类型的<code>List</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;D:\\\\Download\\\\test.xlsx&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InputStream fileInputStream = <span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">            List&lt;IndexOrNameData&gt; driverBlackListExcels = ExcelUtil.readExcel(fileInputStream, IndexOrNameData.class);</span><br><span class=\"line\">            System.out.println(driverBlackListExcels);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/blog/posts/13370746/2021-12-15-19-09-34.png\" class=\"\">\n\n\n<h2 id=\"JavaList封装为Excel返回\"><a href=\"#JavaList封装为Excel返回\" class=\"headerlink\" title=\"JavaList封装为Excel返回\"></a><code>JavaList</code>封装为<code>Excel</code>返回</h2><p>上面已经介绍完如果读取上传的<code>Excel</code>文件,接下来需要介绍如何将<code>List</code>数据输出为<code>Excel</code>文件</p>\n<p>一样需要建立一个和<code>Excel</code>对应的实体类:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestExcelPojo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(&quot;姓名&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(&quot;年龄&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String age;</span><br><span class=\"line\">    <span class=\"meta\">@ExcelProperty(&quot;余额&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String money;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 忽略这个字段</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ExcelIgnore</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String ignore;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这边有一个注意点,就是<code>@ExcelProperty</code>是把你的<code>Excel</code>头换成了对应的值,但是存在于这个实体类中属性都会被解析出来放到输出的<code>Excel</code>文件中.</p>\n<p>然后使用<code>EasyExcel</code>提供的方法来进行数据的写,一下是用例代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestEasyExcel</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;download.tmpPath&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String tmp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Context01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        ArrayList&lt;TestExcelPojo&gt; pojoArrayList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        TestExcelPojo pojo = <span class=\"keyword\">new</span> TestExcelPojo(<span class=\"string\">&quot;测试&quot;</span>, <span class=\"string\">&quot;21&quot;</span>, <span class=\"string\">&quot;100&quot;</span>);</span><br><span class=\"line\">        pojoArrayList.add(pojo);</span><br><span class=\"line\">        pojoArrayList.add(pojo);</span><br><span class=\"line\">        pojoArrayList.add(pojo);</span><br><span class=\"line\">        pojoArrayList.add(pojo);</span><br><span class=\"line\">        pojoArrayList.add(pojo);</span><br><span class=\"line\"></span><br><span class=\"line\">        String fileName = tmp + File.separator + IdUtil.simpleUUID() + <span class=\"string\">&quot;.xlsx&quot;</span>;</span><br><span class=\"line\">        ExcelWriter excelWriter = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            excelWriter = EasyExcel.write(fileName,TestExcelPojo.class).build();</span><br><span class=\"line\">            WriteSheet writeSheet = EasyExcel.writerSheet(<span class=\"string\">&quot;模板&quot;</span>).build();</span><br><span class=\"line\">            excelWriter.write(pojoArrayList,writeSheet);</span><br><span class=\"line\">            FileInputStream fileInputStream = <span class=\"keyword\">new</span> FileInputStream(fileName);</span><br><span class=\"line\">            <span class=\"comment\">//转化为二进制流</span></span><br><span class=\"line\">            ByteString bytes = ByteString.readFrom(fileInputStream);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (excelWriter != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                excelWriter.finish();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/blog/posts/13370746/2021-12-16-15-33-13.png\" class=\"\">\n",
            "tags": [
                "Java",
                "EasyExcel"
            ]
        }
    ]
}