{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"前端\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/7733848a/",
            "url": "https://smile1231.github.io/posts/7733848a/",
            "title": "文件上传前端小结",
            "date_published": "2022-05-21T13:24:07.000Z",
            "content_html": "<h2 id=\"页面a标签-点击不跳转\"><a href=\"#页面a标签-点击不跳转\" class=\"headerlink\" title=\"页面a标签 点击不跳转\"></a>页面<code>a</code>标签 点击不跳转</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">href=&quot;javascript:viod(0)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">href=&quot;javascript:;&quot;</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/21d4b84b/",
            "url": "https://smile1231.github.io/posts/21d4b84b/",
            "title": "Vue3项目的创建",
            "date_published": "2022-02-14T14:17:09.000Z",
            "content_html": "<h1 id=\"Vue3项目的创建\"><a href=\"#Vue3项目的创建\" class=\"headerlink\" title=\"Vue3项目的创建\"></a>Vue3项目的创建</h1><p>==一般来说,创建Vue项目有两种方式==</p>\n<h2 id=\"方法一-使用-vue-cli-创建\"><a href=\"#方法一-使用-vue-cli-创建\" class=\"headerlink\" title=\"方法一:使用 vue-cli 创建\"></a>方法一:使用 vue-cli 创建</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2NyZWF0aW5nLWEtcHJvamVjdC5odG1sI3Z1ZS1jcmVhdGU=\">Vue文档</span></p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>进入一个空的文件目录创建</p>\n</blockquote>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 安装或者升级</span><br><span class=\"line\">npm install -g @vue/cli</span><br><span class=\"line\"></span><br><span class=\"line\">## 保证 vue cli 版本在 4.5.0 以上</span><br><span class=\"line\">vue --version</span><br><span class=\"line\"></span><br><span class=\"line\">## 创建项目</span><br><span class=\"line\">vue create &lt;项目名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">## 进入项目 </span><br><span class=\"line\">cd  &lt;项目名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">## 启动项目</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p><strong>然后的步骤</strong></p>\n<ul>\n<li><code>Please pick a preset</code> - 选择 <code>Manually select features</code></li>\n<li><code>Check the features needed for your project</code> - 选择上 <code>TypeScript</code> ，特别注意点空格是选择，点回车是下一步</li>\n<li><code>Choose a version of Vue.js that you want to start the project with</code> - 选择 <code>3.x</code> (<code>Preview</code>)</li>\n<li><code>Use class-style component syntax</code> - 直接回车</li>\n<li><code>Use Babel alongside TypeScript</code> - 直接回车</li>\n<li><code>Pick a linter / formatter config</code> - 直接回车</li>\n<li><code>Use history mode for router?</code> - 直接回车</li>\n<li><code>Pick a linter / formatter config</code> - 直接回车</li>\n<li><code>Pick additional lint features</code> - 直接回车</li>\n<li><code>Where do you prefer placing config for Babel, ESLint, etc.?</code> - 直接回车</li>\n<li><code>Save this as a preset for future projects?</code> - 直接回车</li>\n</ul>\n<h2 id=\"方法二-使用-vite-创建\"><a href=\"#方法二-使用-vite-创建\" class=\"headerlink\" title=\"方法二:使用 vite 创建\"></a>方法二:使用 vite 创建</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92My5jbi52dWVqcy5vcmcvZ3VpZGUvaW5zdGFsbGF0aW9uLmh0bWw=\">文档链接</span></p>\n<ul>\n<li><p><code>vite</code> 是一个由原生 ESM 驱动的 Web 开发构建工具。在开发环境下基于浏览器原生 ES imports 开发，</p>\n</li>\n<li><p>它做到了<strong>本地快速开发启动</strong>, 在生产环境下基于 <code>Rollup</code> 打包。</p>\n<ul>\n<li>快速的冷启动，不需要等待打包操作；</li>\n<li>即时的热模块更新，替换性能和模块数量的解耦让更新飞起；</li>\n<li>真正的按需编译，不再等待整个应用编译完成，这是一个巨大的改变。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init vite-app &lt;project-name&gt;</span><br><span class=\"line\">cd &lt;project-name&gt;</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"使用Vue-Cli工程各目录介绍\"><a href=\"#使用Vue-Cli工程各目录介绍\" class=\"headerlink\" title=\"使用Vue-Cli工程各目录介绍\"></a>使用Vue-Cli工程各目录介绍</h2><h2 id=\"Vue修改端口号\"><a href=\"#Vue修改端口号\" class=\"headerlink\" title=\"Vue修改端口号\"></a><code>Vue</code>修改端口号</h2><p><code>package.json</code>文件下修改 <code>–port</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">   <span class=\"attr\">&quot;serve&quot;</span>: <span class=\"string\">&quot;vue-cli-service serve --port 9991&quot;</span>,</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p><code>vue.config.js</code>文件下添加 (如果没有就在根目录下创建文件)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9991</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/e7e56598/",
            "url": "https://smile1231.github.io/posts/e7e56598/",
            "title": "Vue属性介绍",
            "date_published": "2022-02-14T14:16:26.000Z",
            "content_html": "<h1 id=\"Vue属性\"><a href=\"#Vue属性\" class=\"headerlink\" title=\"Vue属性\"></a>Vue属性</h1><h2 id=\"创建Vue实例\"><a href=\"#创建Vue实例\" class=\"headerlink\" title=\"创建Vue实例\"></a>创建Vue实例</h2><blockquote>\n<p>每个 Vue 应用都是通过用 Vue 函数创建一个新的 Vue 实例开始的：</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 选项</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例选项-数据\"><a href=\"#实例选项-数据\" class=\"headerlink\" title=\"实例选项/数据\"></a>实例选项/数据</h3><h4 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a><strong>data</strong></h4><ul>\n<li>类型：<code>Object</code> | <code>Function</code></li>\n<li>限制：组件的定义只接受 <code>function</code></li>\n</ul>\n<p><strong>实例:</strong></p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接创建一个实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: data</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">vm.a <span class=\"comment\">// =&gt; 1</span></span><br><span class=\"line\">vm.$data === data <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Vue.extend() 中 data 必须是函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Component = Vue.extend(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>注意，如果你为 data property 使用了箭头函数，则 this 不会指向这个组件的实例，不过你仍然可以将其实例作为函数的第一个参数来访问</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: <span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> (&#123; <span class=\"attr\">a</span>: vm.myProp &#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a><strong>props</strong></h4><ul>\n<li><p>类型：<code>Array&lt;string&gt; | Object</code></p>\n</li>\n<li><p>详细：<br><code>props</code> 可以是数组或对象，用于接收来自父组件的数据。<code>props</code> 可以是简单的数组，或者使用对象作为替代，对象允许配置高级选项，如类型检测、自定义验证和设置默认值。<br>你可以基于对象的语法使用以下选项：</p>\n<ul>\n<li><code>type</code>：可以是下列原生构造函数中的一种：<code>String</code>、<code>Number</code>、<code>Boolean</code>、<code>Array</code>、<code>Object</code>、<code>Date</code>、<code>Function</code>、<code>Symbol</code>、任何自定义构造函数、或上述内容组成的数组。会检查一个 <code>prop</code> 是否是给定的类型，否则抛出警告。``Prop` 类型的更多信息在此。</li>\n<li><code>default：any</code><br>为该 <code>prop</code> 指定一个默认值。如果该 <code>prop</code> 没有被传入，则换做用这个值。对象或数组的默认值必须从一个工厂函数返回。</li>\n<li><code>required：Boolean</code><br>定义该 <code>prop</code> 是否是必填项。在非生产环境中，如果这个值为 <code>truthy</code> 且该 prop 没有被传入的，则一个控制台警告将会被抛出。</li>\n<li><code>validator：Function</code><br>自定义验证函数会将该 <code>prop</code> 的值作为唯一的参数代入。在非生产环境下，如果该函数返回一个 <code>falsy</code> 的值 (也就是验证失败)，一个控制台警告将会被抛出。你可以在这里查阅更多 <code>prop</code> 验证的相关信息。</li>\n</ul>\n</li>\n</ul>\n<p><strong>示例:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简单语法</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;props-demo-simple&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;size&#x27;</span>, <span class=\"string\">&#x27;myMessage&#x27;</span>]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 对象语法，提供验证</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;props-demo-advanced&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检测类型</span></span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 检测类型 + 其他验证</span></span><br><span class=\"line\">    <span class=\"attr\">age</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">required</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">validator</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value &gt;= <span class=\"number\">0</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"propsData\"><a href=\"#propsData\" class=\"headerlink\" title=\"propsData\"></a><strong>propsData</strong></h4><ul>\n<li>类型：<code>&#123; [key: string]: any &#125;</code></li>\n<li>限制：只用于 <code>new</code> 创建的实例中。</li>\n<li>详细：创建实例时传递 <code>props</code>。主要作用是方便测试。</li>\n</ul>\n<p><strong>实例:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Comp = Vue.extend(&#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;msg&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;&#123;&#123; msg &#125;&#125;&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Comp(&#123;</span><br><span class=\"line\">  <span class=\"attr\">propsData</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a><strong>computed</strong></h4><ul>\n<li>类型：<code>&#123; [key: string]: Function | &#123; get: Function, set: Function &#125; &#125;</code></li>\n<li>详细：<br>计算属性将被混入到<code>Vue</code> 实例中。所有 <code>getter</code> 和 <code>setter</code> 的 <code>this</code> 上下文自动地绑定为 <code>Vue</code> 实例。<br>注意如果你为一个计算属性使用了箭头函数，则 <code>this</code> 不会指向这个组件的实例，不过你仍然可以将其实例作为函数的第一个参数来访问。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  <span class=\"attr\">aDouble</span>: <span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> vm.a * <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>计算属性的结果会被缓存，除非依赖的响应式 property 变化才会重新计算。注意，如果某个依赖 (比如非响应式 property) 在该实例范畴之外，则计算属性是<strong>不会被更新</strong>的。</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 仅读取</span></span><br><span class=\"line\">    <span class=\"attr\">aDouble</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.a * <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 读取和设置</span></span><br><span class=\"line\">    <span class=\"attr\">aPlus</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">get</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.a + <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.a = v - <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">vm.aPlus   <span class=\"comment\">// =&gt; 2</span></span><br><span class=\"line\">vm.aPlus = <span class=\"number\">3</span></span><br><span class=\"line\">vm.a       <span class=\"comment\">// =&gt; 2</span></span><br><span class=\"line\">vm.aDouble <span class=\"comment\">// =&gt; 4</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a><strong>methods</strong></h4><ul>\n<li>类型：<code>&#123; [key: string]: Function &#125;</code></li>\n<li>详细：<br><code>methods</code> 将被混入到 <code>Vue</code> 实例中。可以直接通过 <code>VM</code> 实例访问这些方法，或者在指令表达式中使用。方法中的 <code>this</code> 自动绑定为 <code>Vue</code> 实例。</li>\n</ul>\n<blockquote>\n<p>注意，不应该使用箭头函数来定义 method函数<br>(例如 plus: () =&gt; this.a++)。<br>理由是箭头函数绑定了父级作用域的上下文，所以 this 将不会按照期望指向 Vue 实例，this.a 将是 undefined。</p>\n</blockquote>\n<p><strong>实例:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">plus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.a++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">vm.plus()</span><br><span class=\"line\">vm.a <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"watch\"><a href=\"#watch\" class=\"headerlink\" title=\"watch\"></a><strong>watch</strong></h4><ul>\n<li>类型：<code>&#123; [key: string]: string | Function | Object | Array &#125;</code></li>\n<li>详细：一个对象，键是需要观察的表达式，值是对应回调函数。值也可以是方法名，或者包含选项的对象。<code>Vue</code> 实例将会在实例化时调用 <code>$watch()</code>，遍历 <code>watch</code> 对象的每一个 <code>property</code>。</li>\n</ul>\n<p><strong>实例</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">b</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">c</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">d</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">    <span class=\"attr\">e</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">f</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">g</span>: <span class=\"number\">5</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">a</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;new: %s, old: %s&#x27;</span>, val, oldVal)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 方法名</span></span><br><span class=\"line\">    <span class=\"attr\">b</span>: <span class=\"string\">&#x27;someMethod&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 该回调会在任何被侦听的对象的 property 改变时被调用，不论其被嵌套多深</span></span><br><span class=\"line\">    <span class=\"attr\">c</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">handler</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">      <span class=\"attr\">deep</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 该回调将会在侦听开始之后被立即调用</span></span><br><span class=\"line\">    <span class=\"attr\">d</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">handler</span>: <span class=\"string\">&#x27;someMethod&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 你可以传入回调数组，它们会被逐一调用</span></span><br><span class=\"line\">    <span class=\"attr\">e</span>: [</span><br><span class=\"line\">      <span class=\"string\">&#x27;handle1&#x27;</span>,</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle2</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">handler</span>: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle3</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">        <span class=\"comment\">/* ... */</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// watch vm.e.f&#x27;s value: &#123;g: 5&#125;</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;e.f&#x27;</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">vm.a = <span class=\"number\">2</span> <span class=\"comment\">// =&gt; new: 2, old: 1</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意，不应该使用箭头函数来定义 <code>watcher</code> 函数 (例如 <code>searchQuery: newValue =&gt; this.updateAutocomplete(newValue))</code>。理由是箭头函数绑定了父级作用域的上下文，所以 this 将不会按照期望指向 <code>Vue</code> 实例，<code>this.updateAutocomplete</code> 将是 <code>undefined</code>。</strong></p>\n<h3 id=\"实例选项-Dom\"><a href=\"#实例选项-Dom\" class=\"headerlink\" title=\"实例选项/Dom\"></a>实例选项/Dom</h3><h4 id=\"el\"><a href=\"#el\" class=\"headerlink\" title=\"el\"></a><strong>el</strong></h4><ul>\n<li>类型：<code>string | Element</code></li>\n<li>限制：只在用 new 创建实例时生效。</li>\n<li>详细：提供一个在页面上已存在的 <code>DOM</code> 元素作为 <code>Vue</code> 实例的挂载目标。可以是 <code>CSS</code> 选择器，也可以是一个 <code>HTMLElement</code> 实例。<br>在实例挂载之后，元素可以用 <code>vm.$el</code> 访问。<br>如果在实例化时存在这个选项，实例将立即进入编译过程，否则，需要显式调用 <code>vm.$mount()</code> 手动开启编译。</li>\n</ul>\n<blockquote>\n<p>提供的元素只能作为挂载点。不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 html 或者 body 上。</p>\n</blockquote>\n<hr>\n如果 render 函数和 template property 都不存在，挂载 DOM 元素的 HTML 会被提取出来用作模板，此时，必须使用 Runtime + Compiler 构建的 Vue 库。\n\n\n<h4 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a><strong>template</strong></h4><ul>\n<li>类型：<code>string</code></li>\n<li>详细：一个字符串模板作为 <code>Vue</code> 实例的标识使用。模板将会替换挂载的元素。挂载元素的内容都将被忽略，除非模板的内容有分发插槽。<br>如果值以 # 开始，则它将被用作选择符，并使用匹配元素的 <code>innerHTML</code> 作为模板。常用的技巧是用 <code>&lt;script type=&quot;x-template&quot;&gt;</code> 包含模板。</li>\n</ul>\n<p>出于安全考虑，你应该只使用你信任的 Vue 模板。避免使用其他人生成的内容作为你的模板。</p>\n<hr>\n如果 Vue 选项中包含渲染函数，该模板将被忽略。\n\n\n<h4 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a><strong>render</strong></h4><ul>\n<li>类型：(createElement: () =&gt; VNode) =&gt; VNode</li>\n<li>详细：字符串模板的代替方案，允许你发挥 JavaScript 最大的编程能力。该渲染函数接收一个 <code>createElement</code> 方法作为第一个参数用来创建 <code>VNode</code>。</li>\n</ul>\n<blockquote>\n<p>如果组件是一个函数组件，渲染函数还会接收一个额外的 context 参数，为没有实例的函数组件提供上下文信息。</p>\n</blockquote>\n<hr>\nVue 选项中的 render 函数若存在，则 Vue 构造函数不会从 template 选项或通过 el 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。\n\n<h4 id=\"renderError\"><a href=\"#renderError\" class=\"headerlink\" title=\"renderError\"></a><strong>renderError</strong></h4><ul>\n<li>类型：(createElement: () =&gt; VNode, error: Error) =&gt; VNode</li>\n<li>详细：<strong>只在开发者环境下工作。</strong><br>当 <code>render</code> 函数遭遇错误时，提供另外一种渲染输出。其错误将会作为第二个参数传递到 <code>renderError</code>。这个功能配合 <code>hot-reload</code> 非常实用。</li>\n</ul>\n<p><strong>实例:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render (h) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;oops&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  renderError (h, err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> h(<span class=\"string\">&#x27;pre&#x27;</span>, &#123; <span class=\"attr\">style</span>: &#123; <span class=\"attr\">color</span>: <span class=\"string\">&#x27;red&#x27;</span> &#125;&#125;, err.stack)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选项-生命周期钩子\"><a href=\"#选项-生命周期钩子\" class=\"headerlink\" title=\"选项/生命周期钩子\"></a>选项/生命周期钩子</h3><blockquote>\n<p>所有的生命周期钩子自动绑定 <code>this</code> 上下文到实例中，因此你可以访问数据，对 <code>property</code> 和方法进行运算。这意味着你不能使用箭头函数来定义一个生命周期方法 (例如 <code>created: () =&gt; this.fetchTodos())</code>。这是因为箭头函数绑定了父上下文，因此 <code>this</code> 与你期待的 <code>Vue</code> 实例不同，<code>this.fetchTodos</code> 的行为未定义。</p>\n</blockquote>\n<h4 id=\"beforeCreate\"><a href=\"#beforeCreate\" class=\"headerlink\" title=\"beforeCreate\"></a><strong>beforeCreate</strong></h4><ul>\n<li>类型：<code>Function</code></li>\n<li>详细：在实例初始化之后，数据观测 <code>(data observer)</code> 和 <code>event/watcher</code> 事件配置之前被调用。</li>\n</ul>\n<h4 id=\"created\"><a href=\"#created\" class=\"headerlink\" title=\"created\"></a><strong>created</strong></h4><ul>\n<li>类型：<code>Function</code></li>\n<li>详细：在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 <code>(data observer)</code>，<code>property</code> 和方法的运算，<code>watch/event</code> 事件回调。然而，挂载阶段还没开始，<code>$el property</code> 目前尚不可用。</li>\n</ul>\n<h4 id=\"beforeMount\"><a href=\"#beforeMount\" class=\"headerlink\" title=\"beforeMount\"></a><strong>beforeMount</strong></h4><ul>\n<li>类型：<code>Function</code></li>\n<li>详细：在挂载开始之前被调用：相关的 <code>render</code> 函数首次被调用。</li>\n</ul>\n<p><strong>该钩子在服务器端渲染期间不被调用。</strong></p>\n<h4 id=\"mounted\"><a href=\"#mounted\" class=\"headerlink\" title=\"mounted\"></a><strong>mounted</strong></h4><ul>\n<li><p>类型：<code>Function</code></p>\n</li>\n<li><p>详细：</p>\n<ul>\n<li><p>实例被挂载后调用，这时 <code>el</code> 被新创建的 <code>vm.$el</code> 替换了。如果根实例挂载到了一个文档内的元素上，当 <code>mounted</code> 被调用时 <code>vm.$el</code> 也在文档内。</p>\n</li>\n<li><p>注意 <code>mounted</code> 不会保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 <code>mounted</code> 内部使用 <code>vm.$nextTick：</code></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">this</span>.$nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Code that will run only after the</span></span><br><span class=\"line\">  <span class=\"comment\">// entire view has been rendered</span></span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"选项-资源\"><a href=\"#选项-资源\" class=\"headerlink\" title=\"选项/资源\"></a><strong>选项/资源</strong></h3></li>\n</ul>\n<h4 id=\"Component\"><a href=\"#Component\" class=\"headerlink\" title=\"Component\"></a><strong><code>Component</code></strong></h4><blockquote>\n<p>关于组件的使用补充:</p>\n</blockquote>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例:\"></a><strong>实例:</strong></h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个名为 button-counter 的新组件</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>组件是可复用的 <code>Vue</code> 实例，且带有一个名字：在这个例子中是 <code>&lt;button-counter&gt;</code>。我们可以在一个通过 <code>new Vue</code> 创建的 <code>Vue</code> 根实例中，把这个组件作为自定义元素来使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;components-demo&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>因为组件是可复用的 <code>Vue</code> 实例，所以它们与 <code>new Vue</code> 接收相同的选项，例如 <code>data、computed、watch、methods</code> 以及生命周期钩子等。仅有的例外是像 <code>el</code> 这样根实例特有的选项。</strong></p>\n<h5 id=\"data-必须是一个函数\"><a href=\"#data-必须是一个函数\" class=\"headerlink\" title=\"==data 必须是一个函数==\"></a><strong>==data 必须是一个函数==</strong></h5><p>当我们定义这个 <code>&lt;button-counter&gt;</code> 组件时，你可能会发现它的 data 并不是像这样直接提供一个对象：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">  <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>取而代之的是，<strong>一个组件的 <code>data</code> 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"组件的组织\"><a href=\"#组件的组织\" class=\"headerlink\" title=\"组件的组织\"></a><strong>组件的组织</strong></h5><p>通常一个应用会以一棵嵌套的组件树的形式来组织：</p>\n\n\n<p>例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p>\n<p>为了能在模板中使用，这些组件必须先注册以便 <code>Vue</code> 能够识别。这里有两种组件的注册类型：<strong>全局注册</strong>和<strong>局部注册</strong>。至此，我们的组件都只是通过 <code>Vue.component</code> 全局注册的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;my-component-name&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ... options ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>全局注册的组件可以用在其被注册之后的任何 (通过 <code>new Vue</code>) 新创建的 <code>Vue</code> 根实例，也包括其组件树中的所有子组件的模板中。</p>\n<p>到目前为止，关于组件注册你需要了解的就这些了，如果你阅读完本页内容并掌握了它的内容，我们会推荐你再回来把**<a href=\"#zujianzhuce\">组件注册</a>**读完。</p>\n<h5 id=\"组件注册\"><a href=\"#组件注册\" class=\"headerlink\" title=\"组件注册\"></a><span id=\"zujianzhuce\">组件注册</span></h5><blockquote>\n<p>全局注册略</p>\n</blockquote>\n<blockquote>\n<p>局部注册</p>\n</blockquote>\n<p>全局注册往往是不够理想的。比如，如果你使用一个像 <code>webpack</code>这样的构建系统，全局注册所有的组件意味着即便你已经不再使用一个组件了，它仍然会被包含在你最终的构建结果中。这造成了用户下载的 <code>JavaScript</code> 的无谓的增加。</p>\n<p>在这些情况下，你可以通过一个普通的 <code>JavaScript</code> 对象来定义组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ComponentA = &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ComponentB = &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ComponentC = &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>components</code> 选项中定义你想要使用的组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;component-a&#x27;</span>: ComponentA,</span><br><span class=\"line\">    <span class=\"string\">&#x27;component-b&#x27;</span>: ComponentB</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>对于 <code>components</code> 对象中的每个 <code>property</code> 来说，其 <code>property</code> 名就是自定义元素的名字，其 <code>property</code> 值就是这个组件的选项对象。</p>\n<p>注意<strong>局部注册的组件在其子组件中不可用</strong>。例如，如果你希望 <code>ComponentA</code> 在 <code>ComponentB</code> 中可用，则你需要这样写：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ComponentA = &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ComponentB = &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;component-a&#x27;</span>: ComponentA</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者如果你通过 <code>Babel</code> 和 <code>webpack</code> 使用 <code>ES2015</code> 模块，那么代码看起来更像：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ComponentA <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./ComponentA.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    ComponentA</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"通过-Prop-向子组件传递数据\"><a href=\"#通过-Prop-向子组件传递数据\" class=\"headerlink\" title=\"通过 Prop 向子组件传递数据\"></a><strong>通过 Prop 向子组件传递数据</strong></h5><p>早些时候，我们提到了创建一个博文组件的事情。问题是如果你不能向这个组件传递某一篇博文的标题或内容之类的我们想展示的数据的话，它是没有办法使用的。这也正是 <code>prop</code> 的由来。</p>\n<p><code>Prop</code> 是你可以在组件上注册的一些自定义 <code>attribute</code>。当一个值传递给一个 <code>prop attribute</code> 的时候，它就变成了那个组件实例的一个 <code>property</code>。为了给博文组件传递一个标题，我们可以用一个 <code>props</code> 选项将其包含在该组件可接受的 <code>prop</code> 列表中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;title&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>一个组件默认可以拥有任意数量的<code>prop</code>，任何值都可以传递给任何 <code>prop</code>。在上述模板中，你会发现我们能够在组件实例中访问这个值，就像访问 <code>data</code> 中的值一样。</p>\n<p>一个 <code>prop</code> 被注册之后，你就可以像这样把数据作为一个自定义 <code>attribute</code> 传递进来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blog-post title=<span class=\"string\">&quot;My journey with Vue&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;Blogging with Vue&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">blog-post</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;Why Vue is so fun&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">blog-post</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n\n\n<p>然而在一个典型的应用中，你可能在 <code>data</code> 里有一个博文的数组：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#blog-post-demo&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">posts</span>: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;My journey with Vue&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Blogging with Vue&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">title</span>: <span class=\"string\">&#x27;Why Vue is so fun&#x27;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>并想要为每篇博文渲染一个组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blog-post</span><br><span class=\"line\">  v-<span class=\"keyword\">for</span>=<span class=\"string\">&quot;post in posts&quot;</span></span><br><span class=\"line\">  v-bind:key=<span class=\"string\">&quot;post.id&quot;</span></span><br><span class=\"line\">  v-bind:title=<span class=\"string\">&quot;post.title&quot;</span></span><br><span class=\"line\">&gt;&lt;/blog-post&gt;</span><br></pre></td></tr></table></figure>\n\n<p>看起来当组件变得越来越复杂的时候，我们的博文不只需要标题和内容，还需要发布日期、评论等等。为每个相关的信息定义一个 <code>prop</code> 会变得很麻烦：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blog-post</span><br><span class=\"line\">  v-<span class=\"keyword\">for</span>=<span class=\"string\">&quot;post in posts&quot;</span></span><br><span class=\"line\">  v-bind:key=<span class=\"string\">&quot;post.id&quot;</span></span><br><span class=\"line\">  v-bind:title=<span class=\"string\">&quot;post.title&quot;</span></span><br><span class=\"line\">  v-bind:content=<span class=\"string\">&quot;post.content&quot;</span></span><br><span class=\"line\">  v-bind:publishedAt=<span class=\"string\">&quot;post.publishedAt&quot;</span></span><br><span class=\"line\">  v-bind:comments=<span class=\"string\">&quot;post.comments&quot;</span></span><br><span class=\"line\">&gt;&lt;/blog-post&gt;</span><br></pre></td></tr></table></figure>\n<p>所以是时候重构一下这个 <code>&lt;blog-post&gt;</code> 组件了，让它变成接受一个单独的 <code>post</code> <code>prop</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blog-post</span><br><span class=\"line\">  v-<span class=\"keyword\">for</span>=<span class=\"string\">&quot;post in posts&quot;</span></span><br><span class=\"line\">  v-bind:key=<span class=\"string\">&quot;post.id&quot;</span></span><br><span class=\"line\">  v-bind:post=<span class=\"string\">&quot;post&quot;</span></span><br><span class=\"line\">&gt;&lt;/blog-post&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;post&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=&quot;blog-post&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;div v-html=&quot;post.content&quot;&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>==现在，不论何时为 <code>post</code> 对象添加一个新的 <code>property</code>，它都会自动地在 <code>&lt;blog-post&gt;</code> 内可用==。</p>\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/b5314c4/",
            "url": "https://smile1231.github.io/posts/b5314c4/",
            "title": "Vue2语法简介",
            "date_published": "2022-02-14T14:15:43.000Z",
            "content_html": "<h1 id=\"Vue语法\"><a href=\"#Vue语法\" class=\"headerlink\" title=\"Vue语法\"></a>Vue语法</h1><h2 id=\"el挂载点以及data数据项\"><a href=\"#el挂载点以及data数据项\" class=\"headerlink\" title=\"el挂载点以及data数据项\"></a>el挂载点以及data数据项</h2><blockquote>\n<p>el挂载点</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>el:挂载点<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;body&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; message &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> &#123;&#123; message &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">       <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// el:&quot;.app&quot;,</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// el:&quot;div&quot;,</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">//el:&quot;#body&quot;,</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"attr\">message</span>:<span class=\"string\">&quot;黑马程序员&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<p>==不能够把<code>el</code>挂载到<code>body</code>标签中==</p>\n<blockquote>\n<p>data 数据对象</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>data:数据对象<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123; message &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span> &#123;&#123; school.name &#125;&#125; &#123;&#123; school.mobile &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123; campus[0] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123; campus[3] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">message</span>:<span class=\"string\">&quot;你好 小黑!&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">school</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">name</span>:<span class=\"string\">&quot;黑马程序员&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">mobile</span>:<span class=\"string\">&quot;400-618-9090&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">campus</span>:[<span class=\"string\">&quot;北京校区&quot;</span>,<span class=\"string\">&quot;上海校区&quot;</span>,<span class=\"string\">&quot;广州校区&quot;</span>,<span class=\"string\">&quot;深圳校区&quot;</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"相关基本语法\"><a href=\"#相关基本语法\" class=\"headerlink\" title=\"相关基本语法\"></a>相关基本语法</h2><h3 id=\"v-text\"><a href=\"#v-text\" class=\"headerlink\" title=\"v-text\"></a><strong>v-text</strong></h3><blockquote>\n<p><strong>设置标签的文本值(textContent)</strong></p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>v-text指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;message+&#x27;!&#x27;&quot;</span>&gt;</span>深圳<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;info+&#x27;!&#x27;&quot;</span>&gt;</span>深圳<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123; message +&#x27;!&#x27;&#125;&#125;深圳<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">message</span>:<span class=\"string\">&quot;黑马程序员!!!&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">info</span>:<span class=\"string\">&quot;前端与移动教研部&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>==<code>v-text</code>是有替换作用的==</strong></p>\n<h3 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a><strong>v-html</strong></h3><p>设置标签的 <code>innerHtml</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">content</span>: <span class=\"string\">&quot;&lt;h1 style=&#x27;backgroundcolor:blue;&#x27;&gt;这是v-html,会解析出来&lt;/h1&gt;&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果:</p>\n\n\n<h3 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a><strong>v-on</strong></h3><p><strong>为元素绑定事件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 完整语法 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 缩写 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态参数的缩写 (2.6.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @[<span class=\"attr\">event</span>]=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>实例:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>V-on<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;单击v-on&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dolt&quot;</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;双击v-on&quot;</span> @<span class=\"attr\">dblclick</span>=<span class=\"string\">&quot;testText(food)&quot;</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;testText&quot;</span>&gt;</span>&#123;&#123; food &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">food</span>: <span class=\"string\">&quot;这是测试&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">dolt</span>:<span class=\"function\">()=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&quot;做IT!!!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">testText</span>:<span class=\"function\">(<span class=\"params\">a</span>)=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(a);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-on补充\"><a href=\"#v-on补充\" class=\"headerlink\" title=\"v-on补充\"></a><code>v-on</code>补充</h4><p>==主要是事件修饰符==</p>\n<ul>\n<li><code>.stop</code> - 调用 <code>event.stopPropagation()</code>。</li>\n<li><code>.prevent</code> - 调用 <code>event.preventDefault()</code>。</li>\n<li><code>.capture</code> - 添加事件侦听器时使用 <code>capture</code> 模式。</li>\n<li><code>.self</code> - 只当事件是从侦听器绑定的元素本身触发时才触发回调。</li>\n<li><code>.&#123;keyCode | keyAlias&#125;</code> - 只当事件是从特定键触发时才触发回调。</li>\n<li><code>.native</code> - 监听组件根元素的原生事件。</li>\n<li><code>.once</code> - 只触发一次回调。</li>\n<li><code>.left</code> - (2.2.0) 只当点击鼠标左键时触发。</li>\n<li><code>.right</code> - (2.2.0) 只当点击鼠标右键时触发。</li>\n<li><code>.middle</code> - (2.2.0) 只当点击鼠标中键时触发。</li>\n<li><code>.passive</code> - (2.3.0) 以 <code>&#123; passive: true &#125;</code> 模式添加侦听器</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 方法处理器 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态事件 (2.6.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:</span>[<span class=\"attr\">event</span>]=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 内联语句 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;doThat(&#x27;hello&#x27;, $event)&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 缩写 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态事件缩写 (2.6.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @[<span class=\"attr\">event</span>]=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 停止冒泡 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 阻止默认行为 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 阻止默认行为，没有表达式 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--  串联修饰符 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop.prevent</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 键修饰符，键别名 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">&quot;onEnter&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 键修饰符，键代码 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.13</span>=<span class=\"string\">&quot;onEnter&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 点击回调只会触发一次 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click.once</span>=<span class=\"string\">&quot;doThis&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 对象语法 (2.4.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on</span>=<span class=\"string\">&quot;&#123; mousedown: doThis, mouseup: doThat &#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a><strong>v-show</strong></h3><p><strong>根据表达值的真假,切换元素的显示和隐藏</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>v-show指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;切换显示状态&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeIsShow&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;累加年龄&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addAge&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./img/monkey.gif&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;age&gt;=18&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./img/monkey.gif&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"attr\">isShow</span>:<span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"attr\">age</span>:<span class=\"number\">17</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"attr\">changeIsShow</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.isShow = !<span class=\"built_in\">this</span>.isShow;</span></span><br><span class=\"line\"><span class=\"javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"attr\">addAge</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.age++;</span></span><br><span class=\"line\"><span class=\"javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">      &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a><strong>v-if</strong></h3><p><strong>根据表达值的真假,切换元素的显示和隐藏</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>v-if指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;切换显示&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toggleIsShow&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span>黑马程序员<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span>黑马程序员 - v-show修饰<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;temperature&gt;=35&quot;</span>&gt;</span>热死啦<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">isShow</span>:<span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">temperature</span>:<span class=\"number\">20</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">toggleIsShow</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.isShow = !<span class=\"built_in\">this</span>.isShow;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a><strong>v-bind</strong></h3><p><strong>设置元素的属性</strong></p>\n<p>动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。</p>\n<p>在绑定 class 或 style attribute 时，支持其它类型的值，如数组或对象。可以通过下面的教程链接查看详情。</p>\n<p>在绑定 prop 时，prop 必须在子组件中声明。可以用修饰符指定不同的绑定类型。</p>\n<p>没有参数时，可以绑定到一个包含键值对的对象。注意此时 class 和 style 绑定不支持数组和对象。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 绑定一个 attribute --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-bind:src</span>=<span class=\"string\">&quot;imageSrc&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态 attribute 名 (2.6.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-bind:</span>[<span class=\"attr\">key</span>]=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 缩写 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;imageSrc&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态 attribute 名缩写 (2.6.0+) --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">:</span>[<span class=\"attr\">key</span>]=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 内联字符串拼接 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;&#x27;/path/to/images/&#x27; + fileName&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- class 绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;&#123; red: isRed &#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;[classA, classB]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;[classA, &#123; classB: isB, classC: isC &#125;]&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- style 绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123; fontSize: size + &#x27;px&#x27; &#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;[styleObjectA, styleObjectB]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 绑定一个全是 attribute 的对象 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">&quot;&#123; id: someProp, &#x27;other-attr&#x27;: otherProp &#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 prop 修饰符绑定 DOM attribute --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind:text-content.prop</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- prop 绑定。“prop”必须在 my-component 中声明。--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop</span>=<span class=\"string\">&quot;someThing&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 $props 将父组件的 props 一起传给子组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">child-component</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">&quot;$props&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">child-component</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- XLink --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:xlink:special</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a><strong>v-for</strong></h3><p><strong>根据数据生成列表结构</strong></p>\n<blockquote>\n<p>我们可以用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是源数据数组，而 <code>item</code> 则是被迭代的数组元素的别名。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;example-1&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in items&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.message&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; item.message &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">var example1 = new Vue(&#123;</span><br><span class=\"line\">  el: &#x27;#example-1&#x27;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    items: [</span><br><span class=\"line\">      &#123; message: &#x27;Foo&#x27; &#125;,</span><br><span class=\"line\">      &#123; message: &#x27;Bar&#x27; &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//结果为</span><br><span class=\"line\">· Foo</span><br><span class=\"line\">· Bar</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在 v-for 块中，我们可以访问所有父作用域的 property。v-for 还支持一个可选的第二个参数，即当前项的索引。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;example-2&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">var example2 = new Vue(&#123;</span><br><span class=\"line\">  el: &#x27;#example-2&#x27;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    parentMessage: &#x27;Parent&#x27;,</span><br><span class=\"line\">    items: [</span><br><span class=\"line\">      &#123; message: &#x27;Foo&#x27; &#125;,</span><br><span class=\"line\">      &#123; message: &#x27;Bar&#x27; &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>你也可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item of items&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"v-for使用对象\"><a href=\"#v-for使用对象\" class=\"headerlink\" title=\"v-for使用对象\"></a><code>v-for</code>使用对象</h4><blockquote>\n<p>你也可以用 <code>v-for</code> 来遍历一个对象的 <code>property</code>。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;v-for-object&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;demo&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;value in object&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; value &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: &#x27;#v-for-object&#x27;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    object: &#123;</span><br><span class=\"line\">      title: &#x27;How to do lists in Vue&#x27;,</span><br><span class=\"line\">      author: &#x27;Jane Doe&#x27;,</span><br><span class=\"line\">      publishedAt: &#x27;2016-04-10&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>你也可以提供第二个的参数为 property 名称 (也就是键名)：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(value, name) in object&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>还可以用第三个参数作为索引：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(value, name, index) in object&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; index &#125;&#125;. &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a><strong>v-model</strong></h3><p><strong>获取和设置表单元素的值(双向数据绑定)</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>v-model指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;修改message&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;setM&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;message&quot;</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">&quot;getM&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">message</span>:<span class=\"string\">&quot;黑马程序员&quot;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">getM</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"built_in\">this</span>.message);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">setM</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.message =<span class=\"string\">&quot;酷丁鱼&quot;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>==<code>v-model</code>指令的作用是便捷的设置和获取表单元素的值==</li>\n<li>绑定的数据会和表单元素值相关联</li>\n<li>绑定的数据&lt;-&gt;表达元素的值</li>\n</ul>\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a><strong>axios</strong></h2><h3 id=\"关于使用\"><a href=\"#关于使用\" class=\"headerlink\" title=\"关于使用\"></a>关于使用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用npm 安装</span></span><br><span class=\"line\">$ npm install axios</span><br><span class=\"line\"><span class=\"comment\">//使用bower</span></span><br><span class=\"line\">$ bower install axios</span><br><span class=\"line\"><span class=\"comment\">//使用cdn</span></span><br><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关于请求\"><a href=\"#关于请求\" class=\"headerlink\" title=\"关于请求\"></a>关于请求</h3><p><strong>发送<code>Get</code>请求</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//发送Get请求</span></span><br><span class=\"line\"><span class=\"comment\">// 为给定 ID 的 user 创建请求</span></span><br><span class=\"line\">axios.get(<span class=\"string\">&#x27;/user?ID=12345&#x27;</span>)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上面的请求也可以这样做</span></span><br><span class=\"line\">axios.get(<span class=\"string\">&#x27;/user&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">params</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">ID</span>: <span class=\"number\">12345</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>发送<code>POST</code>请求</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.post(<span class=\"string\">&#x27;/user&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Fred&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;Flintstone&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>执行多个并发请求</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUserAccount</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> axios.get(<span class=\"string\">&#x27;/user/12345&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUserPermissions</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> axios.get(<span class=\"string\">&#x27;/user/12345/permissions&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">axios.all([getUserAccount(), getUserPermissions()])</span><br><span class=\"line\">  .then(axios.spread(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">acct, perms</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 两个请求现在都执行完成</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"axios-API\"><a href=\"#axios-API\" class=\"headerlink\" title=\"axios API\"></a>axios API</h2><p><strong>可以通过向 <code>axios</code> 传递相关配置来创建请求</strong></p>\n<blockquote>\n<p>axios(config)</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 发送 POST 请求</span></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/user/12345&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Fred&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;Flintstone&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取远端图片</span></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>:<span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>:<span class=\"string\">&#x27;http://bit.ly/2mTM3nY&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">responseType</span>:<span class=\"string\">&#x27;stream&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">  response.data.pipe(fs.createWriteStream(<span class=\"string\">&#x27;ada_lovelace.jpg&#x27;</span>))</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>axios(url[, config])</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 发送 GET 请求（默认的方法）</span></span><br><span class=\"line\">axios(<span class=\"string\">&#x27;/user/12345&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"别名\"><a href=\"#别名\" class=\"headerlink\" title=\"别名\"></a>别名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//请求方法别名</span></span><br><span class=\"line\">axios.request(config)</span><br><span class=\"line\">axios.get(url[, config])</span><br><span class=\"line\">axios.delete(url[, config])</span><br><span class=\"line\">axios.head(url[, config])</span><br><span class=\"line\">axios.options(url[, config])</span><br><span class=\"line\">axios.post(url[, data[, config]])</span><br><span class=\"line\">axios.put(url[, data[, config]])</span><br><span class=\"line\">axios.patch(url[, data[, config]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//并发</span></span><br><span class=\"line\">axios.all(iterable)</span><br><span class=\"line\">axios.spread(callback)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>创建实例</strong></p>\n<p><strong>axios.create([config])</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> instance = axios.create(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;https://some-domain.com/api/&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">  <span class=\"attr\">headers</span>: &#123;<span class=\"string\">&#x27;X-Custom-Header&#x27;</span>: <span class=\"string\">&#x27;foobar&#x27;</span>&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>实例方法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios#request(config)</span><br><span class=\"line\">axios#get(url[, config])</span><br><span class=\"line\">axios#<span class=\"keyword\">delete</span>(url[, config])</span><br><span class=\"line\">axios#head(url[, config])</span><br><span class=\"line\">axios#options(url[, config])</span><br><span class=\"line\">axios#post(url[, data[, config]])</span><br><span class=\"line\">axios#put(url[, data[, config]])</span><br><span class=\"line\">axios#patch(url[, data[, config]])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"请求配置\"><a href=\"#请求配置\" class=\"headerlink\" title=\"请求配置\"></a>请求配置</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"comment\">// `url` 是用于请求的服务器 URL</span></span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/user&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `method` 是创建请求时使用的方法</span></span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。</span></span><br><span class=\"line\">  <span class=\"comment\">// 它可以通过设置一个 `baseURL` 便于为 axios 实例的方法传递相对 URL</span></span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;https://some-domain.com/api/&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `transformRequest` 允许在向服务器发送前，修改请求数据</span></span><br><span class=\"line\">  <span class=\"comment\">// 只能用在 &#x27;PUT&#x27;, &#x27;POST&#x27; 和 &#x27;PATCH&#x27; 这几个请求方法</span></span><br><span class=\"line\">  <span class=\"comment\">// 后面数组中的函数必须返回一个字符串，或 ArrayBuffer，或 Stream</span></span><br><span class=\"line\">  <span class=\"attr\">transformRequest</span>: [<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data, headers</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 对 data 进行任意转换处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">  &#125;],</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `transformResponse` 在传递给 then/catch 前，允许修改响应数据</span></span><br><span class=\"line\">  <span class=\"attr\">transformResponse</span>: [<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 对 data 进行任意转换处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">  &#125;],</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `headers` 是即将被发送的自定义请求头</span></span><br><span class=\"line\">  <span class=\"attr\">headers</span>: &#123;<span class=\"string\">&#x27;X-Requested-With&#x27;</span>: <span class=\"string\">&#x27;XMLHttpRequest&#x27;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `params` 是即将与请求一起发送的 URL 参数</span></span><br><span class=\"line\">  <span class=\"comment\">// 必须是一个无格式对象(plain object)或 URLSearchParams 对象</span></span><br><span class=\"line\">  <span class=\"attr\">params</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">ID</span>: <span class=\"number\">12345</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `paramsSerializer` 是一个负责 `params` 序列化的函数</span></span><br><span class=\"line\">  <span class=\"comment\">// (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)</span></span><br><span class=\"line\">  <span class=\"attr\">paramsSerializer</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Qs.stringify(params, &#123;<span class=\"attr\">arrayFormat</span>: <span class=\"string\">&#x27;brackets&#x27;</span>&#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `data` 是作为请求主体被发送的数据</span></span><br><span class=\"line\">  <span class=\"comment\">// 只适用于这些请求方法 &#x27;PUT&#x27;, &#x27;POST&#x27;, 和 &#x27;PATCH&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 在没有设置 `transformRequest` 时，必须是以下类型之一：</span></span><br><span class=\"line\">  <span class=\"comment\">// - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams</span></span><br><span class=\"line\">  <span class=\"comment\">// - 浏览器专属：FormData, File, Blob</span></span><br><span class=\"line\">  <span class=\"comment\">// - Node 专属： Stream</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Fred&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `timeout` 指定请求超时的毫秒数(0 表示无超时时间)</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果请求话费了超过 `timeout` 的时间，请求将被中断</span></span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `withCredentials` 表示跨域请求时是否需要使用凭证</span></span><br><span class=\"line\">  <span class=\"attr\">withCredentials</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `adapter` 允许自定义处理请求，以使测试更轻松</span></span><br><span class=\"line\">  <span class=\"comment\">// 返回一个 promise 并应用一个有效的响应 (查阅 [response docs](#response-api)).</span></span><br><span class=\"line\">  <span class=\"attr\">adapter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* ... */</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// `auth` 表示应该使用 HTTP 基础验证，并提供凭据</span></span><br><span class=\"line\">  <span class=\"comment\">// 这将设置一个 `Authorization` 头，覆写掉现有的任意使用 `headers` 设置的自定义 `Authorization`头</span></span><br><span class=\"line\">  <span class=\"attr\">auth</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&#x27;janedoe&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: <span class=\"string\">&#x27;s00pers3cret&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `responseType` 表示服务器响应的数据类型，可以是 &#x27;arraybuffer&#x27;, &#x27;blob&#x27;, &#x27;document&#x27;, &#x27;json&#x27;, &#x27;text&#x27;, &#x27;stream&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;json&#x27;</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `responseEncoding` indicates encoding to use for decoding responses</span></span><br><span class=\"line\">  <span class=\"comment\">// Note: Ignored for `responseType` of &#x27;stream&#x27; or client-side requests</span></span><br><span class=\"line\">  <span class=\"attr\">responseEncoding</span>: <span class=\"string\">&#x27;utf8&#x27;</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `xsrfCookieName` 是用作 xsrf token 的值的cookie的名称</span></span><br><span class=\"line\">  <span class=\"attr\">xsrfCookieName</span>: <span class=\"string\">&#x27;XSRF-TOKEN&#x27;</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `xsrfHeaderName` is the name of the http header that carries the xsrf token value</span></span><br><span class=\"line\">  <span class=\"attr\">xsrfHeaderName</span>: <span class=\"string\">&#x27;X-XSRF-TOKEN&#x27;</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `onUploadProgress` 允许为上传处理进度事件</span></span><br><span class=\"line\">  <span class=\"attr\">onUploadProgress</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">progressEvent</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Do whatever you want with the native progress event</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `onDownloadProgress` 允许为下载处理进度事件</span></span><br><span class=\"line\">  <span class=\"attr\">onDownloadProgress</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">progressEvent</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 对原生进度事件的处理</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `maxContentLength` 定义允许的响应内容的最大尺寸</span></span><br><span class=\"line\">  <span class=\"attr\">maxContentLength</span>: <span class=\"number\">2000</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `validateStatus` 定义对于给定的HTTP 响应状态码是 resolve 或 reject  promise 。如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)，promise 将被 resolve; 否则，promise 将被 rejecte</span></span><br><span class=\"line\">  <span class=\"attr\">validateStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">status</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status &gt;= <span class=\"number\">200</span> &amp;&amp; status &lt; <span class=\"number\">300</span>; <span class=\"comment\">// default</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `maxRedirects` 定义在 node.js 中 follow 的最大重定向数目</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果设置为0，将不会 follow 任何重定向</span></span><br><span class=\"line\">  <span class=\"attr\">maxRedirects</span>: <span class=\"number\">5</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `socketPath` defines a UNIX Socket to be used in node.js.</span></span><br><span class=\"line\">  <span class=\"comment\">// e.g. &#x27;/var/run/docker.sock&#x27; to send requests to the docker daemon.</span></span><br><span class=\"line\">  <span class=\"comment\">// Only either `socketPath` or `proxy` can be specified.</span></span><br><span class=\"line\">  <span class=\"comment\">// If both are specified, `socketPath` is used.</span></span><br><span class=\"line\">  <span class=\"attr\">socketPath</span>: <span class=\"literal\">null</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `httpAgent` 和 `httpsAgent` 分别在 node.js 中用于定义在执行 http 和 https 时使用的自定义代理。允许像这样配置选项：</span></span><br><span class=\"line\">  <span class=\"comment\">// `keepAlive` 默认没有启用</span></span><br><span class=\"line\">  <span class=\"attr\">httpAgent</span>: <span class=\"keyword\">new</span> http.Agent(&#123; <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">  <span class=\"attr\">httpsAgent</span>: <span class=\"keyword\">new</span> https.Agent(&#123; <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// &#x27;proxy&#x27; 定义代理服务器的主机名称和端口</span></span><br><span class=\"line\">  <span class=\"comment\">// `auth` 表示 HTTP 基础验证应当用于连接代理，并提供凭据</span></span><br><span class=\"line\">  <span class=\"comment\">// 这将会设置一个 `Proxy-Authorization` 头，覆写掉已有的通过使用 `header` 设置的自定义 `Proxy-Authorization` 头。</span></span><br><span class=\"line\">  <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;127.0.0.1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9000</span>,</span><br><span class=\"line\">    <span class=\"attr\">auth</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: <span class=\"string\">&#x27;mikeymike&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">password</span>: <span class=\"string\">&#x27;rapunz3l&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `cancelToken` 指定用于取消请求的 cancel token</span></span><br><span class=\"line\">  <span class=\"comment\">// （查看后面的 Cancellation 这节了解更多）</span></span><br><span class=\"line\">  <span class=\"attr\">cancelToken</span>: <span class=\"keyword\">new</span> CancelToken(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">cancel</span>) </span>&#123;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"响应结构\"><a href=\"#响应结构\" class=\"headerlink\" title=\"响应结构\"></a>响应结构</h3><p><strong>某个请求的响应包含以下信息</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// `data` 由服务器提供的响应</span></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `status` 来自服务器响应的 HTTP 状态码</span></span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `statusText` 来自服务器响应的 HTTP 状态信息</span></span><br><span class=\"line\">  <span class=\"attr\">statusText</span>: <span class=\"string\">&#x27;OK&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// `headers` 服务器响应的头</span></span><br><span class=\"line\">  <span class=\"attr\">headers</span>: &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// `config` 是为请求提供的配置信息</span></span><br><span class=\"line\">  <span class=\"attr\">config</span>: &#123;&#125;,</span><br><span class=\"line\"> <span class=\"comment\">// &#x27;request&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// `request` is the request that generated this response</span></span><br><span class=\"line\">  <span class=\"comment\">// It is the last ClientRequest instance in node.js (in redirects)</span></span><br><span class=\"line\">  <span class=\"comment\">// and an XMLHttpRequest instance the browser</span></span><br><span class=\"line\">  <span class=\"attr\">request</span>: &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>使用 <code>then</code> 时，你将接收下面这样的响应 :</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.get(<span class=\"string\">&#x27;/user/12345&#x27;</span>)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response.data);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response.status);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response.statusText);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response.headers);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(response.config);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/8408ed11/",
            "url": "https://smile1231.github.io/posts/8408ed11/",
            "title": "Vue-Cli介绍以及使用",
            "date_published": "2022-02-14T14:14:14.000Z",
            "content_html": "<h1 id=\"Vue-Cli介绍以及使用\"><a href=\"#Vue-Cli介绍以及使用\" class=\"headerlink\" title=\"Vue-Cli介绍以及使用\"></a><code>Vue-Cli</code>介绍以及使用</h1><p><code>vue-cli</code> 官方提供的一个脚手架,用于快速生成一个 <code>vue</code> 的项目模板;<br> 预先定义好的目录结构及基础代码，就好比咱们在创建 <code>Maven</code> 项目时可以选择创建一个骨架项目，这个骨架项目就是脚手架,我们的开发更加的快速;<br>主要的功能:</p>\n<ul>\n<li> 统一的目录结构</li>\n<li> 本地调试</li>\n<li> 热部署</li>\n<li> 单元测试</li>\n<li> 集成打包上线</li>\n</ul>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>需要的环境</p>\n</blockquote>\n<p><code>Node.js</code> : <span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5jbi9kb3dubG9hZC8=\">http://nodejs.cn/download/</span><br>安装就无脑下一步就好,安装在自己的环境目录下</p>\n<p>Git : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=\">https://git-scm.com/downloads</span><br>镜像:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL2dpdC1mb3Itd2luZG93cy8=\">https://npm.taobao.org/mirrors/git-for-windows/</span></p>\n<p>确认<code>nodejs</code>安装成功:<br><code>cmd</code> 下输入 <code>node -v</code>,查看是否能够正确打印出版本号即可!<br><code>cmd</code> 下输入 <code>npm -v</code>,查看是否能够正确打印出版本号即可!<br>这个<code>npm</code>,就是一个软件包管理工具,就和<code>linux</code>下的<code>apt</code>软件安装差不多!<br>安装 <code>Node.js</code> 淘宝镜像加速器（<code>cnpm</code>）<br>这样子的话,下载会快很多~<br>在命令台输入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -g 就是全局安装</span><br><span class=\"line\">npm install cnpm -g</span><br><span class=\"line\"># 或使用如下语句解决 npm 速度慢的问题</span><br><span class=\"line\">npm install --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>安装的位置:<code>C:\\Users\\Administrator\\AppData\\Roaming\\npm</code></p>\n\n\n<h2 id=\"安装-vue-cli\"><a href=\"#安装-vue-cli\" class=\"headerlink\" title=\"安装 vue-cli\"></a>安装 <code>vue-cli</code></h2><p>以下皆为狂神版本,但感觉有点问题</p>\n<hr>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在命令台输入</span></span><br><span class=\"line\">cnpm install vue-cli -g</span><br><span class=\"line\"><span class=\"comment\">#查看是否安装成功</span></span><br><span class=\"line\">vue list</span><br></pre></td></tr></table></figure>\n## 第一个 ``vue-cli`` 应用程序\n\n<p>创建一个<code>Vue</code>项目,我们随便建立一个空的文件夹在电脑上<br>创建一个基于 <code>webpack</code> 模板的 <code>vue</code>应用程序</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#这里的 myvue 是项目名称，可以根据自己的需求起名</span></span><br><span class=\"line\">vue init webpack myvue</span><br></pre></td></tr></table></figure>\n<p>一路都选择<code>no</code>即可;<br>初始化并运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myvue</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<hr>\n\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2NyZWF0aW5nLWEtcHJvamVjdC5odG1sI3Z1ZS1jcmVhdGU=\">官网方法使用Vue-Cli创建项目链接</span></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3>\n\n<blockquote>\n<p>可以使用下列任一命令安装这个新的包：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>安装之后，你就可以在命令行中访问 <code>vue</code> 命令。你可以通过简单运行 <code>vue</code>，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。</p>\n<p>你还可以用这个命令来检查其版本是否正确：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue --version</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h3><p>如需升级全局的 <code>Vue CLI</code> 包，请运行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update -g @vue/cli</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#或者</span></span><br><span class=\"line\">yarn global upgrade --latest @vue/cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h3><p>上面列出来的命令是用于升级全局的 <code>Vue CLI</code>。如需升级项目中的 <code>Vue CLI</code> 相关模块（以 <code>@vue/cli-plugin-</code> 或 <code>vue-cli-plugin-</code> 开头），请在项目目录下运行 <code>vue upgrade：</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法： upgrade [options] [plugin-name]</span><br><span class=\"line\"></span><br><span class=\"line\">（试用）升级 Vue CLI 服务及插件</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\">  -t, --to &lt;version&gt;    升级 &lt;plugin-name&gt; 到指定的版本</span><br><span class=\"line\">  -f, --from &lt;version&gt;  跳过本地版本检测，默认插件是从此处指定的版本升级上来</span><br><span class=\"line\">  -r, --registry &lt;url&gt;  使用指定的 registry 地址安装依赖</span><br><span class=\"line\">  --all                 升级所有的插件</span><br><span class=\"line\">  --next                检查插件新版本时，包括 alpha/beta/rc 版本在内</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>            输出帮助内容</span><br></pre></td></tr></table></figure>\n<h3 id=\"官网使用-Vue-Cli-创建项目\"><a href=\"#官网使用-Vue-Cli-创建项目\" class=\"headerlink\" title=\"官网使用``Vue-Cli`创建项目\"></a>官网使用``Vue-Cli`创建项目</h3><blockquote>\n<p><strong>vue create</strong></p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create hello-world</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>警告:<br>如果你在 Windows 上通过 minTTY 使用 Git Bash，交互提示符并不工作。你必须通过 winpty vue.cmd create hello-world 启动这个命令。不过，如果你仍想使用 vue create hello-world，则可以通过在 ~/.bashrc 文件中添加以下行来为命令添加别名。 alias vue=’winpty vue.cmd’ 你需要重新启动 Git Bash 终端会话以使更新后的 bashrc 文件生效。</p>\n</blockquote>\n<blockquote>\n<p>你会被提示选取一个 preset。你可以选默认的包含了基本的 Babel + ESLint 设置的 preset，也可以选“手动选择特性”来选取需要的特性。</p>\n</blockquote>\n\n\n<blockquote>\n<p>这个默认的设置非常适合快速创建一个新项目的原型，而手动设置则提供了更多的选项，它们是面向生产的项目更加需要的。</p>\n</blockquote>\n<p>一路<code>enter</code>:</p>\n\n\n\n\n\n<p>项目就算是创建完成了</p>\n<blockquote>\n<p><code>vue create</code> 命令有一些可选项，你可以通过运行以下命令进行探索：</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法：create [options] &lt;app-name&gt;</span><br><span class=\"line\">创建一个由 `vue-cli-service` 提供支持的新项目</span><br><span class=\"line\">选项：</span><br><span class=\"line\"></span><br><span class=\"line\">  -p, --preset &lt;presetName&gt;       忽略提示符并使用已保存的或远程的预设选项</span><br><span class=\"line\">  -d, --default                   忽略提示符并使用默认预设选项</span><br><span class=\"line\">  -i, --inlinePreset &lt;json&gt;       忽略提示符并使用内联的 JSON 字符串预设选项</span><br><span class=\"line\">  -m, --packageManager &lt;<span class=\"built_in\">command</span>&gt;  在安装依赖时使用指定的 npm 客户端</span><br><span class=\"line\">  -r, --registry &lt;url&gt;            在安装依赖时使用指定的 npm registry</span><br><span class=\"line\">  -g, --git [message]             强制 / 跳过 git 初始化，并可选的指定初始化提交信息</span><br><span class=\"line\">  -n, --no-git                    跳过 git 初始化</span><br><span class=\"line\">  -f, --force                     覆写目标目录可能存在的配置</span><br><span class=\"line\">  -c, --<span class=\"built_in\">clone</span>                     使用 git <span class=\"built_in\">clone</span> 获取远程预设选项</span><br><span class=\"line\">  -x, --proxy                     使用指定的代理创建项目</span><br><span class=\"line\">  -b, --bare                      创建项目时省略默认组件中的新手指导信息</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>                      输出使用帮助信息</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>使用图形化界面</strong></p>\n</blockquote>\n<p>你也可以通过 <code>vue ui</code> 命令以图形化界面创建和管理项目：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue ui</span><br></pre></td></tr></table></figure>\n<p>上述命令会打开一个浏览器窗口，并以图形化界面将你引导至项目创建的流程。</p>\n\n\n<blockquote>\n<p><strong>拉取 2.x 模板 (旧版本)</strong></p>\n</blockquote>\n<p><code>Vue CLI &gt;= 3</code> 和旧版使用了相同的 <code>vue</code> 命令，所以 <code>Vue CLI 2 (vue-cli)</code> 被覆盖了。如果你仍然需要使用旧版本的 <code>vue init</code> 功能，你可以全局安装一个桥接工具：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli-init</span><br><span class=\"line\"><span class=\"comment\"># `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同</span></span><br><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CLI-服务\"><a href=\"#CLI-服务\" class=\"headerlink\" title=\"CLI 服务\"></a>CLI 服务</h3><p>在一个 <code>Vue CLI</code> 项目中，<code>@vue/cli-service</code> 安装了一个名为 <code>vue-cli-service</code> 的命令。你可以在 <code>npm scripts</code> 中以 <code>vue-cli-service</code>、或者从终端中以 <code>./node_modules/.bin/vue-cli-service</code> 访问这个命令。</p>\n<p>这是你使用默认 <code>preset</code> 的项目的 <code>package.json：</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;serve&quot;</span>: <span class=\"string\">&quot;vue-cli-service serve&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;build&quot;</span>: <span class=\"string\">&quot;vue-cli-service build&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;lint&quot;</span>: <span class=\"string\">&quot;vue-cli-service lint&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以通过 <code>npm</code> 或 <code>Yarn</code> 调用这些 <code>script</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">yarn serve</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong><code>vue-cli-service serve</code></strong></p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法：vue-cli-service serve [options] [entry]</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\"></span><br><span class=\"line\">  --open    在服务器启动时打开浏览器</span><br><span class=\"line\">  --copy    在服务器启动时将 URL 复制到剪切版</span><br><span class=\"line\">  --mode    指定环境模式 (默认值：development)</span><br><span class=\"line\">  --host    指定 host (默认值：0.0.0.0)</span><br><span class=\"line\">  --port    指定 port (默认值：8080)</span><br><span class=\"line\">  --https   使用 https (默认值：<span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>vue-cli-service serve</code> 命令会启动一个开发服务器 (基于 <code>webpack-dev-server</code>) 并附带开箱即用的模块热重载 <code>(Hot-Module-Replacement)</code>。</p>\n<p>除了通过命令行参数，你也可以使用 <code>vue.config.js</code> 里的 <code>devServer</code> 字段配置开发服务器。</p>\n<p>命令行参数 <code>[entry]</code> 将被指定为唯一入口，而非额外的追加入口。尝试使用 <code>[entry]</code> 覆盖 <code>config.pages</code> 中的 <code>entry</code> 将可能引发错误</p>\n<blockquote>\n<p><strong><code>vue-cli-service build</code></strong></p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法：vue-cli-service build [options] [entry|pattern]</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\"></span><br><span class=\"line\">  --mode        指定环境模式 (默认值：production)</span><br><span class=\"line\">  --dest        指定输出目录 (默认值：dist)</span><br><span class=\"line\">  --modern      面向现代浏览器带自动回退地构建应用</span><br><span class=\"line\">  --target      app | lib | wc | wc-async (默认值：app)</span><br><span class=\"line\">  --name        库或 Web Components 模式下的名字 (默认值：package.json 中的 <span class=\"string\">&quot;name&quot;</span> 字段或入口文件名)</span><br><span class=\"line\">  --no-clean    在构建项目之前不清除目标目录</span><br><span class=\"line\">  --report      生成 report.html 以帮助分析包内容</span><br><span class=\"line\">  --report-json 生成 report.json 以帮助分析包内容</span><br><span class=\"line\">  --watch       监听文件变化</span><br></pre></td></tr></table></figure>\n\n<p><code>vue-cli-service build</code> 会在 <code>dist/</code> 目录产生一个可用于生产环境的包，带有 <code>JS/CSS/HTML</code> 的压缩，和为更好的缓存而做的自动的 <code>vendor chunk splitting</code>。它的 <code>chunk manifest</code> 会内联在 <code>HTML</code> 里。</p>\n<p>这里还有一些有用的命令参数：</p>\n<ul>\n<li><code>--modern</code> 使用现代模式构建应用，为现代浏览器交付原生支持的 <code>ES2015</code> 代码，并生成一个兼容老浏览器的包用来自动回退。</li>\n<li><code>--target</code> 允许你将项目中的任何组件以一个库或 <code>Web Components</code> 组件的方式进行构建。更多细节请查阅构建目标。</li>\n<li><code>--report</code> 和 <code>--report-json</code> 会根据构建统计生成报告，它会帮助你分析包中包含的模块们的大小。</li>\n</ul>\n<blockquote>\n<p><strong><code>vue-cli-service inspect</code></strong></p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法：vue-cli-service inspect [options] [...paths]</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\"></span><br><span class=\"line\">  --mode    指定环境模式 (默认值：development)</span><br></pre></td></tr></table></figure>\n\n<p>你可以使用 <code>vue-cli-service inspect</code> 来审查一个 <code>Vue CLI</code> 项目的 <code>webpack config</code>。更多细节请查阅审查 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL3dlYnBhY2suaHRtbCMlRTUlQUUlQTElRTYlOUYlQTUlRTklQTElQjklRTclOUIlQUUlRTclOUElODQtd2VicGFjay1jb25maWc=\">webpack config</span>。</p>\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/ddb0d187/",
            "url": "https://smile1231.github.io/posts/ddb0d187/",
            "title": "TS配置Webpack",
            "date_published": "2022-02-14T14:12:26.000Z",
            "content_html": "<h1 id=\"Ts配置Webpack笔记\"><a href=\"#Ts配置Webpack笔记\" class=\"headerlink\" title=\"Ts配置Webpack笔记\"></a>Ts配置Webpack笔记</h1><h2 id=\"安装-Node-js-淘宝镜像加速器（cnpm）\"><a href=\"#安装-Node-js-淘宝镜像加速器（cnpm）\" class=\"headerlink\" title=\"安装 Node.js 淘宝镜像加速器（cnpm）\"></a>安装 Node.js 淘宝镜像加速器（cnpm）</h2><p>==首先电脑是已经要满足安装了Node.js才可以==</p>\n<p>由于不是很专业的前端,然后又学习了一些简单的<code>npm</code>指令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v          #显示版本，检查npm 是否正确安装。</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm install express   #安装express模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm install -g express  #全局安装express模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm list         #列出已安装模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm show express     #显示模块详情</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm update        #升级当前目录下的项目的所有模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm update express    #升级当前目录下的项目的指定模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm update -g express  #升级全局安装的express模块</span><br><span class=\"line\"> </span><br><span class=\"line\">$ npm uninstall express  #删除指定的模块</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<blockquote>\n<p>因为配置了 cnpm 下载速度会快很多</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -g 就是全局安装 (Node Package Manager)</span><br><span class=\"line\">npm install cnpm -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 若安装失败，则将源npm源换成淘宝镜像</span><br><span class=\"line\"># 因为npm安装插件是从国外服务器下载，受网络影响大</span><br><span class=\"line\">npm config set registry https://registry.npm.taobao.org</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后再执行</span><br><span class=\"line\">npm install cnpm -g</span><br></pre></td></tr></table></figure>\n<p><strong>安装的位置:<code>C:\\Users\\Administrator\\AppData\\Roaming\\npm</code></strong></p>\n<p>然后就可以使用 <code>cnpm</code>啦</p>\n<h2 id=\"Ts中配置WebPack\"><a href=\"#Ts中配置WebPack\" class=\"headerlink\" title=\"Ts中配置WebPack\"></a>Ts中配置WebPack</h2><h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 会在目录下面生成一个 package.json 文件</span><br><span class=\"line\">PS G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts&gt; npm init -y</span><br><span class=\"line\">//Wrote to G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts\\package.json:</span><br><span class=\"line\">//&#123;</span><br><span class=\"line\">// &quot;name&quot;: &quot;03_webpack_ts&quot;,</span><br><span class=\"line\">//  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class=\"line\">//  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class=\"line\">//  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">//    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><br><span class=\"line\">//  &#125;,</span><br><span class=\"line\">//  &quot;author&quot;: &quot;&quot;,</span><br><span class=\"line\">//  &quot;license&quot;: &quot;ISC&quot;</span><br><span class=\"line\">//&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//会在目录下生成一个 tsconfig.json 文件</span><br><span class=\"line\">PS G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts&gt; tsc --init</span><br><span class=\"line\">// message TS6071: Successfully created a tsconfig.json file.</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载依赖\"><a href=\"#下载依赖\" class=\"headerlink\" title=\"下载依赖\"></a>下载依赖</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//安装Ts包</span><br><span class=\"line\">PS G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts&gt; cnpm install -D typescript</span><br><span class=\"line\">// webPack-cli 是对内容进行编译使用的(安装特定版本是为了兼容问题)</span><br><span class=\"line\">// webpack-dev-server 是用来启用开发服务器的 </span><br><span class=\"line\">PS G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts&gt;  cnpm install -D webpack@4.41.5 webpack-cli@3.3.10 webpack-dev-server@3.10.2</span><br><span class=\"line\">//  html-webpack-plugin  是用来打包 html 文件的 </span><br><span class=\"line\">// clean-webpack-plugin  是用来清除之前打包的js文件之类的</span><br><span class=\"line\">//  ts-loader  针对 Ts文件进行编译处理的</span><br><span class=\"line\">//  cross-env 涉及跨编译台的命令</span><br><span class=\"line\">PS G:\\VCCode\\space\\typescript+Vue3\\03_webpack_ts&gt; cnpm install -D html-webpack-plugin clean-webpack-plugin ts-loader cross-env</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关于 - S , -D , -g 参数的说明</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install module_name -S    即    npm install module_name –save    写入dependencies</span><br><span class=\"line\">npm install module_name -D    即    npm install module_name –save-dev 写入devDependencies</span><br><span class=\"line\">npm install module_name -g \t全局安装(命令行使用)</span><br><span class=\"line\">npm install module_name \t\t本地安装(将安装包放在 ./node_modules 下)</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试案例素材文件以及配置\"><a href=\"#测试案例素材文件以及配置\" class=\"headerlink\" title=\"测试案例素材文件以及配置\"></a>测试案例素材文件以及配置</h3><h4 id=\"入口-src-main-ts\"><a href=\"#入口-src-main-ts\" class=\"headerlink\" title=\"入口:src/main.ts\"></a><strong>入口:src/main.ts</strong></h4><p><code>src</code>目录主要用来放置源码</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import &#x27;./01_helloworld&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">&#x27;Hello Webpack TS!&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"index页面-public-index-html\"><a href=\"#index页面-public-index-html\" class=\"headerlink\" title=\"index页面: public/index.html\"></a>index页面: public/index.html</h4><p><code>public</code>目录主要用来放置静态<code>html</code>文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>webpack &amp; TS<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">&lt;/html</span><br></pre></td></tr></table></figure>\n<h4 id=\"build-webpack-config-js\"><a href=\"#build-webpack-config-js\" class=\"headerlink\" title=\"build/webpack.config.js\"></a>build/webpack.config.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;CleanWebpackPlugin&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;clean-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> isProd = process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span> <span class=\"comment\">// 是否生产环境</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span> (<span class=\"params\">dir</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.resolve(__dirname, <span class=\"string\">&#x27;..&#x27;</span>, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是生产环境还是开发环境</span></span><br><span class=\"line\">  <span class=\"attr\">mode</span>: isProd ? <span class=\"string\">&#x27;production&#x27;</span> : <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">//主入口目录</span></span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/main.ts&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//打包后的内容输出目录</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//放在dist 目录下</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(<span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\">//以上面的 app 文件为开头</span></span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].[contenthash:8].js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.tsx?$/</span>,</span><br><span class=\"line\">        <span class=\"comment\">//使用 ts-loader 包 对 src 下的ts以及tsx文件进行编译操作</span></span><br><span class=\"line\">        use: <span class=\"string\">&#x27;ts-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">include</span>: [resolve(<span class=\"string\">&#x27;src&#x27;</span>)]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">      <span class=\"comment\">//会把 dist 下的 之前打包的 js清除掉</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(&#123;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">//此处针对 当前public 下的 html 进行打包</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;./public/index.html&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ],</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//对扩展名进行处理的 , 比如说 引入.ts文件不需要写拓展名</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.ts&#x27;</span>, <span class=\"string\">&#x27;.tsx&#x27;</span>, <span class=\"string\">&#x27;.js&#x27;</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//使用sourceMap ,将来代码哪一行出现了错误 将会出现提示</span></span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: isProd ? <span class=\"string\">&#x27;cheap-module-source-map&#x27;</span> : <span class=\"string\">&#x27;cheap-module-eval-source-map&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动项目之后进行的一些配置</span></span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;localhost&#x27;</span>, <span class=\"comment\">// 主机名</span></span><br><span class=\"line\">    <span class=\"attr\">stats</span>: <span class=\"string\">&#x27;errors-only&#x27;</span>, <span class=\"comment\">// 打包日志输出输出错误信息</span></span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8081</span>,</span><br><span class=\"line\">    <span class=\"comment\">//浏览器中自动打开</span></span><br><span class=\"line\">    <span class=\"attr\">open</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置打包命令\"><a href=\"#配置打包命令\" class=\"headerlink\" title=\"配置打包命令\"></a>配置打包命令</h3><p>在生成的<code>package.json</code>文件中,替换掉<code>test</code>标签:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//cross-env 的作用是跨平台 </span></span><br><span class=\"line\">    <span class=\"comment\">//因为有些指令只能够在 linux 中被识别 </span></span><br><span class=\"line\">    <span class=\"comment\">// dev 开发环境</span></span><br><span class=\"line\">    <span class=\"comment\">// bulid 生产环境 </span></span><br><span class=\"line\">    <span class=\"string\">&quot;dev&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=development webpack-dev-server --config build/webpack.config.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;cross-env NODE_ENV=production webpack --config build/webpack.config.js&quot;</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行与打包\"><a href=\"#运行与打包\" class=\"headerlink\" title=\"运行与打包\"></a>运行与打包</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//运行</span><br><span class=\"line\">npm run dev</span><br><span class=\"line\">//打包</span><br><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure>\n<h4 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果:\"></a>运行效果:</h4>\n\n\n\n\n<h4 id=\"打包效果\"><a href=\"#打包效果\" class=\"headerlink\" title=\"打包效果\"></a>打包效果</h4>\n\n<p>已经生成了<code>dist</code>目录以及相应的文件</p>\n\n\n<h2 id=\"主要需要注意的就是-webpack-包之类的-版本问题就okk了\"><a href=\"#主要需要注意的就是-webpack-包之类的-版本问题就okk了\" class=\"headerlink\" title=\"主要需要注意的就是 webpack 包之类的 版本问题就okk了\"></a>主要需要注意的就是 <code>webpack</code> 包之类的 版本问题就okk了</h2>",
            "tags": [
                "前端",
                "TypeScript",
                "WebPack"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/7b604068/",
            "url": "https://smile1231.github.io/posts/7b604068/",
            "title": "Html页面插入地图",
            "date_published": "2022-02-14T14:11:32.000Z",
            "content_html": "<h1 id=\"html页面插入百度谷歌地图-react中插入百度地图\"><a href=\"#html页面插入百度谷歌地图-react中插入百度地图\" class=\"headerlink\" title=\"html页面插入百度谷歌地图,react中插入百度地图\"></a><code>html</code>页面插入百度谷歌地图,<code>react</code>中插入百度地图</h1><h2 id=\"Google地图\"><a href=\"#Google地图\" class=\"headerlink\" title=\"Google地图\"></a><code>Google</code>地图</h2><ol>\n<li>在谷歌地图中 <code>http://www.google.cn/maps/</code></li>\n</ol>\n<p>输入地址，搜索到指定地点之后，点击“共享”按钮</p>\n<span id=\"more\"></span>\n\n<img data-src=\"/posts/7b604068/2022-02-14-22-35-40.png\" class=\"\">\n\n<ol start=\"2\">\n<li>然后使用嵌入地图</li>\n</ol>\n<img data-src=\"/posts/7b604068/2022-02-14-22-35-49.png\" class=\"\">\n\n<ol start=\"3\">\n<li>将复制的<code>HTML</code>代码粘贴到相应位置，根据自己需求修改宽高</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contact-map&quot;</span>&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contact-map-size&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3392.8449822382095!2d119.92011513973418!3d31.747432000000007!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x35b46cf8c886febb%3A0x54a85cdf7ef32ab9!2z5rGf6IuP55CG5bel5a2m6Zmi55S15rCU5L-h5oGv5bel56iL5a2m6Zmi!5e0!3m2!1szh-CN!2sus!4v1617931666774!5m2!1szh-CN!2sus&quot;</span>   <span class=\"attr\">allowfullscreen</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">loading</span>=<span class=\"string\">&quot;lazy&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n",
            "tags": [
                "前端",
                "JavaScript",
                "Html"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/4aa00b9a/",
            "url": "https://smile1231.github.io/posts/4aa00b9a/",
            "title": "Js中的some、find、findindex、includes、filter的使用",
            "date_published": "2022-02-14T13:30:46.000Z",
            "content_html": "<h1 id=\"js中的some、find、findindex、includes、filter的使用\"><a href=\"#js中的some、find、findindex、includes、filter的使用\" class=\"headerlink\" title=\"js中的some、find、findindex、includes、filter的使用\"></a><code>js</code>中的<code>some、find、findindex、includes、filter</code>的使用</h1><blockquote>\n<p>类似于<code>foreach</code>的方法<br>为什么把这类方法归到一起讲，因为我在使用的过程中发现其实这些方法的用法和参数其实都是一样的，底层应该都是和<code>foreach</code>差不多，差别只是在于返回的东西不一样，那么再来看看这些方法的差别以及用法。</p>\n</blockquote>\n<ul>\n<li>语法<br><code>array.方法名(function(currentValue, index, arr),thisValue)</code></li>\n</ul>\n<span id=\"more\"></span>\n\n<ul>\n<li>参数</li>\n</ul>\n<img data-src=\"/posts/4aa00b9a/2022-02-14-22-33-00.png\" class=\"\">\n\n<p>以上是这些方法共同的基本的语法以及参数</p>\n<p>那么再来看看这些方法的不同点</p>\n<h2 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach()\"></a><code>forEach()</code></h2><p><code>forEach()</code> 方法用于调用数组的每个元素，并将元素传递给回调函数。</p>\n<p>注意: <code>forEach()</code> 对于空数组是不会执行回调函数的。</p>\n<blockquote>\n<p>也就是说 <code>forEach()</code> 这个方法是没有任何限制的，回调函数最终返回的值是完全由自己决定的，也就是说其实后面介绍到的所有的方法其实也都可以通过<code>forEach()</code>来实现相同的功能，只不过要自己写更多的代码量。<br><code>forEach()</code>可以通过<code>return</code>来提前退出循环，同时返回相应的值</p>\n</blockquote>\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map()\"></a><code>map()</code></h2><p><code>map()</code> 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。</p>\n<p><code>map()</code> 方法按照原始数组元素顺序依次处理元素。</p>\n<ul>\n<li><p>注意： <code>map()</code> 不会对空数组进行检测。</p>\n</li>\n<li><p>注意： <code>map()</code> 不会改变原始数组。</p>\n</li>\n</ul>\n<blockquote>\n<p><code>map</code>和<code>foreach</code>很像，差别就在于<code>map</code>所得到的所有符合条件的结果都会通过一个数组来返回。在我们需要将结果放到一个数组中的时候直接使用<code>map</code>就会更加的方便。</p>\n</blockquote>\n<blockquote>\n<p>在<code>map()</code>中<code>return</code>无论如何都会返回一个数组，可以通过<code>return</code>来对原数组进行操作返回一个新数组</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(arr.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;     <span class=\"comment\">//[[true, true, true, true, true, true, true, true, true]]</span></span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(arr.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item*<span class=\"number\">2</span>;     <span class=\"comment\">//[2, 4, 6, 8, 10, 12, 14, 16, 18]</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<h2 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some()\"></a><code>some()</code></h2><p><code>some()</code> 方法用于检测数组中的元素是否满足指定条件（函数提供）。</p>\n<p><code>some()</code> 方法会依次执行数组的每个元素：</p>\n<p>如果有一个元素满足条件，则表达式返回<code>true</code> , 剩余的元素不会再执行检测。<br>如果没有满足条件的元素，则返回<code>false</code>。<br>注意： <code>some()</code> 不会对空数组进行检测。<br>注意： <code>some()</code> 不会改变原始数组。</p>\n<p>也就是说<code>some</code>并不一定会遍历完数组中全部的元素，当遍历到由符合条件的元素时就会返回<code>true</code>并终止，否则返回<code>false</code>，所以也就可以通过利用此特性来对数组中特定一部分的元素进行操作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.some(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 通过some可以对数组中符合要求的之前的元素进行操作</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(item);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> item &gt; <span class=\"number\">5</span>;  <span class=\"comment\">//可以通过return来设置返回值的条件</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//读取缓存是否收藏</span></span><br><span class=\"line\"><span class=\"comment\">// || 意思为强转为 数组格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> collect = wx.getStorageSync(<span class=\"string\">&quot;collect&quot;</span>)||[];</span><br><span class=\"line\"><span class=\"comment\">// 使用 some 遍历数组 判断 是否有id的值相等，只要有一个相等的 ， isCollect 都为true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> isCollect = collect.some(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>v.id === <span class=\"built_in\">this</span>.data.courseDetails.id);</span><br></pre></td></tr></table></figure>\n<p><strong>还有一个相对的方法叫做 <code>every()</code> ,条件时数组中所有的元素都满足条件。</strong></p>\n<h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"``find()\"></a>``find()</h2><p><code>find()</code> 方法返回通过测试（函数内判断）的数组的第一个元素的值。</p>\n<p><code>find()</code> 方法为数组中的每个元素都调用一次函数执行：</p>\n<ul>\n<li>当数组中的元素在测试条件时返回 <code>true</code> 时, <code>find()</code> 返回符合条件的元素，之后的值不会再调用执行函数。</li>\n<li>如果没有符合条件的元素返回 <code>undefined</code>  注意: <code>find()</code> 对于空数组，函数是不会执行的。</li>\n</ul>\n<p>注意: <code>find()</code> 并没有改变数组的原始值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过find也可以对数组中符合要求的之前的元素进行操作</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item&gt;<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"findIndex\"><a href=\"#findIndex\" class=\"headerlink\" title=\"findIndex()\"></a><code>findIndex()</code></h2><p><code>findIndex()</code> 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置。</p>\n<p><code>findIndex()</code> 方法为数组中的每个元素都调用一次函数执行：</p>\n<ul>\n<li><p>当数组中的元素在测试条件时返回 <code>true</code> 时, <code>findIndex()</code> 返回符合条件的元素的索引位置，之后的值不会再调用执行函数。</p>\n</li>\n<li><p>如果没有符合条件的元素返回<code> -1</code></p>\n<p>  注意: <code>findIndex()</code> 对于空数组，函数是不会执行的。</p>\n</li>\n</ul>\n<p>注意: <code>findIndex()</code> 并没有改变数组的原始值。</p>\n<blockquote>\n<p>与<code>find</code>方法类似，区别只在于这个方法返回的时元素在数组中的索引。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item&gt;<span class=\"number\">5</span>;          </span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// || 意思为强转为 数组格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> collect = wx.getStorageSync(<span class=\"string\">&quot;collect&quot;</span>)||[];</span><br><span class=\"line\"><span class=\"comment\">// 使用findIndex遍历, 返回 数组中和 目标id 相等的 索引</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> index = collect.findIndex(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>v.id === <span class=\"built_in\">this</span>.data.courseDetails.id) ;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter()\"></a><code>filter()</code></h2><p><code>filter()</code> 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</p>\n<p>注意： <code>filter()</code> 不会对空数组进行检测。</p>\n<p>注意： <code>filter()</code> 不会改变原始数组。</p>\n<blockquote>\n<p>这个方法与<code>map</code>方法类似，<code>map</code>方法没有返回的条件，而这个方法可以直接通过<code>return</code>来设置过滤条件。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt;<span class=\"number\">2</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"includes\"><a href=\"#includes\" class=\"headerlink\" title=\"includes()\"></a><code>includes()</code></h2><p>这个方法是<code>es6</code>中新增的一个方法，可以用来判断一个数组或者是字符串中是否包含某一元素，如果是返回 <code>true</code>，否则<code>false</code>。</p>\n<p>语法:</p>\n<ul>\n<li><code>arr.includes(searchElement)</code></li>\n<li><code>arr.includes(searchElement, fromIndex)</code></li>\n</ul>\n<p>参数:</p>\n<ul>\n<li><code>searchElement</code> 必须。需要查找的元素值。</li>\n<li><code>fromIndex</code> 可选。从该索引处开始查找 <code>searchElement</code>。如果为负值，则按升序从 <code>array.length + fromIndex </code>的索引开始搜索。默认为<code> 0</code>。<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.includes(<span class=\"number\">5</span>)); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": [
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/2e6621e1/",
            "url": "https://smile1231.github.io/posts/2e6621e1/",
            "title": "DisPlay属性",
            "date_published": "2022-02-14T13:29:23.000Z",
            "content_html": "<h1 id=\"Display属性\"><a href=\"#Display属性\" class=\"headerlink\" title=\"Display属性\"></a>Display属性</h1><h2 id=\"display所有属性\"><a href=\"#display所有属性\" class=\"headerlink\" title=\"display所有属性\"></a><strong>display所有属性</strong></h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* CSS 1 */</span></span><br><span class=\"line\"><span class=\"attribute\">display</span>: none;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: block;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: list-item;</span><br><span class=\"line\"><span class=\"comment\">/* CSS 2.1 */</span></span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline-table;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-column;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-column-group;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-footer-group;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-header-group;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-row;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-row-group;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: table-caption;</span><br><span class=\"line\"><span class=\"comment\">/* CSS 2.1 */</span></span><br><span class=\"line\"><span class=\"comment\">/* CSS 3 */</span></span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline-list-item;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: box;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: inline-grid;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: ruby;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: ruby-base;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: ruby-text;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: ruby-base-container;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: ruby-text-container;</span><br><span class=\"line\"><span class=\"comment\">/* CSS 3 */</span></span><br><span class=\"line\"><span class=\"comment\">/* Experimental values */</span></span><br><span class=\"line\"><span class=\"attribute\">display</span>: contents;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: run-in;</span><br><span class=\"line\"><span class=\"comment\">/* Experimental values */</span></span><br><span class=\"line\"><span class=\"comment\">/* Global values */</span></span><br><span class=\"line\"><span class=\"attribute\">display</span>: inherit;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: initial;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: unset;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n<p>下面就display的重要属性进行讲解，并配合一些相关的例子</p>\n<h2 id=\"基本属性\"><a href=\"#基本属性\" class=\"headerlink\" title=\"基本属性\"></a>基本属性</h2><h3 id=\"display-none\"><a href=\"#display-none\" class=\"headerlink\" title=\"display: none\"></a>display: none</h3><p>none 是 CSS 1 就提出来的属性，将元素设置为none的时候既不会占据空间，也无法显示，相当于该元素不存在。</p>\n<p>该属性可以用来改善重排与重绘，同时我也经常用它来做模态窗等效果。</p>\n<h3 id=\"display-inline\"><a href=\"#display-inline\" class=\"headerlink\" title=\"display: inline\"></a>display: inline</h3><p>inline也是 CSS 1 提出的属性，它主要用来设置行内元素属性，设置了该属性之后设置高度、宽度都无效，同时text-align属性设置也<br>无效，但是设置了line-height会让inline元素居中</p>\n<p>同时从上图可以看到两个inline标签之间出现了奇怪的间隔，改间隔的原因是div换行产生的换行空白，解决办法</p>\n<ul>\n<li>将两个inline标签写到一行</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者使用一点技巧</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>zhan<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">html&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  -webkit-text-size-adjust:none;/* 使用webkit的私有属性，让字体大小不受设备终端的调整，可定义字体大小小于12px */</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br><span class=\"line\"><span class=\"xml\">.main&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  font-size:0;</span></span><br><span class=\"line\"><span class=\"xml\">  *word-spacing:-1px;/* 使用word-spacing 修复 IE6、7 中始终存在的 1px 空隙，减少单词间的空白（即字间隔） */</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br><span class=\"line\"><span class=\"xml\">.test&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  display:inline;</span></span><br><span class=\"line\"><span class=\"xml\">  width: 10000px;</span></span><br><span class=\"line\"><span class=\"xml\">  height:10000px;</span></span><br><span class=\"line\"><span class=\"xml\">  border:1px solid;</span></span><br><span class=\"line\"><span class=\"xml\">  font-size:12px;</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">  letter-spacing: normal;/* 设置字母、字间距为0 */ </span></span><br><span class=\"line\"><span class=\"xml\">  word-spacing: normal; /* 设置单词、字段间距为0 */</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>实测chome49浏览器只用设置父元素的font-size为0即可。</p>\n<p><code>目前有很多原生的元素都是inline的，span、a、label、input、 img、 strong 和em就是典型的行内元素元素。 链接：http://www.css88.com/archives...</code></p>\n<h3 id=\"display-block\"><a href=\"#display-block\" class=\"headerlink\" title=\"display: block\"></a>display: block</h3><p>设置元素为块状元素，如果不指定宽高，默认会继承父元素的宽度，并且独占一行，即使宽度有剩余也会独占一行，高度一般以子元素撑开的高度为准，当然也可以自己设置宽度和高度。</p>\n<blockquote>\n<p>在设计的过程中有时需要设计一个div宽高都是整个屏幕，整个时候宽度很好设置，可是高度一般很难设置，因为页面一般都是可以滚动的，所以高度一般可变，所以这个时候可以使用一个小技巧，如下。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">html&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br><span class=\"line\"><span class=\"xml\">body&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"xml\">  padding: 0;</span></span><br><span class=\"line\"><span class=\"xml\">  margin:0;</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br><span class=\"line\"><span class=\"xml\">.main&#123;</span></span><br><span class=\"line\"><span class=\"xml\">  background: red;</span></span><br><span class=\"line\"><span class=\"xml\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"xml\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"xml\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><code>基本原理：div继承的是父元素body的高度，body是继承html的高度，html是继承的浏览器屏幕的高度。</code></p>\n<h3 id=\"display-list-item\"><a href=\"#display-list-item\" class=\"headerlink\" title=\"display: list-item\"></a>display: list-item</h3><p>此属性默认会把元素作为列表显示，要完全模仿列表的话还需要加上 list-style-position，list-style-type</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>111111<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>222222<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>333333<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>:<span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">display</span>:list-item;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>:disc outside none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下:</p>\n\n\n\n<p>通过上面样式设置，就能仿出一个类似的列表，一定要在div上加padding，因为默认的列表之前的·在box外面</p>\n<h3 id=\"display-inline-block\"><a href=\"#display-inline-block\" class=\"headerlink\" title=\"display: inline-block\"></a>display: inline-block</h3><p>inline-block为 CSS 2.1 新增的属性。 <strong>inline-block既具有block的宽高特性又具有inline的同行元素特性。</strong> 通过inline-block结合text-align: justify 还可以实现固定宽高的列表两端对齐布局，如下例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col1&quot;</span>&gt;</span>111111<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col2&quot;</span>&gt;</span>222222<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col3&quot;</span>&gt;</span>333333<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col1&quot;</span>&gt;</span>111111<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col2&quot;</span>&gt;</span>222222<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col3&quot;</span>&gt;</span>333333<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col fix&quot;</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col fix&quot;</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col fix&quot;</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col fix&quot;</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col fix&quot;</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.main</span>&#123;</span><br><span class=\"line\">//实现两端对齐文本效果。</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>:justify;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col1</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col2</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col3</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fix</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果:</p>\n<p><img data-src=\"https://segmentfault.com/img/remote/1460000006047879\" alt=\"image\"></p>\n<p><code>text-align: justify 属性会使行内元素两端对齐，但是要求这些行内元素总宽度至少占满一行，所以在总宽度不足一行的时候这个属性没用，因此在最后需要加上一些占位符。</code></p>\n<p>==Tip: inline-block会形成一个BFC==</p>\n<h3 id=\"display-table\"><a href=\"#display-table\" class=\"headerlink\" title=\"display: table\"></a>display: table</h3><p>table 此元素会作为块级表格来显示（类似table），表格前后带有换行符。CSS表格能够解决所有那些我们在使用绝对定位和浮动定位进行多列布局时所遇到的问题。例如，display:table的CSS声明能够让一个HTML元素和它的子节点像table元素一样。使用基于表格的CSS布局，使我们能够轻松定义一个单元格的边界、背景等样式， <strong>而不会产生因为使用了table那样的制表标签所导致的语义化问题。</strong></p>\n<p>利用table的特性，我们能够轻易的实现三栏布局，并且能够兼容IE8，如下是使用table属性，实现三栏布局的例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tr tr1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>head1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>head2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>head3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;tr tr2&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;td&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-collapse</span>: collapse;<span class=\"comment\">/*为表格设置合并边框模型：*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.tr</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table-row;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.tr1</span> <span class=\"selector-class\">.td</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.td</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.td</span><span class=\"selector-pseudo\">:nth-of-type</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.td</span><span class=\"selector-pseudo\">:nth-of-type</span>(<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果:</p>\n\n\n\n<p><strong>CSS2.1表格模型中的元素，可能不会全部包含在除HTML之外的文档语言中。这时，那些“丢失”的元素会被模拟出来，从而使得表格模型能够正常工作。所有的表格元素将会自动在自身周围生成所需的匿名table对象，使其符合table/inline-table、table-row、table-cell的三层嵌套关系。</strong></p>\n<p>所以在一般情况下我们也可以不写外面的table-row元素以及table元素。</p>\n<h3 id=\"display-inline-list-item\"><a href=\"#display-inline-list-item\" class=\"headerlink\" title=\"display: inline-list-item\"></a>display: inline-list-item</h3><p>我在MDN上面看到有这个属性，但是我实际尝试发现这个属性是不能使用的，在 <span class=\"exturl\" data-url=\"aHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9aW4=\">http://caniuse.com/#search=in</span>… 上面也没有找到这个元素的兼容性，所以应该是不能使用的，支持度全无。</p>\n<h3 id=\"display-flex-重要\"><a href=\"#display-flex-重要\" class=\"headerlink\" title=\"display: flex(重要)\"></a><strong>display: flex(重要)</strong></h3><p>flex是一种弹性布局属性<br><strong>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</strong><br>主要属性有两大类：容器属性和项目的属性</p>\n<ul>\n<li><h4 id=\"容器属性\"><a href=\"#容器属性\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h4><p>值 |  解释</p>\n</li>\n<li><p>–|—<br>flex-direction | 属性决定主轴的方向（即项目的排列方向）。<br>flex-wrap| 默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。<br>flex-flow|属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。<br>justify-content|属性定义了项目在主轴上的对齐方式。<br>align-items |属性定义项目在交叉轴上如何对齐。<br>align-content| 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n</li>\n<li><h4 id=\"项目属性\"><a href=\"#项目属性\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h4></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>order</td>\n<td>定义项目的排列顺序。数值越小，排列越靠前，默认为0。</td>\n</tr>\n<tr>\n<td>flex-grow</td>\n<td>定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</td>\n</tr>\n<tr>\n<td>flex-shrink</td>\n<td>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</td>\n</tr>\n<tr>\n<td>flex-basis</td>\n<td>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</td>\n</tr>\n<tr>\n<td>flex</td>\n<td>属性是flex-grow, flex-shrink 和flex-basis的简写，默认值为0 1 auto。后两个属性可选。</td>\n</tr>\n<tr>\n<td>align-self:</td>\n<td>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</td>\n</tr>\n</tbody></table>\n<p>以上关于flex的基础知识基本是从阮一峰老师那copy过来的，有兴趣的同学，可以到阮一峰老师的博客深入阅读</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG8=\">http://www.ruanyifeng.com/blo</span>…</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG8=\">http://www.ruanyifeng.com/blo</span>…</p>\n<ul>\n<li><h4 id=\"实例：实现一个固定宽度但内容可变的列表\"><a href=\"#实例：实现一个固定宽度但内容可变的列表\" class=\"headerlink\" title=\"实例：实现一个固定宽度但内容可变的列表\"></a>实例：实现一个固定宽度但内容可变的列表</h4>目前我有一个需求，有一个列表页，左侧固定，右侧固定，总宽度固定，但是左侧的内容可能会增加，右侧的内容也可能会增加，要求平时一行展示，增加的时候两行展示，左侧两行，右侧还是一行，并且都居中。</li>\n</ul>\n<p>先上效果图，不然可能会迷糊：</p>\n\n\n\n<p>为了实现上述效果，代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col1&quot;</span>&gt;</span>累积的分为：123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col2&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>x 10<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col1&quot;</span>&gt;</span>累积的分为：1234<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col2&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://7xltvd.com1.z0.glb.clouddn.com/css1.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col2-span&quot;</span>&gt;</span>x 10<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">button</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: green;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col2-span</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col1</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>:<span class=\"number\">8px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.col2</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"display-webkit-box\"><a href=\"#display-webkit-box\" class=\"headerlink\" title=\"display: -webkit-box\"></a>display: -webkit-box</h3><p>由于某X5浏览器某些版本还不支持最新版的flex布局，所以为了保证良好的运行，建议还是使用display: box，box和flex布局的主要差别如下:</p>\n<ul>\n<li><h4 id=\"容器属性-1\"><a href=\"#容器属性-1\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h4>值 | 解释</li>\n<li>–|—:<br>display: box |该显示样式的新值可将此元素及其直系子代加入弹性框模型中。Flexbox 模型只适用于直系子代。<br>box-orient| 值：horizontal | vertical | inherit</li>\n</ul>\n<p>框的子代是如何排列的？还有两个值：inline-axis（真正的默认值）和 block-axis，但是它们分别映射到水平和垂直方向。<br>值 | 解释<br>—|—<br>box-pack 值：start | end | center | justify</p>\n<p>设置沿 box-orient 轴的框排列方式。因此，如果 box-orient 是水平方向，就会选择框的子代的水平排列方式，反之亦然。<br>值 | 解释<br>—|—<br>box-align | 值：start | end | center | baseline | stretch</p>\n<p>基本上而言是 box-pack 的同级属性。设置框的子代在框中的排列方式。如果方向是水平的，该属性就会决定垂直排列，反之亦然。</p>\n<ul>\n<li><h4 id=\"项目属性-1\"><a href=\"#项目属性-1\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h4>值 | 解释</li>\n<li>–|—<br>box-flex| 值：0 | 任意整数</li>\n</ul>\n<p>该子代的弹性比。弹性比为 1 的子代占据父代框的空间是弹性比为 2 的同级属性的两倍。其默认值为 0，也就是不具有弹性。</p>\n<p>用box改造上述例子<br>基本只修改了容器元素li的属性，如下所示:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">  -webkit-box-orient:horizontal;</span><br><span class=\"line\">  -webkit-box-pack: justify;</span><br><span class=\"line\">  -webkit-box-align: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"display-inline-flex\"><a href=\"#display-inline-flex\" class=\"headerlink\" title=\"display: inline-flex\"></a>display: inline-flex</h3><p>我发现在chrome条件下设置了inline-flex，其子元素全部变成了inline模式，设置flex并没有什么用，不知道是不是我写的有问题，目前没找到这个属性的用法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JS Bin<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sp1&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sp1&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-inline-flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sp1</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>:<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>以下属性是实验性质的，支持度都很低，不建议使用，知道就行。<br>值 | 解释<br>—|—<br>run-in:| 此元素会根据上下文作为块级元素或内联元素显示；<br>grid | 栅格模型，类似block<br>inline-grid | 栅格模型，类似inline-block<br>ruby, ruby-base, ruby-text, ruby-base-container, ruby-text-container|<br>contents |</p>\n",
            "tags": [
                "前端",
                "DisPlay属性"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/54880bcd/",
            "url": "https://smile1231.github.io/posts/54880bcd/",
            "title": "Css样式",
            "date_published": "2022-02-14T13:29:08.000Z",
            "content_html": "<h1 id=\"Css样式\"><a href=\"#Css样式\" class=\"headerlink\" title=\"Css样式\"></a>Css样式</h1><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzLXJlZmVyZW5jZS5odG1s\">CSS菜鸟学习链接</span></p>\n<blockquote>\n<p><strong>opacity</strong></p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">透明度 </span><br><span class=\"line\">value\t规定不透明度。从 <span class=\"number\">0.0</span> （完全透明）到 <span class=\"number\">1.0</span>（完全不透明）。</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>text-align</strong></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>value</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>把文本排列到左边。默认值：由浏览器决定。</td>\n</tr>\n<tr>\n<td>right</td>\n<td>把文本排列到右边。</td>\n</tr>\n<tr>\n<td>center</td>\n<td>把文本排列到中间。</td>\n</tr>\n<tr>\n<td>justify</td>\n<td>实现两端对齐文本效果。</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承 text-align 属性的值。</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<blockquote>\n<p><strong>overflow</strong></p>\n</blockquote>\n<p>这个属性定义溢出元素内容区的内容会如何处理。如果值为 scroll，不论是否需要，用户代理都会提供一种滚动机制。因此，有可能即使元素框中可以放下所有内容也会出现滚动条。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>visible</td>\n<td>默认值。内容不会被修剪，会呈现在元素框之外。</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>内容会被修剪，并且其余内容是不可见的。</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</td>\n</tr>\n<tr>\n<td>auto</td>\n<td>如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承 overflow 属性的值。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>border-collapse</strong></p>\n</blockquote>\n<p>border-collapse 属性设置表格的边框是否被合并为一个单一的边框，还是象在标准的 HTML 中那样分开显示。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>collapse</td>\n<td>如果可能，边框会合并为一个单一的边框。会忽略 border-spacing 和 empty-cells 属性</td>\n</tr>\n<tr>\n<td>separate</td>\n<td>默认值。边框会被分开。不会忽略 border-spacing 和 empty-cells 属性</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承 border-collapse 属性的值</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>vertical-align</strong></p>\n</blockquote>\n<p>vertical-align 属性设置一个元素的垂直对齐方式。</p>\n<p>该属性定义行内元素的基线相对于该元素所在行的基线的垂直对齐。允许指定负长度值和百分比值。这会使元素降低而不是升高。在表单元格中，这个属性会设置单元格框中的单元格内容的对齐方式。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>baseline</td>\n<td>默认。元素放置在父元素的基线上。</td>\n</tr>\n<tr>\n<td>sub</td>\n<td>垂直对齐文本的下标。</td>\n</tr>\n<tr>\n<td>super</td>\n<td>垂直对齐文本的上标</td>\n</tr>\n<tr>\n<td>top</td>\n<td>把元素的顶端与行中最高元素的顶端对齐</td>\n</tr>\n<tr>\n<td>text-top</td>\n<td>把元素的顶端与父元素字体的顶端对齐</td>\n</tr>\n<tr>\n<td>middle</td>\n<td>把此元素放置在父元素的中部。</td>\n</tr>\n<tr>\n<td>bottom</td>\n<td>使元素及其后代元素的底部与整行的底部对齐。</td>\n</tr>\n<tr>\n<td>text-bottom</td>\n<td>把元素的底端与父元素字体的底端对齐。</td>\n</tr>\n<tr>\n<td>length</td>\n<td>将元素升高或降低指定的高度，可以是负数。</td>\n</tr>\n<tr>\n<td>%</td>\n<td>使用 “line-height” 属性的百分比值来排列此元素。允许使用负值。</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素继承 vertical-align 属性的值。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>border-color</strong></p>\n</blockquote>\n<p>例子</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">color</span>属性设置一个元素的四个边框颜色。此属性可以有一到四个值。</span><br><span class=\"line\"></span><br><span class=\"line\">实例:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">color</span>:红，绿，蓝,粉红色;</span><br><span class=\"line\"></span><br><span class=\"line\">上边框是红色</span><br><span class=\"line\">右边框是绿色</span><br><span class=\"line\">底部边框是蓝</span><br><span class=\"line\">左边框是粉红色</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">color</span>：红，绿，蓝;</span><br><span class=\"line\"></span><br><span class=\"line\">上边框是红色</span><br><span class=\"line\">左，右边框是绿色</span><br><span class=\"line\">底部边框是蓝</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">color</span>：红，绿;</span><br><span class=\"line\"></span><br><span class=\"line\">顶部和底部边框是红色</span><br><span class=\"line\">左右边框是绿色</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">border</span>-<span class=\"built_in\">color</span>：红色;</span><br><span class=\"line\"></span><br><span class=\"line\">所有四个边框是红色</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>color</td>\n<td>指定背景颜色。在CSS颜色值查找颜色值的完整列表</td>\n</tr>\n<tr>\n<td>transparent</td>\n<td>指定边框的颜色应该是透明的。这是默认</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>指定边框的颜色，应该从父元素继承</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>justify-content</strong></p>\n</blockquote>\n<p>justify-content 用于设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。</p>\n<p>提示：使用 align-content 属性对齐交叉轴上的各项（垂直）。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>flex-start</td>\n<td>默认值。项目位于容器的开头。</td>\n</tr>\n<tr>\n<td>flex-end</td>\n<td>项目位于容器的结尾。</td>\n</tr>\n<tr>\n<td>center</td>\n<td>项目位于容器的中心。</td>\n</tr>\n<tr>\n<td>space-between</td>\n<td>项目位于各行之间留有空白的容器内。</td>\n</tr>\n<tr>\n<td>space-around</td>\n<td>项目位于各行之前、之间、之后都留有空白的容器内。</td>\n</tr>\n<tr>\n<td>initial</td>\n<td>设置该属性为它的默认值。请参阅 initial。</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>从父元素继承该属性。请参阅 inherit。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>float</strong></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>元素向左浮动</td>\n</tr>\n<tr>\n<td>right</td>\n<td>元素向右浮动</td>\n</tr>\n<tr>\n<td>none</td>\n<td>默认值,元素不浮动,并会显示其在文本出现的位置</td>\n</tr>\n<tr>\n<td>inherit</td>\n<td>规定应该从父元素中继承属性的值</td>\n</tr>\n</tbody></table>\n<p><strong>方便理解 ,上图</strong></p>\n<img data-src=\"/posts/54880bcd/2022-02-14-22-24-03.png\" class=\"\">\n\n<p>==<strong>敲黑板最重要的是结合demo理解以下两句话</strong>==</p>\n<p>float:left 应该理解为：在自己本身的位置上脱离文档流，元素从包含框的右边缘向左移动，直到碰到包含框的左边缘或者其他浮动元素框停下，当空间不足以绘制自己则另起一行。</p>\n<p>float:right 应该理解为：在自己本身的位置上脱离文档流， 元素从包含框的左边缘向右移动，直到碰到包含框的右边缘或者其他浮动元素的框停下，当空间不足以绘制自己则另起一行。</p>\n<blockquote>\n<p><strong>position</strong></p>\n</blockquote>\n<p>这个属性定义建立元素布局所用的定位机制。任何元素都可以定位，不过绝对或固定元素会生成一个块级框，而不论该元素本身是什么类型。相对定位元素会相对于它在正常流中的默认位置偏移。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>absolute</td>\n<td>生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。</td>\n</tr>\n<tr>\n<td>relative</td>\n<td>生成相对定位的元素，相对于其正常位置进行定位。因此，”left:20” 会向元素的 LEFT 位置添加 20 像素。</td>\n</tr>\n<tr>\n<td>static</td>\n<td>默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right或者z-index声明）。inherit    规定应该从父元素继承 position 属性的值。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>padding(内边距)</strong></p>\n</blockquote>\n<p>Padding属性，可以有一到四个值。</p>\n<ul>\n<li><p>padding:25px 50px 75px 100px;</p>\n<p>  上填充为25px </p>\n<p>  右填充为50px</p>\n<p>  下填充为75px</p>\n<p>  左填充为100px</p>\n</li>\n<li><p>padding:25px 50px 75px;</p>\n<p>  上填充为25px</p>\n<p>  左右填充为50px</p>\n<p>  下填充为75px</p>\n</li>\n<li><p>padding:25px 50px;</p>\n<p> 上下填充为25px</p>\n<p> 左右填充为50px</p>\n</li>\n<li><p>padding:25px;</p>\n<p> 所有的填充都是25px</p>\n</li>\n</ul>\n<h2 id=\"对齐弹性容器中的弹性项目\"><a href=\"#对齐弹性容器中的弹性项目\" class=\"headerlink\" title=\"对齐弹性容器中的弹性项目\"></a>对齐弹性容器中的弹性项目</h2>\n\n\n<ul>\n<li><code>justify-content</code> - 控制主轴（横轴）上所有 <code>flex</code> 项目的对齐。</li>\n<li><code>align-items</code> - 控制交叉轴（纵轴）上所有 <code>flex</code> 项目的对齐。</li>\n<li><code>align-self</code> - 控制交叉轴（纵轴）上的单个 <code>flex</code> 项目的对齐。</li>\n<li><code>align-content</code> - 控制“多条主轴”的 <code>flex</code> 项目在交叉轴的对齐。</li>\n</ul>\n\n\n\n<blockquote>\n<p>align-items</p>\n</blockquote>\n<p><code>align-itema: flex-start</code> — <code>flex</code> 项目的开始端的对齐</p>\n<p><code>align-items: flex-end </code> — <code>flex</code>项目的结束端对齐</p>\n<p><code>align-items: center</code> — <code>flex</code> 项目居中对齐</p>\n<p><code>align-items: stretch</code> — <code>flex</code> 项目撑满 <code>flex</code> 容器</p>\n<p><code>align-items: baseline</code> — <code>flex</code> 项目的基线对齐</p>\n<blockquote>\n<p><code>align-self</code> 用于对齐单个<code>flex</code> 子项</p>\n</blockquote>\n<p><code>align-items</code> 属性是给所有 <code>flex</code>项目统一设置 <code>align-self</code> 的对齐属性。这意味着你能给单个 <code>flex</code> 项目明确地声明 <code>align-self</code> 属性。<code>align-self</code> 拥有 <code>align-items</code> 的所有属性值，另外还有一个 <code>auto</code> 能重置自身的值为 <code>align-items</code> 定义的值。</p>\n<blockquote>\n<p>改变主轴方向</p>\n</blockquote>\n\n\n\n\n\n\n<blockquote>\n<p>轴对齐内容—— <code>align-content</code>属性</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*align-content不采用左右值 */</span></span><br><span class=\"line\">align-content: center;     <span class=\"comment\">/* 将项目放置在中点 */</span></span><br><span class=\"line\">align-content: start;      <span class=\"comment\">/* 最先放置项目 */</span></span><br><span class=\"line\">align-content: end;        <span class=\"comment\">/* 最后放置项目 */</span></span><br><span class=\"line\">align-content: flex-start; <span class=\"comment\">/* 从起始点开始放置flex元素 */</span></span><br><span class=\"line\">align-content: flex-end;   <span class=\"comment\">/* 从终止点开始放置flex元素 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 默认对齐 */</span></span><br><span class=\"line\">align-content: normal;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*基线对齐*/</span></span><br><span class=\"line\">align-content: baseline;</span><br><span class=\"line\">align-content: first baseline;</span><br><span class=\"line\">align-content: last baseline;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 分布式对齐 */</span></span><br><span class=\"line\">align-content: space-between; <span class=\"comment\">/* 均匀分布项目</span></span><br><span class=\"line\"><span class=\"comment\">                                 第一项与起始点齐平，</span></span><br><span class=\"line\"><span class=\"comment\">                                 最后一项与终止点齐平 */</span></span><br><span class=\"line\">align-content: space-around;  <span class=\"comment\">/* 均匀分布项目</span></span><br><span class=\"line\"><span class=\"comment\">                                 项目在两端有一半大小的空间*/</span></span><br><span class=\"line\">align-content: space-evenly;  <span class=\"comment\">/* 均匀分布项目</span></span><br><span class=\"line\"><span class=\"comment\">                                 项目周围有相等的空间 */</span></span><br><span class=\"line\">align-content: stretch;       <span class=\"comment\">/* 均匀分布项目</span></span><br><span class=\"line\"><span class=\"comment\">                                 拉伸‘自动’-大小的项目以充满容器 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 溢出对齐 */</span></span><br><span class=\"line\">align-content: safe center;</span><br><span class=\"line\">align-content: unsafe center;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 全局属性 */</span></span><br><span class=\"line\">align-content: inherit; <span class=\"comment\">/* 继承 */</span></span><br><span class=\"line\">align-content: initial;  <span class=\"comment\">/* 初始值 */</span></span><br><span class=\"line\">align-content: unset; <span class=\"comment\">/* 未设置 */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>letter-spacing</p>\n</blockquote>\n<p>这个用过不少次，主要是表示字体之间的间距大小</p>\n",
            "tags": [
                "前端",
                "Css"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/7f59931c/",
            "url": "https://smile1231.github.io/posts/7f59931c/",
            "title": "Css选择器",
            "date_published": "2022-02-14T13:28:34.000Z",
            "content_html": "<h1 id=\"Css-选择器\"><a href=\"#Css-选择器\" class=\"headerlink\" title=\"Css 选择器\"></a>Css 选择器</h1><table>\n<thead>\n<tr>\n<th>选择器</th>\n<th align=\"center\">例子</th>\n<th align=\"center\">例子描述</th>\n<th align=\"right\">CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>.class</td>\n<td align=\"center\">.intro</td>\n<td align=\"center\">选择 class=”intro” 的所有元素.</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>#id</td>\n<td align=\"center\">#firstname</td>\n<td align=\"center\">选择 id=”firstname” 的所有元素</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>*</td>\n<td align=\"center\">*</td>\n<td align=\"center\">选择所有元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>element</td>\n<td align=\"center\">p</td>\n<td align=\"center\">选择所有 <p> 元素。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>element,element</td>\n<td align=\"center\">div,p</td>\n<td align=\"center\">选择所有 <div> 元素和所有 <p> 元素。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>element element</td>\n<td align=\"center\">div p</td>\n<td align=\"center\">选择 <div> 元素内部的所有 <p> 元素。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>element&gt;element</td>\n<td align=\"center\">div&gt;p</td>\n<td align=\"center\">选择父元素为 <div> 元素的所有 <p> 元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>element+element</td>\n<td align=\"center\">div+p</td>\n<td align=\"center\">选择紧接在 <div> 元素之后的所有 <p> 元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>[attribute]</td>\n<td align=\"center\">[target]</td>\n<td align=\"center\">选择带有 target 属性所有元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>[attribute=value]</td>\n<td align=\"center\">[target=_blank]</td>\n<td align=\"center\">选择 target=”_blank” 的所有元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>[attribute~=value]</td>\n<td align=\"center\">[title~=flower]</td>\n<td align=\"center\">选择 title 属性包含单词 “flower” 的所有元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>[attribute=value]</td>\n<td align=\"center\">[lang=en]</td>\n<td align=\"center\">选择 lang 属性值以 “en” 开头的所有元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>:link</td>\n<td align=\"center\">a:link</td>\n<td align=\"center\">选择所有未被访问的链接。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:visited</td>\n<td align=\"center\">a:visited</td>\n<td align=\"center\">选择所有已被访问的链接。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:active</td>\n<td align=\"center\">a:active</td>\n<td align=\"center\">选择活动链接。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:hover</td>\n<td align=\"center\">a:hover</td>\n<td align=\"center\">选择鼠标指针位于其上的链接。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:focus</td>\n<td align=\"center\">input:focus</td>\n<td align=\"center\">选择获得焦点的 input 元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>:first-letter</td>\n<td align=\"center\">p:first-letter</td>\n<td align=\"center\">选择每个 <p> 元素的首字母。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:first-line</td>\n<td align=\"center\">p:first-line</td>\n<td align=\"center\">选择每个 <p> 元素的首行。</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>:first-child</td>\n<td align=\"center\">p:first-child</td>\n<td align=\"center\">选择属于父元素的第一个子元素的每个 <p> 元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>:before</td>\n<td align=\"center\">p:before</td>\n<td align=\"center\">在每个 <p> 元素的内容之前插入内容。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>:after</td>\n<td align=\"center\">p:after</td>\n<td align=\"center\">在每个 <p> 元素的内容之后插入内容。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>:lang(language)</td>\n<td align=\"center\">p:lang(it)</td>\n<td align=\"center\">选择带有以 “it” 开头的 lang 属性值的每个 <p> 元素。</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>element1~element2</td>\n<td align=\"center\">p~ul</td>\n<td align=\"center\">选择前面有 <p> 元素的每个 <ul> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>[attribute^=value]</td>\n<td align=\"center\">a[src^=”https”]</td>\n<td align=\"center\">选择其 src 属性值以 “https” 开头的每个 <a> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>[attribute$=value]</td>\n<td align=\"center\">a[src$=”.pdf”]</td>\n<td align=\"center\">选择其 src 属性以 “.pdf” 结尾的所有 <a> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>[attribute*=value]</td>\n<td align=\"center\">a[src*=”abc”]</td>\n<td align=\"center\">选择其 src 属性中包含 “abc” 子串的每个 <a> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:first-of-type</td>\n<td align=\"center\">p:first-of-type</td>\n<td align=\"center\">选择属于其父元素的首个 <p> 元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:last-of-type</td>\n<td align=\"center\">p:last-of-type</td>\n<td align=\"center\">选择属于其父元素的最后 <p> 元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:only-of-type</td>\n<td align=\"center\">p:only-of-type</td>\n<td align=\"center\">选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:only-child</td>\n<td align=\"center\">p:only-child</td>\n<td align=\"center\">选择属于其父元素的唯一子元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:nth-child(n)</td>\n<td align=\"center\">p:nth-child(2)</td>\n<td align=\"center\">选择属于其父元素的第二个子元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:nth-last-child(n)</td>\n<td align=\"center\">p:nth-last-child(2)</td>\n<td align=\"center\">同上，从最后一个子元素开始计数。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:nth-of-type(n)</td>\n<td align=\"center\">p:nth-of-type(2)</td>\n<td align=\"center\">选择属于其父元素第二个 <p> 元素的每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:nth-last-of-type(n)</td>\n<td align=\"center\">p:nth-last-of-type(2)</td>\n<td align=\"center\">同上，但是从最后一个子元素开始计数。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:last-child</td>\n<td align=\"center\">p:last-child</td>\n<td align=\"center\">选择属于其父元素最后一个子元素每个 <p> 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:root</td>\n<td align=\"center\">:root</td>\n<td align=\"center\">选择文档的根元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:empty</td>\n<td align=\"center\">p:empty</td>\n<td align=\"center\">选择没有子元素的每个 <p> 元素（包括文本节点）。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:target</td>\n<td align=\"center\">#news:target</td>\n<td align=\"center\">选择当前活动的 #news 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:enabled</td>\n<td align=\"center\">input:enabled</td>\n<td align=\"center\">选择每个启用的 input元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:disabled</td>\n<td align=\"center\">input:disabled</td>\n<td align=\"center\">选择每个禁用的 input 元素</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:checked</td>\n<td align=\"center\">input:checked</td>\n<td align=\"center\">选择每个被选中的 input 元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>:not(selector)</td>\n<td align=\"center\">:not(p)</td>\n<td align=\"center\">选择非 p 元素的每个元素。</td>\n<td align=\"right\">3</td>\n</tr>\n<tr>\n<td>::selection</td>\n<td align=\"center\">::selection</td>\n<td align=\"center\">选择被用户选取的元素部分。</td>\n<td align=\"right\">3</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "前端",
                "Css"
            ]
        }
    ]
}