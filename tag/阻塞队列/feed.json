{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"阻塞队列\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/159c6098/",
            "url": "https://smile1231.github.io/posts/159c6098/",
            "title": "阻塞队列",
            "date_published": "2022-03-13T08:31:51.000Z",
            "content_html": "<h2 id=\"阻塞队列接口结构和实现类\"><a href=\"#阻塞队列接口结构和实现类\" class=\"headerlink\" title=\"阻塞队列接口结构和实现类\"></a>阻塞队列接口结构和实现类</h2><p><strong>阻塞队列</strong>，顾名思义，首先它是一个队列，而一个阻塞队列在数据结构中所起的作用大致如下图所示：</p>\n<img data-src=\"/blog/posts/159c6098/2022-03-13-16-33-09.png\" class=\"\">\n\n<span id=\"more\"></span>\n\n<p>线程1往阻塞队列中添加元素，而线程2从阻塞队列中移除元素。</p>\n<p>当阻塞队列是空时，从队列中获取元素的操作将会被阻塞。</p>\n<p>当阻塞队列是满时，往队列里添加元素的操作将会被阻塞。</p>\n<p>试图从空的阻塞队列中获取元素的线程将会被阻塞，直到其他的线程往空的队列插入新的元素。</p>\n<p>同样试图往已满的阻塞队列中添加新元素的线程同样也会被阻塞，直到其他的线程从列中移除一个或者多个元素或者完全清空队列后使队列重新变得空闲起来并后续新增</p>\n<p><strong>为什么用？有什么好处？</strong></p>\n<p>在多线程领域：所谓阻塞，在某些情况下余挂起线程（即阻塞），一旦条件满足，被挂起的线程又会自动被唤醒</p>\n<p>为什么需要<code>BlockingQueue</code><br>好处是我们不需要关心什么时候需要阻塞线程，什么时候需要唤醒线程，因为这一切<code>BlockingQueue</code>都给你一手包办了</p>\n<p>在<code>Concurrent</code>包发布以前，在多线程环境下，我们每个程序员都必须去自己控制这些细节，尤其还要兼顾效率和线程安全，而这会给我们的程序带来不小的复杂度。</p>\n<p>架构介绍</p>\n<img data-src=\"/blog/posts/159c6098/2022-03-13-16-39-46.png\" class=\"\">\n\n<p>种类分析：</p>\n<ul>\n<li><code>ArrayBlockingQueue</code>：由数组结构组成的有界阻塞队列。</li>\n<li><code>LinkedBlockingQueue</code>：由链表结构组成的有界（但大小默认值为<code>Integer.MAX_VALUE</code>）阻塞队列。</li>\n<li><code>PriorityBlockingQueue</code>：支持优先级排序的无界阻塞队列。</li>\n<li><code>DelayQueue</code>：使用优先级队列实现妁延迟无界阻塞队列。</li>\n<li><code>SynchronousQueue</code>：不存储元素的阻塞队列。</li>\n<li><code>LinkedTransferQueue</code>：由链表结构绒成的无界阻塞队列。</li>\n<li><code>LinkedBlockingDeque</code>：由链表结构组成的双向阻塞队列。</li>\n</ul>\n<p><strong><code>BlockingQueue</code>的核心方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>方法类型</th>\n<th>抛出异常</th>\n<th>特殊值</th>\n<th>阻塞</th>\n<th>超时</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>插入</td>\n<td>add(e)</td>\n<td>offer(e)</td>\n<td>put(e)</td>\n<td>offer(e,time,unit)</td>\n</tr>\n<tr>\n<td>移除</td>\n<td>remove()</td>\n<td>poll()</td>\n<td>take()</td>\n<td>poll(time,unit)</td>\n</tr>\n<tr>\n<td>检查</td>\n<td>element()</td>\n<td>peek()</td>\n<td>不可用</td>\n<td>不可用</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>性质</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>抛出异常</td>\n<td>当阻塞队列满时：在往队列中add插入元素会抛出 IIIegalStateException：Queue full    当阻塞队列空时：再往队列中remove移除元素，会抛出NoSuchException</td>\n</tr>\n<tr>\n<td>特殊性</td>\n<td>插入方法，成功true，失败false  移除方法：成功返回出队列元素，队列没有就返回空</td>\n</tr>\n<tr>\n<td>一直阻塞</td>\n<td>当阻塞队列满时，生产者继续往队列里put元素，队列会一直阻塞生产线程直到put数据or响应中断退出。  当阻塞队列空时，消费者线程试图从队列里take元素，队列会一直阻塞消费者线程直到队列可用。</td>\n</tr>\n<tr>\n<td>超时退出</td>\n<td>当阻塞队列满时，队里会阻塞生产者线程一定时间，超过限时后生产者线程会退出</td>\n</tr>\n</tbody></table>\n<h2 id=\"线程通信之生产者消费者传统\"><a href=\"#线程通信之生产者消费者传统\" class=\"headerlink\" title=\"线程通信之生产者消费者传统\"></a>线程通信之生产者消费者传统</h2><p>阻塞队列用在哪里？</p>\n<ul>\n<li>生产者消费者模式<ul>\n<li>传统版（<code>synchronized, wait, notify</code>）</li>\n<li>阻塞队列版（<code>lock, await, signal</code>）</li>\n</ul>\n</li>\n<li>线程池</li>\n<li>消息中间件</li>\n</ul>\n<p>实现一个简单的生产者消费者模式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShareData</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Lock lock = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition = lock.newCondition();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">increment</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 同步代码块，加锁</span></span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">                condition.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            number++;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 通知 唤醒</span></span><br><span class=\"line\">            condition.signalAll();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">decrement</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 同步代码块，加锁</span></span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 等待不能消费</span></span><br><span class=\"line\">                condition.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            number--;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 通知 唤醒</span></span><br><span class=\"line\">            condition.signalAll();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，<code>increment()</code>和<code>decrement()</code>内的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">    condition.await();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不能用 (javaw文档中指出)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(number != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 等待不能生产</span></span><br><span class=\"line\">    condition.await();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Synchronized和Lock有什么区别\"><a href=\"#Synchronized和Lock有什么区别\" class=\"headerlink\" title=\"Synchronized和Lock有什么区别\"></a><code>Synchronized</code>和<code>Lock</code>有什么区别</h2><ol>\n<li><code>synchronized</code>属于<code>JVM</code>层面，属于<code>java</code>的关键字<ul>\n<li><code>monitorenter</code>（底层是通过<code>monitor</code>对象来完成，其实<code>wait/notify</code>等方法也依赖于<code>monitor</code>对象 只能在同步块或者方法中才能调用 <code>wait/ notify</code>等方法）</li>\n<li><code>Lock</code>是具体类（<code>java.util.concurrent.locks.Lock</code>）是<code>api</code>层面的锁</li>\n</ul>\n</li>\n<li>使用方法：<ul>\n<li><code>synchronized：</code>不需要用户去手动释放锁，当<code>synchronized</code>代码执行后，系统会自动让线程释放对锁的占用。</li>\n<li><code>ReentrantLock：</code>则需要用户去手动释放锁，若没有主动释放锁，就有可能出现死锁的现象，需要<code>lock()</code> 和 <code>unlock()</code> 配置<code>try catch</code>语句来完成</li>\n</ul>\n</li>\n<li>等待是否中断<ul>\n<li><code>synchronized：</code>不可中断，除非抛出异常或者正常运行完成。</li>\n<li><code>ReentrantLock：</code>可中断，可以设置超时方法<ul>\n<li>设置超时方法，<code>trylock(long timeout, TimeUnit unit)</code></li>\n<li><code>lockInterrupible()</code> 放代码块中，调用<code>interrupt()</code> 方法可以中断</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>加锁是否公平<ul>\n<li><code>synchronized</code>：非公平锁</li>\n<li><code>ReentrantLock</code>：默认非公平锁，构造函数可以传递<code>boolean</code>值，<code>true</code>为公平锁，<code>false</code>为非公平锁</li>\n</ul>\n</li>\n<li>锁绑定多个条件<code>Condition</code><ul>\n<li><code>synchronized</code>：没有，要么随机，要么全部唤醒</li>\n<li><code>ReentrantLock</code>：用来实现分组唤醒需要唤醒的线程，可以精确唤醒，而不是像<code>synchronized</code>那样，要么随机，要么全部唤醒</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"锁绑定多个条件Condition\"><a href=\"#锁绑定多个条件Condition\" class=\"headerlink\" title=\"锁绑定多个条件Condition\"></a>锁绑定多个条件<code>Condition</code></h2><p>实现场景</p>\n<p>多线程之间按顺序调用，实现 <code>A-&gt; B -&gt; C</code> 三个线程启动，要求如下：<br><code>AA</code>打印<code>5</code>次，<code>BB</code>打印<code>10</code>次，<code>CC</code>打印<code>15</code>次<br>紧接着<br><code>AA</code>打印<code>5</code>次，<code>BB</code>打印<code>10</code>次，<code>CC</code>打印<code>15</code>次<br>…<br>来<code>10</code>轮</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.Condition;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.Lock;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShareResource</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// A 1   B 2   c 3</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个重入锁</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Lock lock = <span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这三个相当于备用钥匙</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition1 = lock.newCondition();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition2 = lock.newCondition();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Condition condition3 = lock.newCondition();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print5</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition1.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知B线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知2号去干活了</span></span><br><span class=\"line\">            condition2.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print10</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition2.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知C线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知2号去干活了</span></span><br><span class=\"line\">            condition3.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print15</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 判断</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(number != <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 不等于1，需要等待</span></span><br><span class=\"line\">                condition3.await();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 干活</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t &quot;</span> + number + <span class=\"string\">&quot;\\t&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 唤醒 （干完活后，需要通知C线程执行）</span></span><br><span class=\"line\">            number = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 通知1号去干活了</span></span><br><span class=\"line\">            condition1.signal();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SynchronizedAndReentrantLockDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ShareResource shareResource = <span class=\"keyword\">new</span> ShareResource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                    shareResource.print5();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;A&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                shareResource.print10();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;B&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">                shareResource.print15();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;C&quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">10</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">11</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">12</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">13</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">14</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">A\t <span class=\"number\">1</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">B\t <span class=\"number\">2</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">0</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">1</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">2</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">4</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">5</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">6</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">7</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">8</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">9</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">10</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">11</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">12</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">13</span></span><br><span class=\"line\">C\t <span class=\"number\">3</span>\t<span class=\"number\">14</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"线程通信之生产者消费者阻塞队列版\"><a href=\"#线程通信之生产者消费者阻塞队列版\" class=\"headerlink\" title=\"线程通信之生产者消费者阻塞队列版\"></a>线程通信之生产者消费者阻塞队列版</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.BlockingQueue;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyResource</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 默认开启，进行生产消费</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里用到了volatile是为了保持数据的可见性，也就是当TLAG修改时，要马上通知其它线程进行修改</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> FLAG = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用原子包装类，而不用number++</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AtomicInteger atomicInteger = <span class=\"keyword\">new</span> AtomicInteger();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这里不能为了满足条件，而实例化一个具体的SynchronousBlockingQueue</span></span><br><span class=\"line\">    BlockingQueue&lt;String&gt; blockingQueue = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 而应该采用依赖注入里面的，构造注入方法传入</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyResource</span><span class=\"params\">(BlockingQueue&lt;String&gt; blockingQueue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.blockingQueue = blockingQueue;</span><br><span class=\"line\">        <span class=\"comment\">// 查询出传入的class是什么</span></span><br><span class=\"line\">        System.out.println(blockingQueue.getClass().getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">myProducer</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        String data = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> retValue;</span><br><span class=\"line\">        <span class=\"comment\">// 多线程环境的判断，一定要使用while进行，防止出现虚假唤醒</span></span><br><span class=\"line\">        <span class=\"comment\">// 当FLAG为true的时候，开始生产</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(FLAG) &#123;</span><br><span class=\"line\">            data = atomicInteger.incrementAndGet() + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 2秒存入1个data</span></span><br><span class=\"line\">            retValue = blockingQueue.offer(data, <span class=\"number\">2L</span>, TimeUnit.SECONDS);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(retValue) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 插入队列:&quot;</span> + data  + <span class=\"string\">&quot;成功&quot;</span> );</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 插入队列:&quot;</span> + data  + <span class=\"string\">&quot;失败&quot;</span> );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                TimeUnit.SECONDS.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 停止生产，表示FLAG=false，生产介绍&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">myConsumer</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        String retValue;</span><br><span class=\"line\">        <span class=\"comment\">// 多线程环境的判断，一定要使用while进行，防止出现虚假唤醒</span></span><br><span class=\"line\">        <span class=\"comment\">// 当FLAG为true的时候，开始生产</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(FLAG) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 2秒存入1个data</span></span><br><span class=\"line\">            retValue = blockingQueue.poll(<span class=\"number\">2L</span>, TimeUnit.SECONDS);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(retValue != <span class=\"keyword\">null</span> &amp;&amp; retValue != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费队列:&quot;</span> + retValue  + <span class=\"string\">&quot;成功&quot;</span> );</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                FLAG = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费失败，队列中已为空，退出&quot;</span> );</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 退出消费队列</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 停止生产的判断</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.FLAG = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProducerConsumerWithBlockingQueueDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 传入具体的实现类， ArrayBlockingQueue</span></span><br><span class=\"line\">        MyResource myResource = <span class=\"keyword\">new</span> MyResource(<span class=\"keyword\">new</span> ArrayBlockingQueue&lt;String&gt;(<span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 生产线程启动\\n\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                myResource.myProducer();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;producer&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;\\t 消费线程启动&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                myResource.myConsumer();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;consumer&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 5秒后，停止生产和消费</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n\\n5秒中后，生产和消费线程停止，线程结束&quot;</span>);</span><br><span class=\"line\">        myResource.stop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.util.concurrent.ArrayBlockingQueue</span><br><span class=\"line\">producer\t 生产线程启动</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">consumer\t 消费线程启动</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">1</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">1</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">2</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">2</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">3</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">3</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">4</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">4</span>成功</span><br><span class=\"line\">producer\t 插入队列:<span class=\"number\">5</span>成功</span><br><span class=\"line\">consumer\t 消费队列:<span class=\"number\">5</span>成功</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5</span>秒中后，生产和消费线程停止，线程结束</span><br><span class=\"line\">producer\t 停止生产，表示FLAG=<span class=\"keyword\">false</span>，生产介绍</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">consumer\t 消费失败，队列中已为空，退出</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "tags": [
                "Java 面试",
                "数据结构",
                "阻塞队列"
            ]
        }
    ]
}