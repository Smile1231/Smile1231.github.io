{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"linux\" tag",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/d0edc1ed/",
            "url": "https://smile1231.github.io/posts/d0edc1ed/",
            "title": "Linux常用命令",
            "date_published": "2022-06-29T14:06:39.000Z",
            "content_html": "<h2 id=\"Linux查看空间大小的命令\"><a href=\"#Linux查看空间大小的命令\" class=\"headerlink\" title=\"Linux查看空间大小的命令\"></a><code>Linux</code>查看空间大小的命令</h2><span id=\"more\"></span>\n\n<h3 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a><code>df</code></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一列：文件系统</span><br><span class=\"line\">第二列：容量</span><br><span class=\"line\">第三列：已用容量</span><br><span class=\"line\">第四列：可用容量</span><br><span class=\"line\">第五列：已用容量%</span><br><span class=\"line\">第六列：挂载点</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/d0edc1ed/2022-06-29-22-09-03.png\" class=\"\">\n\n<p>参数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a: 显示所有文件系统信息，包括系统特有的 /proc、/sysfs 等文件系统；</span><br><span class=\"line\">-m: 以 MB 为单位显示容量；</span><br><span class=\"line\">-k: 以 KB 为单位显示容量，默认以 KB 为单位；</span><br><span class=\"line\">-h: 使用人们习惯的 KB、MB 或 GB 等单位自行显示容量；</span><br><span class=\"line\">-T: 显示该分区的文件系统名称；</span><br><span class=\"line\">-i: 不用硬盘容量显示，而是以含有 inode 的数量来显示。</span><br><span class=\"line\">--block-size=&lt;区块大小&gt;：以指定的区块大小来显示区块数目；</span><br><span class=\"line\">-l或--<span class=\"built_in\">local</span>：仅显示本地端的文件系统；</span><br><span class=\"line\">--no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；</span><br><span class=\"line\">-P或--portability：使用POSIX的输出格式；</span><br><span class=\"line\">--sync：在取得磁盘使用信息前，先执行sync指令；</span><br><span class=\"line\">-t&lt;文件系统类型&gt;或--<span class=\"built_in\">type</span>=&lt;文件系统类型&gt;：仅显示指定文件系统类型的磁盘信息；</span><br><span class=\"line\">-x&lt;文件系统类型&gt;或--exclude-type=&lt;文件系统类型&gt;：不要显示指定文件系统类型的磁盘信息；</span><br><span class=\"line\">--<span class=\"built_in\">help</span>：显示帮助；</span><br><span class=\"line\">--version：显示版本信息。</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/d0edc1ed/2022-06-29-22-17-18.png\" class=\"\">\n\n<h3 id=\"du\"><a href=\"#du\" class=\"headerlink\" title=\"du\"></a><code>du</code></h3><img data-src=\"/posts/d0edc1ed/2022-06-29-22-20-51.png\" class=\"\">\n\n<blockquote>\n<p>如果只想查看当前目录占用空间的大小，不查看子目录或者子文件占用空间大小，那么<code>s</code>选项无疑很有帮助，如下：</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">du -sh</span></span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/d0edc1ed/2022-06-29-22-23-40.png\" class=\"\">\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -h --max-depth=0</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/d0edc1ed/2022-06-29-22-29-35.png\" class=\"\">\n\n<h2 id=\"Mount文件挂载\"><a href=\"#Mount文件挂载\" class=\"headerlink\" title=\"Mount文件挂载\"></a><code>Mount</code>文件挂载</h2><blockquote>\n<p>文件系统挂载</p>\n</blockquote>\n<p>硬件设备必须挂载之后才能使用，只不过，有些硬件设备（比如硬盘分区）在每次系统启动时会自动挂载，而有些（比如 U 盘、光盘）则需要手动进行挂载。</p>\n<p>挂载指的是将硬件设备的文件系统和 <code>Linux</code> 系统中的文件系统，通过指定目录（作为挂载点）进行关联。而要将文件系统挂载到 <code>Linux</code> 系统上，就需要使用 <code>mount</code> 挂载命令。</p>\n<blockquote>\n<p><code>mount</code> 命令的常用格式有以下几种：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount [-l]</span><br><span class=\"line\"><span class=\"comment\"># 单纯使用 `mount` 命令，会显示出系统中已挂载的设备信息，使用 `-l` 选项，会额外显示出卷标名称（读者可自行运行，查看输出结果）；</span></span><br><span class=\"line\"></span><br><span class=\"line\">mount -a</span><br><span class=\"line\"><span class=\"comment\"># -a 选项的含义是自动检查 /etc/fstab 文件中有无疏漏被挂载的设备文件，如果有，则进行自动挂载操作。这里简单介绍一下 /etc/fstab 文件，此文件是自动挂载文件，系统开机时会主动读取 /etc/fstab 这个文件中的内容，根据该文件的配置，系统会自动挂载指定设备。</span></span><br><span class=\"line\"></span><br><span class=\"line\">mount [-t 系统类型] [-L 卷标名] [-o 特殊选项] [-n] 设备文件名 挂载点</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 各选项的含义分别是：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -t 系统类型：指定欲挂载的文件系统类型。Linux 常见的支持类型有 EXT2、EXT3、EXT4、iso9660（光盘格式）、vfat、reiserfs 等。如果不指定具体类型，挂载时 Linux 会自动检测。</span></span><br><span class=\"line\"><span class=\"comment\"># -L 卷标名：除了使用设备文件名（例如 /dev/hdc6）之外，还可以利用文件系统的卷标名称进行挂载。</span></span><br><span class=\"line\"><span class=\"comment\"># -n：在默认情况下，系统会将实际挂载的情况实时写入 /etc/mtab 文件中，但在某些场景下（例如单人维护模式），为了避免出现问题，会刻意不写入，此时就需要使用这个选项；</span></span><br><span class=\"line\"><span class=\"comment\"># -o 特殊选项：可以指定挂载的额外选项，比如读写权限、同步/异步等，如果不指定，则使用默认值（defaults）。</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>mount 命令选项及功能</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rw/ro ：是否对挂载的文件系统拥有读写权限，rw 为默认值，表示拥有读写权限；ro 表示只读权限。</span><br><span class=\"line\"></span><br><span class=\"line\">async/sync ： 此文件系统是否使用同步写入（sync）或异步（async）的内存机制，默认为异步 async。</span><br><span class=\"line\"></span><br><span class=\"line\">dev/nodev ：是否允许从该文件系统的 block 文件中提取数据，为了保证数据安装，默认是 nodev。</span><br><span class=\"line\"></span><br><span class=\"line\">auto/noauto ：是否允许此文件系统被以 mount -a 的方式进行自动挂载，默认是 auto。</span><br><span class=\"line\"></span><br><span class=\"line\">suid/nosuid ：设定文件系统是否拥有 SetUID 和 SetGID 权限，默认是拥有。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exec</span>/noexec ：设定在文件系统中是否允许执行可执行文件，默认是允许。</span><br><span class=\"line\"></span><br><span class=\"line\">user/nouser ：设定此文件系统是否允许让普通用户使用 mount 执行实现挂载，默认是不允许（nouser），仅有 root 可以。</span><br><span class=\"line\"></span><br><span class=\"line\">defaults ：定义默认值，相当于 rw、suid、dev、<span class=\"built_in\">exec</span>、auto、nouser、async 这 7 个选项。</span><br><span class=\"line\"></span><br><span class=\"line\">remount重新挂载已挂载的文件系统，一般用于指定修改特殊权限。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"查看系统信息\"><a href=\"#查看系统信息\" class=\"headerlink\" title=\"查看系统信息\"></a>查看系统信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/os-release</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/d0edc1ed/2022-06-30-10-12-30.png\" class=\"\">\n\n<h2 id=\"查看开放端口\"><a href=\"#查看开放端口\" class=\"headerlink\" title=\"查看开放端口\"></a>查看开放端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -lntu </span><br><span class=\"line\">或者  ss -lntu</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看端口号</span><br><span class=\"line\">netstat -ntlp //查看当前所有tcp端口·</span><br><span class=\"line\">netstat -ntulp |grep 6666 //查看所有1935端口使用情况·</span><br><span class=\"line\">CentOS默认开放的本地端口范围</span><br><span class=\"line\">系统本地开放端口的范围：（默认30000多到60000多）</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/d0edc1ed/2022-06-30-10-13-53.png\" class=\"\">\n\n<h2 id=\"检查端口是否打开\"><a href=\"#检查端口是否打开\" class=\"headerlink\" title=\"检查端口是否打开\"></a>检查端口是否打开</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -na | grep :9999</span><br><span class=\"line\">ss -na | grep :9999</span><br></pre></td></tr></table></figure>\n<p>输出必须保持空白，从而验证它当前未被使用，以便我们可以将端口规则手动添加到系统<code>iptables</code>防火墙。</p>\n<h2 id=\"centos查看防火墙状态的方法\"><a href=\"#centos查看防火墙状态的方法\" class=\"headerlink\" title=\"centos查看防火墙状态的方法\"></a><code>centos</code>查看防火墙状态的方法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables status <span class=\"comment\">#查看iptables防火墙状态</span></span><br><span class=\"line\">或</span><br><span class=\"line\">systemctl status firewalld <span class=\"comment\">#查看firewall防火墙服务状态</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#iptables防火墙</span></span><br><span class=\"line\">service iptables start <span class=\"comment\">#启动防火墙</span></span><br><span class=\"line\">service iptables stop <span class=\"comment\">#停止防火墙</span></span><br><span class=\"line\">service iptables restart <span class=\"comment\">#重启防火墙</span></span><br><span class=\"line\"><span class=\"comment\">#firewall防火墙</span></span><br><span class=\"line\">service firewalld start <span class=\"comment\"># 开启</span></span><br><span class=\"line\">service firewalld stop <span class=\"comment\"># 关闭 </span></span><br><span class=\"line\">service firewalld restart <span class=\"comment\"># 重启</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开放端口\"><a href=\"#开放端口\" class=\"headerlink\" title=\"开放端口\"></a>开放端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要root权限</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class=\"line\"><span class=\"comment\"># 命令含义：</span></span><br><span class=\"line\">--zone <span class=\"comment\">#作用域</span></span><br><span class=\"line\">--add-port=6666/tcp <span class=\"comment\">#添加端口，格式为：端口/通讯协议</span></span><br><span class=\"line\">--permanent <span class=\"comment\">#永久生效，没有此参数重启后失效</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"防火墙firewall\"><a href=\"#防火墙firewall\" class=\"headerlink\" title=\"防火墙firewall\"></a>防火墙<code>firewall</code></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重启firewall</span></span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查是否生效</span></span><br><span class=\"line\">firewall-cmd --zone=public —query-port=8080/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止firewall</span></span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 禁止firewall开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"检测远程端口是否打开\"><a href=\"#检测远程端口是否打开\" class=\"headerlink\" title=\"检测远程端口是否打开\"></a>检测远程端口是否打开</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet 118.10.6.128 88</span><br><span class=\"line\"><span class=\"comment\"># 测试远程主机端口是否打开</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmap ip -p port <span class=\"comment\">#测试端口</span></span><br><span class=\"line\">nmap ip </span><br><span class=\"line\"><span class=\"comment\"># 根据显示close/open确定端口是否打开</span></span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/d0edc1ed/2022-07-01-09-13-27.png\" class=\"\">\n\n<h2 id=\"Linux生成-UUID\"><a href=\"#Linux生成-UUID\" class=\"headerlink\" title=\"Linux生成 UUID\"></a><code>Linux</code>生成 <code>UUID</code></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /proc/sys/kernel/random/uuid</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看正在运行的java线程\"><a href=\"#查看正在运行的java线程\" class=\"headerlink\" title=\"查看正在运行的java线程\"></a>查看正在运行的<code>java</code>线程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jps -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 杀死线程</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -9 &lt;PID&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/56be7cc9/",
            "url": "https://smile1231.github.io/posts/56be7cc9/",
            "title": "关于Linux排查问题命令",
            "date_published": "2022-03-13T07:13:24.000Z",
            "content_html": "<h2 id=\"Linux命令之top\"><a href=\"#Linux命令之top\" class=\"headerlink\" title=\"Linux命令之top\"></a><code>Linux</code>命令之<code>top</code></h2><blockquote>\n<p>top - 整机性能查看</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<img data-src=\"/posts/56be7cc9/2022-03-13-22-54-06.png\" class=\"\">\n\n<img data-src=\"/posts/56be7cc9/2022-03-13-22-58-37.png\" class=\"\">\n\n<p>主要看<code>load average, CPU, MEN</code>三部分</p>\n<ul>\n<li><code>load average</code>表示系统负载，即任务队列的平均长度。 三个数值分别为 <code>1</code>分钟、<code>5</code>分钟、<code>15</code>分钟前到现在的平均值。</li>\n<li><code>load average</code>: 如果这个数除以逻辑<code>CPU</code>的数量，结果高于<code>5</code>的时候就表明系统在超负荷运转了。</li>\n</ul>\n<p><a href=\"https://yjclsx.blog.csdn.net/article/details/81508455\"><code>Linux</code>中<code>top</code>命令参数详解</a></p>\n<blockquote>\n<p>uptime - 系统性能命令的精简版</p>\n</blockquote>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-00-56.png\" class=\"\">\n\n<h2 id=\"Linux之cpu查看vmstat-mac中为vm-stat\"><a href=\"#Linux之cpu查看vmstat-mac中为vm-stat\" class=\"headerlink\" title=\"Linux之cpu查看vmstat (mac中为vm_stat)\"></a><code>Linux</code>之<code>cpu</code>查看<code>vmstat</code> (<code>mac</code>中为<code>vm_stat</code>)</h2><img data-src=\"/posts/56be7cc9/2022-03-13-23-05-38.png\" class=\"\">\n\n<ul>\n<li><code>procs</code><ul>\n<li><code>r</code>：运行和等待的<code>CPU</code>时间片的进程数，原则上<code>1</code>核的<code>CPU</code>的运行队列不要超过<code>2</code>，整个系统的运行队列不超过总核数的2倍，否则代表系统压力过大，我们看蘑菇博客测试服务器，能发现都超过了<code>2</code>，说明现在压力过大</li>\n<li><code>b</code>：等待资源的进程数，比如正在等待磁盘<code>I/O</code>、网络<code>I/O</code>等</li>\n</ul>\n</li>\n<li><code>cpu</code><br>  <code>us</code>：用户进程消耗<code>CPU</code>时间百分比，<code>us</code>值高，用户进程消耗<code>CPU</code>时间多，如果长期大于<code>50%</code>，优化程序<br>  <code>sy</code>：内核进程消耗的CPU时间百分比<br>  <code>us + sy </code>参考值为<code>80%</code>，如果<code>us + sy</code> 大于<code>80%</code>，说明可能存在<code>CPU</code>不足，从上面的图片可以看出，<code>us + sy</code>还没有超过百分80，因此说明蘑菇博客的<code>CPU</code>消耗不是很高<br>  <code>id</code>：处于空闲的<code>CPU</code>百分比<br>  <code>wa</code>：系统等待<code>IO</code>的<code>CPU</code>时间百分比<br>  <code>st</code>：来自于一个虚拟机偷取的<code>CPU</code>时间比</li>\n</ul>\n<h2 id=\"Linux之cpu查看pidstat（Mac中没有）\"><a href=\"#Linux之cpu查看pidstat（Mac中没有）\" class=\"headerlink\" title=\"Linux之cpu查看pidstat（Mac中没有）\"></a><code>Linux</code>之<code>cpu</code>查看<code>pidstat</code>（<code>Mac</code>中没有）</h2><p>查看看所有<code>cpu</code>核信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpstat -P ALL 2</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-10-51.png\" class=\"\">\n\n\n<p>每个进程使用<code>cpu</code>的用量分解信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pidstat -u 1 -p 进程编号</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-11-14.png\" class=\"\">\n\n\n\n<h2 id=\"Linux之内存查看free和pidstat（Mac中没有）\"><a href=\"#Linux之内存查看free和pidstat（Mac中没有）\" class=\"headerlink\" title=\"Linux之内存查看free和pidstat（Mac中没有）\"></a><code>Linux</code>之内存查看<code>free</code>和<code>pidstat</code>（<code>Mac</code>中没有）</h2><p>应用程序可用内存数</p>\n<p>经验值</p>\n<p>应用程序可用内存l系统物理内存&gt;<code>70%</code>内存充足</p>\n<p>应用程序可用内存/系统物理内存&lt;<code>20%</code>内存不足，需要增加内存</p>\n<p><code>20%</code>&lt;应用程序可用内存/系统物理内存&lt;<code>70%</code>内存基本够用</p>\n<p><code>m/g</code>：兆/吉</p>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-12-13.png\" class=\"\">\n\n<p>查看额外</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pidstat -p 进程号 -r 采样间隔秒数</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux之硬盘查看df\"><a href=\"#Linux之硬盘查看df\" class=\"headerlink\" title=\"Linux之硬盘查看df\"></a><code>Linux</code>之硬盘查看<code>df</code></h2><p>查看磁盘剩余空间数</p>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-13-22.png\" class=\"\">\n\n<h2 id=\"Linux之磁盘IO查看iostat和pidstat\"><a href=\"#Linux之磁盘IO查看iostat和pidstat\" class=\"headerlink\" title=\"Linux之磁盘IO查看iostat和pidstat\"></a><code>Linux</code>之磁盘<code>IO</code>查看<code>iostat</code>和<code>pidstat</code></h2><p>磁盘<code>I/O</code>性能评估<br><code>mac</code>:</p>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-16-06.png\" class=\"\">\n\n<p><code>linux</code>:</p>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-16-54.png\" class=\"\">\n\n<p>磁盘块设备分布</p>\n<ul>\n<li><code>rkB/s</code>每秒读取数据量<code>kB;wkB/s</code>每秒写入数据量<code>kB</code>;</li>\n<li><code>svctm lO</code>请求的平均服务时间，单位毫秒;</li>\n<li><code>await l/O</code>请求的平均等待时间，单位毫秒;值越小，性能越好;</li>\n<li><code>util</code>一秒中有百分几的时间用于<code>I/O</code>操作。接近<code>100%</code>时，表示磁盘带宽跑满，需要优化程序或者增加磁盘;</li>\n<li><code>rkB/s、wkB/s</code>根据系统应用不同会有不同的值，但有规律遵循:长期、超大数据读写，肯定不正常，需要优化程序读取。</li>\n<li><code>svctm</code>的值与<code>await</code>的值很接近，表示几乎没有IO等待，磁盘性能好。</li>\n<li>如果<code>await</code>的值远高于<code>svctm</code>的值，则表示<code>IO</code>队列等待太长，需要优化程序或更换更快磁盘。</li>\n</ul>\n<h2 id=\"Linux之网络IO查看ifstat\"><a href=\"#Linux之网络IO查看ifstat\" class=\"headerlink\" title=\"Linux之网络IO查看ifstat\"></a><code>Linux</code>之网络<code>IO</code>查看<code>ifstat</code></h2><p>默认本地没有，下载<code>ifstat</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://gael.roualland.free.fr/lifstat/ifstat-1.1.tar.gz</span><br><span class=\"line\">tar -xzvf ifstat-1.1.tar.gz</span><br><span class=\"line\">cd ifstat-1.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>查看网络<code>IO</code></p>\n<p>各个网卡的<code>in、out</code></p>\n<p>观察网络负载情况程序</p>\n<p>网络读写是否正常</p>\n<ul>\n<li>程序网络<code>I/O</code>优化</li>\n<li>增加网络<code>I/O</code>带宽</li>\n</ul>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-19-52.png\" class=\"\">\n\n<h2 id=\"Linux查看物理CPU个数、核数、逻辑CPU个数\"><a href=\"#Linux查看物理CPU个数、核数、逻辑CPU个数\" class=\"headerlink\" title=\"Linux查看物理CPU个数、核数、逻辑CPU个数\"></a><code>Linux</code>查看物理<code>CPU</code>个数、核数、逻辑<code>CPU</code>个数</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 总核数 = 物理CPU个数 X 每颗物理CPU的核数 </span></span><br><span class=\"line\"><span class=\"comment\"># 总逻辑CPU数 = 物理CPU个数 X 每颗物理CPU的核数 X 超线程数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看物理CPU个数</span></span><br><span class=\"line\">cat /proc/cpuinfo| grep <span class=\"string\">&quot;physical id&quot;</span>| sort| uniq| wc -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看每个物理CPU中core的个数(即核数)</span></span><br><span class=\"line\">cat /proc/cpuinfo| grep <span class=\"string\">&quot;cpu cores&quot;</span>| uniq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看逻辑CPU的个数 , 这是我们关心的,涉及到线程池大小</span></span><br><span class=\"line\">cat /proc/cpuinfo| grep <span class=\"string\">&quot;processor&quot;</span>| wc -l</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看服务器信息指令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看CPU信息（型号）</span></span><br><span class=\"line\">cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看内存信息</span></span><br><span class=\"line\">cat /proc/meminfo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如何查看Linux 内核</span></span><br><span class=\"line\">uname -a</span><br><span class=\"line\">cat /proc/version</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看机器型号（机器硬件型号）</span></span><br><span class=\"line\">dmidecode | grep <span class=\"string\">&quot;Product Name&quot;</span></span><br><span class=\"line\">dmidecode</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如何查看linux 系统版本</span></span><br><span class=\"line\">cat /etc/redhat-release</span><br><span class=\"line\">lsb_release -a</span><br><span class=\"line\">cat  /etc/issue</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#如何查看linux系统和CPU型号，类型和大小</span></span><br><span class=\"line\">cat /proc/cpuinfo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如何查看linux 系统内存大小的信息，可以查看总内存，剩余内存，可使用内存等信息  </span></span><br><span class=\"line\">cat /proc/meminfo</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"CPU占用过高的定位分析思路\"><a href=\"#CPU占用过高的定位分析思路\" class=\"headerlink\" title=\"CPU占用过高的定位分析思路\"></a><code>CPU</code>占用过高的定位分析思路</h2><p>结合<code>Linux</code>和<code>JDK</code>命令一块分析</p>\n<p>案例步骤</p>\n<ul>\n<li>先用<code>top</code>命令找出<code>CPU</code>占比最高的</li>\n</ul>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-20-27.png\" class=\"\">\n\n<ul>\n<li><p><code>ps -ef</code>或者<code>jps</code>进一步定位，得知是一个怎么样的一个后台程序作搞屎棍</p>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-24-51.png\" class=\"\"></li>\n<li><p>定位到具体线程或者代码</p>\n<ul>\n<li><code>ps -mp</code> 进程 <code>-o THREAD,tid,time</code></li>\n<li><code>-m</code> 显示所有的线程</li>\n<li><code>-p pid</code>进程使用<code>cpu</code>的时间</li>\n<li><code>-o</code> 该参数后是用户自定义格式</li>\n</ul>\n</li>\n</ul>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-25-31.png\" class=\"\">\n\n<ul>\n<li>将需要的线程<code>ID</code>转换为<code>16</code>进制格式（英文小写格式），命令<code>printf %x 172 </code>将<code>172</code>转换为十六进制</li>\n<li><code>jstack 进程ID | grep tid</code>（<code>16</code>进制线程<code>ID</code>小写英文）<code>-A60</code></li>\n</ul>\n<blockquote>\n<p>ps - process status<br>-A Display information about other users’ processes, including those without controlling terminals.<br>-e Identical to -A.<br>-f Display the uid, pid, parent pid, recent CPU usage, process start time, controlling tty, elapsed CPU usage, and the associated command. If the -u option is also used, display the user name rather then the numeric uid. When -o or -O is used to add to the display following -f, the command field is not truncated as severely as it is in other formats.<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6dWZlbmcvYXJ0aWNsZS9kZXRhaWxzLzgzNTM3Mjc1\">ps -ef中的e、f是什么含义</span></p>\n</blockquote>\n<p>对于<code>JDK</code>自带的<code>JVM</code>监控和性能分析工具用过哪些?一般你是怎么用的?<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE4NjMwMjQvYXJ0aWNsZS9kZXRhaWxzLzEwNjY1MTA2OA==\">link</span></p>\n<h2 id=\"GitHub骚操作之awesome搜索\"><a href=\"#GitHub骚操作之awesome搜索\" class=\"headerlink\" title=\"GitHub骚操作之awesome搜索\"></a><code>GitHub</code>骚操作之<code>awesome</code>搜索</h2><ul>\n<li>公式：<code>awesome</code> 关键字：<code>awesome</code>系列，一般用来收集学习、工具、书籍类相关的项目</li>\n<li>搜索优秀的<code>redis</code>相关的项目，包括框架，教程等 <code>awesome redis</code><h2 id=\"GitHub骚操作之-L数字\"><a href=\"#GitHub骚操作之-L数字\" class=\"headerlink\" title=\"GitHub骚操作之#L数字\"></a><code>GitHub</code>骚操作之<code>#L</code>数字</h2>一行：地址后面紧跟 <code>#L10</code><br><code>https://github.com/abc/abc/pom.xml#L13</code><br>多行：地址后面紧跟 <code>#Lx - #Ln</code><br><code>https://github.com/moxi624/abc/abc/pom.xml#L13-L30</code><h2 id=\"GitHub骚操作之T搜索\"><a href=\"#GitHub骚操作之T搜索\" class=\"headerlink\" title=\"GitHub骚操作之T搜索\"></a><code>GitHub</code>骚操作之<code>T</code>搜索</h2></li>\n</ul>\n<img data-src=\"/posts/56be7cc9/2022-03-13-23-31-47.png\" class=\"\">",
            "tags": [
                "Java面试",
                "Linux"
            ]
        }
    ]
}