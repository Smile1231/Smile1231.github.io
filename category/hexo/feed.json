{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"hexo\" category",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/5c2529f6/",
            "url": "https://smile1231.github.io/posts/5c2529f6/",
            "title": "Hexo中添加动态2d二次元人物模型",
            "date_published": "2021-11-21T15:18:56.000Z",
            "content_html": "<p><code>Hexo</code>添加<code>helper-live2d</code>型插件</p>\n<p><a href=\"https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\"><code>github</code>地址</a></p>\n<h1 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<h1 id=\"下载模型\"><a href=\"#下载模型\" class=\"headerlink\" title=\"下载模型\"></a>下载模型</h1><p>作者提供以下模型的模型包，模型包预览地址见下面的链接，选择你想用的模型，记住名字，选择对应的后缀模型包</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpYXpleXUvbGl2ZTJkLXdpZGdldC1tb2RlbHM=\">模型包展示</span></p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-chitose</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-epsilon2_1</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-gf</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-haru/<span class=\"number\">01</span> (use npm install --save live2d-widget-<span class=\"keyword\">model</span>-haru)</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-haru/<span class=\"number\">02</span> (use npm install --save live2d-widget-<span class=\"keyword\">model</span>-haru)</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-haruto</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-hibiki</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-hijiki</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-izumi</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-koharu</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-miku</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-ni-j</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-nico</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-nietzsche</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-nipsilon</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-nito</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-shizuku</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-tororo</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-tsumiki</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-unitychan</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-wanko</span><br><span class=\"line\">live2d-widget-<span class=\"keyword\">model</span>-z16</span><br></pre></td></tr></table></figure>\n\n<p>选择好对应的模型，使用 <code>npm install</code> 模型的包名来安装</p>\n<h1 id=\"打开个人Hexo博客文件根目录下的-config-yml-文件，在最后添加一下代码\"><a href=\"#打开个人Hexo博客文件根目录下的-config-yml-文件，在最后添加一下代码\" class=\"headerlink\" title=\"打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码\"></a>打开个人<code>Hexo</code>博客文件根目录下的 <code>_config.yml</code> 文件，在最后添加一下代码</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\">  <span class=\"attr\">pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\">  <span class=\"attr\">tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">debug:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">model:</span></span><br><span class=\"line\">    <span class=\"attr\">use:</span> <span class=\"string\">live2d-widget-model-koharu</span></span><br><span class=\"line\">  <span class=\"attr\">display:</span></span><br><span class=\"line\">    <span class=\"attr\">position:</span> <span class=\"string\">right</span></span><br><span class=\"line\">    <span class=\"attr\">width:</span> <span class=\"number\">150</span></span><br><span class=\"line\">    <span class=\"attr\">height:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">mobile:</span></span><br><span class=\"line\">    <span class=\"attr\">show:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"重启项目\"><a href=\"#重启项目\" class=\"headerlink\" title=\"重启项目\"></a>重启项目</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://smile1231.github.io/posts/45934af9/",
            "url": "https://smile1231.github.io/posts/45934af9/",
            "title": "使用vscode书写hexo博客粘贴图片解决方案",
            "date_published": "2021-11-17T06:22:03.000Z",
            "content_html": "<p>以前都是在<code>Vscode</code>中写一些<code>MarkDown</code>文档,然后上传到<code>GitHub</code>上做好目录供阅读使用:</p>\n<img data-src=\"/posts/45934af9/2021-11-17-14-35-44.png\" class=\"\">\n\n<p>如今搭建好了<code>Blog</code>,图片粘贴也是必不可少的,翻阅大量网站资料,目前本人是采用的如下方式:</p>\n<span id=\"more\"></span>\n\n<ul>\n<li><p>修改<code>hexo</code>配置文件: <code>post_asset_folder: true</code>,开启之后,生成新的<code>post</code>时,会在<code>source/_posts/</code>下创建一个同名文件夹</p>\n <img data-src=\"/posts/45934af9/2021-11-17-14-41-29.png\" class=\"\"></li>\n<li><p>下载插件:<code>paste image</code> <img data-src=\"/posts/45934af9/2021-11-17-14-47-25.png\" class=\"\"><br>这个插件用来在md文档中粘贴图片，默认会在文档的同级目录下新建一个图片文件，并在<code>md</code>中插入一行相对路径的图片代码。迎合上述<code>hexo</code>的新图片插入方式，可以在<code>vscode</code>的<code>user-settings</code>里新增两条配置:</p>\n<img data-src=\"/posts/45934af9/2021-11-17-14-49-06.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-49-20.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-49-44.png\" class=\"\"> \n<img data-src=\"/posts/45934af9/2021-11-17-14-50-14.png\" class=\"\">\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;pasteImage.path&quot;</span>: <span class=\"string\">&quot;$&#123;currentFileNameWithoutExt&#125;/&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;pasteImage.insertPattern&quot;</span>: <span class=\"string\">&quot;&#123;% asset_img $&#123;imageFileName&#125; %&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这样以来，粘贴的图片就会保存到md文档的同名文件夹下，文档中将插入<code>hexo asset</code>语法的代码。然后再复制或者剪切之后的图片,使用快捷键.(<code>windows</code>是<code>ctrl+Alt+V</code>,<code>Mac</code>是<code>Command+option+V</code>),但是<code>hexo clean -&gt; hexo g -&gt; hexo s</code>之后图片就可以正常显示了</p>\n<img data-src=\"/posts/45934af9/2021-11-17-15-16-19.png\" class=\"\"></li>\n<li><p>(以下的步骤需要修改到<code>markdown</code>源码,慎重考虑),由于重新新建一个文件夹的特殊性,所以需要略微修改</p>\n<ul>\n<li>下载预览插件: <code>Markdown Preview Enhanced</code><img data-src=\"/posts/45934af9/2021-11-17-15-01-16.png\" class=\"\"></li>\n<li>现在就要利用这个功能来解决一个问题：<code>vscode</code>内无法预览代码的图片。<code>ctrl+shift+P</code>输入<code>Markdown Preview Enhanced: Extend Parser</code>调出插件的<code>parse.js</code>文件，修改其中的<code>onWillParseMarkdown</code>方法：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\"> <span class=\"attr\">onWillParseMarkdown</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">markdown</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">//markdown参数打印出来是整个文件的内容</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> a = markdown.split(<span class=\"string\">&quot;\\n&quot;</span>);<span class=\"comment\">//通过下面第一张图片内容通过换行符进行切割</span></span><br><span class=\"line\">     <span class=\"keyword\">var</span> b = a[<span class=\"number\">1</span>].substring(<span class=\"number\">6</span>); <span class=\"comment\">//获取到title行字符,然后再去除空格即可获得图片的路径</span></span><br><span class=\"line\">     markdown = markdown.replace(</span><br><span class=\"line\">       <span class=\"comment\">//以下为代码，注释是因为markdown语法会渲染出错，但是是正确代码</span></span><br><span class=\"line\">     <span class=\"comment\">//  /\\&#123;%\\s*asset_img\\s*(.*)\\s*%\\&#125;/g,</span></span><br><span class=\"line\">      <span class=\"comment\">// (whole, content) =&gt; (&#x27;{% asset_img &#x27;+content+&#x27;)&#x27;  %}</span></span><br><span class=\"line\">     )</span><br><span class=\"line\">     <span class=\"keyword\">return</span> resolve(markdown)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/45934af9/2021-11-17-18-00-53.png\" class=\"\">\n尝试过后,图片的预览功能就能实现啦.</li>\n</ul>\n <img data-src=\"/posts/45934af9/2021-11-17-18-03-07.png\" class=\"\"></li>\n</ul>\n<p>参考链接(图片重写预览功能有错误,本文已经修正):<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5iZWkudG9wL3ZzY29kZSVFNyVCQyU5NiVFNSU4NiU5OW1kLw==\">https://linbei.top/vscode%E7%BC%96%E5%86%99md/</span></p>\n",
            "tags": [
                "blog",
                "hexo",
                "next"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/575a6046/",
            "url": "https://smile1231.github.io/posts/575a6046/",
            "title": "Hexo-Next主题如何文章置顶",
            "date_published": "2021-11-17T03:06:14.000Z",
            "content_html": "<h1 id=\"文章置顶\"><a href=\"#文章置顶\" class=\"headerlink\" title=\"文章置顶\"></a>文章置顶</h1><p><code>Hexo</code> 本身并没有内置文章置顶功能，因此需要自行安装。不过 <code>Hexo</code> 本身有一个对文章排序的组件，也就是在站点配置文件内的 <code>index_generator</code> 选项，置顶功能其实就是每次排序的时候，把其中的置顶文章排在最前，本质上是一个排序组件，<code>Hexo</code> 默认的是 <code>hexo-generator-index</code>，所以先卸载再重新安装一个可以置顶的排序组件：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先卸载</span><br><span class=\"line\">npm uninstall --save hexo-generator-index</span><br><span class=\"line\"></span><br><span class=\"line\"># 再安装</span><br><span class=\"line\">npm install --save hexo-generator-index-pin-top</span><br></pre></td></tr></table></figure>\n<p>从插件名字上就能看得出来支持置顶了。该插件的 <code>GitHub</code> 地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldGNhbi9oZXhvLWdlbmVyYXRvci1pbmRleC1waW4tdG9w\">hexo-generator-index-pin-top</span>。插件安装完之后，只需要在文章头部信息栏内设置 <code>top</code> 属性即可：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 写在最前面</span><br><span class=\"line\">hide: false</span><br><span class=\"line\"><span class=\"section\">top: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<p>这样这篇文章就具有置顶效果了。不过，仅仅只是这么做，文章虽然确实置顶了，但是从文章列表上来看，和普通的文章没什么不同。如果不特意去对比文章发布时间，可能会以为只是最新的文章而已。例如一些说明、通知之类的，为了能有个比较突出的标志，可以在 <code>next/layout/_macro/post.swig</code> 文件中找到以下位置并添加代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-thumb-tack&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: #EB6D39&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">#FFFF00</span>\t&gt;</span>置顶<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/575a6046/2021-11-17-13-47-07.png\" class=\"\">\n\n<p>效果如下:</p>\n<img data-src=\"/posts/575a6046/2021-11-17-13-54-56.png\" class=\"\">\n\n<h2 id=\"关于在Hexo中的小图标\"><a href=\"#关于在Hexo中的小图标\" class=\"headerlink\" title=\"关于在Hexo中的小图标\"></a>关于在<code>Hexo</code>中的小图标</h2><p>使用<code>Hexo</code>搭建的<code>Blog</code>中,都是从专门的图标库中获取:</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZD1nYWxsZXJ5\">国外地址</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5kYXNoZ2FtZS5jb20v\">国内地址</span></li>\n</ul>\n<p>例如在主题的配置文件<code>_config.yml</code>中</p>\n<img data-src=\"/posts/575a6046/2021-11-17-14-01-18.png\" class=\"\">\n\n<p>都是使用的图标库中的图标</p>\n",
            "tags": [
                "blog",
                "hexo",
                "next"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/3d071a12/",
            "url": "https://smile1231.github.io/posts/3d071a12/",
            "title": "使用hexo框架+next主题+githubPage搭建个人博客",
            "date_published": "2021-11-10T14:19:19.000Z",
            "content_html": "<p>我自己的博客是采用了<code>hexo</code>+ <code>Next</code>主题搭建完成，并做了一些简单的配置，这边也将全面从0-&gt;1介绍</p>\n<h1 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装<code>Node</code></h1><p><code>Node</code>的官网为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuL2Rvd25sb2FkLw==\">https://nodejs.org/zh-cn/download/</span>  </p>\n<img data-src=\"/posts/3d071a12/2021-11-13-00-33-44.png\" class=\"\"> \n\n<p>下载自己对应的版本即可，傻瓜式的下一步下一步之后，在终端控制台输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<img data-src=\"/posts/3d071a12/2021-11-13-00-34-52.png\" class=\"\">\n\n<p>说明安装成功，而在这个时候也会给你安装了<code>npm</code>环境，输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/3d071a12/2021-11-13-00-36-59.png\" class=\"\">\n\n<p>此时我们需要将原生的镜像源换为淘宝镜像源，这样能加快下载速度：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置镜像源</span><br><span class=\"line\">npm config set registry=https://registry.npm.taobao.org/</span><br><span class=\"line\"># 查看镜像源</span><br><span class=\"line\">npm config get registry</span><br></pre></td></tr></table></figure>\n\n<p><code>Node</code>环境安装完毕</p>\n<h1 id=\"安装Git并创建github-pages\"><a href=\"#安装Git并创建github-pages\" class=\"headerlink\" title=\"安装Git并创建github pages\"></a>安装<code>Git</code>并创建<code>github pages</code></h1><p>git安装地址 ： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YyLyVFOCVCNSVCNyVFNiVBRCVBNS0lRTUlQUUlODklRTglQTMlODUtR2l0\">https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git</span></p>\n<p><code>github</code>注册这边也不多赘述，不会的小伙伴可以自行百度</p>\n<h2 id=\"创建github项目\"><a href=\"#创建github项目\" class=\"headerlink\" title=\"创建github项目\"></a>创建<code>github</code>项目</h2><h2 id=\"创建responsibility\"><a href=\"#创建responsibility\" class=\"headerlink\" title=\"创建responsibility\"></a>创建<code>responsibility</code></h2><img data-src=\"/posts/3d071a12/2021-11-13-21-03-18.png\" class=\"\">\n\n<img data-src=\"/posts/3d071a12/2021-11-13-21-04-34.png\" class=\"\">\n\n<p>这边我踩了个坑，命名格式好像必须是 <code>owner/owner.github.io</code></p>\n<p>然后<code>responsibility</code>就创建好了</p>\n<h2 id=\"生成token\"><a href=\"#生成token\" class=\"headerlink\" title=\"生成token\"></a>生成<code>token</code></h2><p>按照图片步骤创建<code>token</code></p>\n<img data-src=\"/posts/3d071a12/2021-11-13-21-10-03.png\" class=\"\">\n\n<img data-src=\"/posts/3d071a12/2021-11-13-21-10-54.png\" class=\"\">\n\n<img data-src=\"/posts/3d071a12/2021-11-13-21-33-00.png\" class=\"\">\n\n<p>此时生成的<code>token</code>只会显示这一次，尽量复制保存到本地，据说这个<code>token</code>不开启<code>github Page</code>无法</p>\n<h2 id=\"设置page\"><a href=\"#设置page\" class=\"headerlink\" title=\"设置page\"></a>设置<code>page</code></h2><img data-src=\"/posts/3d071a12/2021-11-15-22-00-27.png\" class=\"\">\n<p>点击<code>Settings</code>，向下拉到最后有个<code>GitHub Pages</code>，点击<code>Choose a theme</code>选择一个主题。然后等一会儿，此时点击图片中打码链接就是你的<code>GitHub Pages</code>地址了。应该是会跳出一个页面出来。</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装<code>Hexo</code></h1><p>选择一个合适的本地位置存在你的<code>Blog</code>源码，比如我就存放在<code>/Users/jinmao/Documents/Blog/blog_source/</code>处，然后输入全局安装<code>hexo</code>脚手架</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装完后输入验证是否安装成功：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/3d071a12/2021-11-15-23-18-45.png\" class=\"\">\n<p>说明安装成功啦！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo 常用指令</span><br><span class=\"line\"></span><br><span class=\"line\">hexo init [folder]  //初始化本地文件夹为网站的根目录 - folder 为可选</span><br><span class=\"line\"></span><br><span class=\"line\">//hexo new 命令用于新建文章，&lt;title&gt;字段需要加双引号</span><br><span class=\"line\">hexo n [layout] &lt;title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate //命令用于生成静态文件，一般可以简写为 hexo g</span><br><span class=\"line\">hexo d -g //指生成后再部署</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server //命令用于启动本地服务器，一般可以简写为hexo s</span><br><span class=\"line\">//-p 选项，指定服务器端口，默认为 4000</span><br><span class=\"line\">//-i 选项，指定服务器 IP 地址，默认为 0.0.0.0</span><br><span class=\"line\">//-s 选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件监视</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean //命令用于清理缓存文件，是一个比较常用的命令</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy //命令用于部署网站，一般可以简写为 hexo d</span><br></pre></td></tr></table></figure>\n<p>说明 ：运行服务器前需要安装 <code>hexo-server </code>插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-server --save</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>hexo -d</code>前需要修改<code>_config.yml</code>配置文件，下面以 <code>git</code> 为例进行说明</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">自定义提交消息，默认为Site</span> <span class=\"attr\">updated:</span> &#123;&#123; <span class=\"string\">now(&#x27;YYYY-MM-DD</span> <span class=\"string\">HH:mm:ss&#x27;)</span> &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>创建一篇新文章,例如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &quot;写在最前面&quot;</span><br></pre></td></tr></table></figure>\n<p>然后会在<code>source/_posts</code>下生成一个<code>markdown</code>文件，在这个文件中使用的是正常的<code>markdown</code>语法。<br>然后依次输入以下步骤：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean //清理缓存</span><br><span class=\"line\"></span><br><span class=\"line\">hexo g //编译生成静态文件</span><br><span class=\"line\"></span><br><span class=\"line\">hexo s //启动本地服务器</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/3d071a12/2021-11-17-00-01-23.png\" class=\"\">\n\n<p><code>command + 左键</code>就可以在浏览器中浏览效果了</p>\n<h1 id=\"设置背景音乐\"><a href=\"#设置背景音乐\" class=\"headerlink\" title=\"设置背景音乐\"></a>设置背景音乐</h1><img data-src=\"/posts/3d071a12/2021-11-21-22-39-25.png\" class=\"\">\n<img data-src=\"/posts/3d071a12/2021-11-21-22-39-51.png\" class=\"\">\n<img data-src=\"/posts/3d071a12/2021-11-21-22-40-14.png\" class=\"\">\n\n<p>我们将音乐插件添加到侧边栏，效果类似于此<code>Blog</code><br>打开我们主题文件：<code>themes\\next\\layout\\_macro\\sidebar.swig找到sidebar-inner</code></p>\n<img data-src=\"/posts/3d071a12/2021-11-21-22-38-07.png\" class=\"\">\n<p>就可以啦！</p>\n",
            "tags": []
        }
    ]
}