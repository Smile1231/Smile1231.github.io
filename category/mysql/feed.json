{
    "version": "https://jsonfeed.org/version/1",
    "title": "JIN MAO 's Blog • All posts by \"mysql\" category",
    "description": "",
    "home_page_url": "https://smile1231.github.io",
    "items": [
        {
            "id": "https://smile1231.github.io/posts/31f95091/",
            "url": "https://smile1231.github.io/posts/31f95091/",
            "title": "Ubuntu中安装卸载Mysql数据库",
            "date_published": "2022-02-13T13:49:51.000Z",
            "content_html": "<h1 id=\"Ubuntu中安装卸载Mysql数据库\"><a href=\"#Ubuntu中安装卸载Mysql数据库\" class=\"headerlink\" title=\"Ubuntu中安装卸载Mysql数据库\"></a><code>Ubuntu</code>中安装卸载<code>Mysql</code>数据库</h1><blockquote>\n<p>启动<code>Mysql</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql start</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关闭<code>Mysql</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql stop</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<blockquote>\n<p>重启<code>Mysql</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mysql卸载\"><a href=\"#Mysql卸载\" class=\"headerlink\" title=\"Mysql卸载\"></a><code>Mysql</code>卸载</h2><ol>\n<li>先卸载 <code>mysql-common</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove mysql-common</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>再卸载(因为我的<code>Mysql</code>是<code>8.0</code>)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get autoremove --purge mysql-server-8.0</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>再用<code>dpkg --list|grep mysql</code>查看，还剩什么就卸载什么</p>\n</li>\n<li><p>最后清除残留数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -l |grep ^rc|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> |sudo xargs dpkg -P </span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Mysql安装\"><a href=\"#Mysql安装\" class=\"headerlink\" title=\"Mysql安装\"></a><code>Mysql</code>安装</h2><h3 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h3><ol>\n<li>更新软件库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure></li>\n<li>安装<code>Mysql</code>服务<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server(这步就已经安装mysql-client)</span><br></pre></td></tr></table></figure></li>\n<li>安装依赖<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   sudo apt install libmysqlclient-dev</span><br><span class=\"line\">   ```      </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 二、检查状态</span></span><br><span class=\"line\">```bash</span><br><span class=\"line\">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure>\n如果出现“无此命令”，输入命令<code>sudo apt install netstat</code></li>\n</ol>\n<img data-src=\"/posts/31f95091/2022-02-13-23-21-16.png\" class=\"\">\n\n<h3 id=\"三、设置Root密码\"><a href=\"#三、设置Root密码\" class=\"headerlink\" title=\"三、设置Root密码\"></a>三、设置<code>Root</code>密码</h3><p>1、进入<code>root</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br></pre></td></tr></table></figure>\n<p>2、进入<code>mysql</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql</span><br></pre></td></tr></table></figure>\n<p>3、配置数据库<code>root</code>权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update mysql.user <span class=\"keyword\">set</span> authentication_string<span class=\"operator\">=</span>PASSWORD(<span class=\"string\">&#x27;123456&#x27;</span>), plugin<span class=\"operator\">=</span><span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> mysql_native_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/31f95091/2022-02-13-23-21-34.png\" class=\"\">\n\n<p>如果显示密码过于简单则需要重新设置密码强度</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SHOW</span> VARIABLES <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/31f95091/2022-02-13-23-21-46.png\" class=\"\">\n\n<blockquote>\n<p>密码的长度是由<code>validate_password.length</code>决定的,但是可以通过以下命令修改</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> validate_password.length<span class=\"operator\">=</span><span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>validate_password.policy</code>决定密码的验证策略,默认等级为<code>MEDIUM</code>(中等),可通过以下命令修改为<code>LOW</code>(低)</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">global</span> validate_password.policy<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<img data-src=\"/posts/31f95091/2022-02-13-23-21-56.png\" class=\"\">\n\n<h3 id=\"四、配置远程连接\"><a href=\"#四、配置远程连接\" class=\"headerlink\" title=\"四、配置远程连接\"></a>四、配置远程连接</h3><p>查看目前是否支持远程连接</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>,host <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/31f95091/2022-02-13-23-22-07.png\" class=\"\">\n\n<p>目前只支持本地连接</p>\n<blockquote>\n<p>更新域属性，<code>&#39;%&#39;</code>表示允许外部访问：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> host<span class=\"operator\">=</span><span class=\"string\">&#x27;%&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span> <span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>执行以上语句之后再执行：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>再执行授权语句：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span><span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>\n<p><code>FLUSH PRIVILEGES;</code> 命令本质上的作用是：</p>\n<p>将当前<code>user</code>和<code>privilige</code>表中的用户信息/权限设置从<code>mysql</code>库(<code>MySQL</code>数据库的内置库)中提取到内存里。</p>\n<p><code>MySQL</code>用户数据和权限有修改后，希望在”不重启<code>MySQL</code>服务”的情况下直接生效，那么就需要执行这个命令。</p>\n<p>通常是在修改<code>ROOT</code>帐号的设置后，怕重启后无法再登录进来，那么直接<code>flush</code>之后就可以看权限设置是否生效。</p>\n<p>而不必冒太大风险。</p>\n<h4 id=\"可能存在的其它问题\"><a href=\"#可能存在的其它问题\" class=\"headerlink\" title=\"可能存在的其它问题\"></a>可能存在的其它问题</h4><p>执行完之后，再用<code>Navicat</code>连接<code>mysql</code>，报错如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client does <span class=\"keyword\">not</span> support authentication protocol requested <span class=\"keyword\">by</span> server；</span><br></pre></td></tr></table></figure>\n<p>报错原因：</p>\n<p><code>mysql8.0</code> 引入了新特性 <code>caching_sha2_password；</code>这种密码加密方式<code>Navicat 12</code>以下客户端不支持；</p>\n<p><code>Navicat 12</code>以下客户端支持的是<code>mysql_native_password</code> 这种加密方式；</p>\n<p>解决方案:</p>\n<ol>\n<li>用如下语句查看<code>MySQL</code>当前加密方式<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span>,plugin <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>;</span><br></pre></td></tr></table></figure>\n<img data-src=\"/posts/31f95091/2022-02-13-23-22-58.png\" class=\"\"></li>\n</ol>\n<p>一般第一行，<code>root</code>加密方式为<code>caching_sha2_password</code>。</p>\n<p>2，使用命令将他修改成<code>mysql_native_password</code>加密模式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> plugin<span class=\"operator\">=</span><span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>再次连接的时候，就成功了。</p>\n<h4 id=\"如果还连接不上\"><a href=\"#如果还连接不上\" class=\"headerlink\" title=\"如果还连接不上\"></a>如果还连接不上</h4><p>通过以上操作后，依然无法连接上，问题可能出在了防火墙上。</p>\n<p>1，<code>MySQL</code>部署在实体服务器上解决方案如下：<br>a.开放<code>MySQL</code>的端口号，默认端口号是<code>3306</code>。<br>b.直接关闭防火墙（慎重操作，不建议。当然测试玩的话就随意了。。。。）</p>\n<p>2，<code>MySQL</code>部署在云计算机上的方案如下：<br>a.以阿里云为例，找到实例，设置安全组，开放端口号即可。</p>\n<h3 id=\"关于开放端口\"><a href=\"#关于开放端口\" class=\"headerlink\" title=\"关于开放端口\"></a>关于开放端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#防火墙开放3306端口</span></span><br><span class=\"line\">iptables -A INPUT -p tcp --dport 3306 -j ACCEPT</span><br><span class=\"line\"><span class=\"comment\">#修改MySQL监听</span></span><br><span class=\"line\">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class=\"line\"><span class=\"comment\">##注释掉bind-address = 127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\">#重启动MySQL</span></span><br><span class=\"line\">sudo /etc/init.d/mysql restart</span><br><span class=\"line\"><span class=\"comment\">#开放MySQL用户远程访问权限</span></span><br><span class=\"line\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\">flush privileges;​</span><br></pre></td></tr></table></figure>\n\n<p>大功告成</p>\n",
            "tags": [
                "Ubuntu",
                "Mysql"
            ]
        },
        {
            "id": "https://smile1231.github.io/posts/69c17d37/",
            "url": "https://smile1231.github.io/posts/69c17d37/",
            "title": "关于事务提交中踩坑",
            "date_published": "2022-02-10T15:38:00.000Z",
            "content_html": "<p>今天在处理一个问题时始终都没有头绪，主要场景是自己的方法中最后需要调用别人的方法进行回调，但是又同时处在一个大事务中，主要我做了以下场景来模拟</p>\n<span id=\"more\"></span>\n\n<p>数据库表结构：</p>\n<img data-src=\"/posts/69c17d37/2022-02-10-23-42-40.png\" class=\"\">\n\n<p>测试代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StudentMapperTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> StudentDao studentDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"meta\">@Transactional(rollbackFor = Exception.class)</span></span><br><span class=\"line\">    <span class=\"meta\">@Rollback(false)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">context01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//查询张三</span></span><br><span class=\"line\">        LambdaUpdateWrapper&lt;Student&gt; updateWrapper0 = <span class=\"keyword\">new</span> LambdaUpdateWrapper&lt;&gt;();</span><br><span class=\"line\">        updateWrapper0.eq(Student::getName,<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Student&gt; students = studentDao.selectList(updateWrapper0);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//对张三进行修改为张三改</span></span><br><span class=\"line\">        LambdaUpdateWrapper&lt;Student&gt; updateWrapper = <span class=\"keyword\">new</span> LambdaUpdateWrapper&lt;&gt;();</span><br><span class=\"line\">        updateWrapper.eq(Student::getName,<span class=\"string\">&quot;张三&quot;</span>)</span><br><span class=\"line\">                .set(Student::getName,<span class=\"string\">&quot;张三改&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        studentDao.update(Student.builder().build(), updateWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//再度查询张三</span></span><br><span class=\"line\">        LambdaUpdateWrapper&lt;Student&gt; updateWrapper1 = <span class=\"keyword\">new</span> LambdaUpdateWrapper&lt;&gt;();</span><br><span class=\"line\">        updateWrapper1.eq(Student::getName,<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">        List&lt;Student&gt; students1 = studentDao.selectList(updateWrapper1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//尝试查询修改后的张三改</span></span><br><span class=\"line\">        LambdaUpdateWrapper&lt;Student&gt; updateWrapper2 = <span class=\"keyword\">new</span> LambdaUpdateWrapper&lt;&gt;();</span><br><span class=\"line\">        updateWrapper2.eq(Student::getName,<span class=\"string\">&quot;张三改&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Student&gt; students2 = studentDao.selectList(updateWrapper2);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>debug</code>结果：</p>\n<img data-src=\"/posts/69c17d37/2022-02-10-23-47-46.png\" class=\"\">\n\n<img data-src=\"/posts/69c17d37/2022-02-10-23-47-01.png\" class=\"\">\n\n<p><strong>我们可以得到虽然事务没有提交但是同一会话查询时依然是修改后的值，但是此时如果为多线程下，别的线程将不会读取到提交事物之前的结果，这就是数据库的隔离性问题</strong>，此时事务没有提交，数据库结果未改变</p>\n<img data-src=\"/posts/69c17d37/2022-02-10-23-50-42.png\" class=\"\">\n\n<p>当然，只有当程序正常运行结束之后，事务才会提交，数据库才会改变：</p>\n<img data-src=\"/posts/69c17d37/2022-02-10-23-51-07.png\" class=\"\">\n",
            "tags": [
                "Java",
                "Mysql事务"
            ]
        }
    ]
}